<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:base="en">
	<title>Lennu.net</title>
	<subtitle>Programming Articles Since 2006</subtitle>
	<link href="https://www.lennu.net/feed/feed.xml" rel="self"/>
	<link href="https://www.lennu.net/"/>
	<updated>2024-01-11T00:00:00Z</updated>
	<id>https://www.lennu.net/</id>
	<author>
		<name>Lennu</name>
		<email>lennunet (at google mail domain)</email>
	</author>
	
	<entry>
		<title>Convert hex value to rgba with opacity</title>
		<link href="https://www.lennu.net/2024/convert-hex-value-to-rgba-with-opacity/"/>
		<updated>2024-01-11T00:00:00Z</updated>
		<id>https://www.lennu.net/2024/convert-hex-value-to-rgba-with-opacity/</id>
		<content type="html">&lt;p&gt;You can convert hex values to have alpha or opacity set to like 0.2 or what ever you want by using the following line of sass:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rgba(#CCCCCC, 0.2);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or if you are using variables then you can do it like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rgba($color-gray, 0.2);
&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Step by step access to TOR network with Tails using VirtualBox</title>
		<link href="https://www.lennu.net/2020/step-by-step-access-to-tor-network-with-tails-using-virtualbox/"/>
		<updated>2020-05-10T00:00:00Z</updated>
		<id>https://www.lennu.net/2020/step-by-step-access-to-tor-network-with-tails-using-virtualbox/</id>
		<content type="html">&lt;p&gt;TOR is a network within the internet created for extreme security which has a lot of features for anonymization. So, it’s a way to browse the internet anonymized, unrecognized and hidden from the authorities. In this post I’m going to access TOR and its onion addresses with Linux Ubuntu.&lt;/p&gt;
&lt;p&gt;So, first install VirtualBox, which makes it possible to start another operating system within your current operating system without actually installing it on your computer. There are plenty of tutorials that you can find on the internet.&lt;/p&gt;
&lt;h2 id=&quot;download-tails&quot; tabindex=&quot;-1&quot;&gt;Download Tails &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2020/step-by-step-access-to-tor-network-with-tails-using-virtualbox/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Accessing TOR is easy by starting up Tails. Its an operating system with features that helps the access to TOR network. First go to &lt;a href=&quot;https://tails.boum.org/install/vm-download/index.en.html&quot;&gt;https://tails.boum.org/install/vm-download/index.en.html&lt;/a&gt; and download the ISO-image.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note that you should always verify the download!&lt;/strong&gt; I used the detailed instructions found from that same link under the subtitle of “See instructions for basic OpenPGP verification”. I used command line to do this.&lt;/p&gt;
&lt;p&gt;Download &lt;a href=&quot;https://tails.boum.org/tails-signing.key&quot;&gt;Tails signing key&lt;/a&gt; and import it to your GnuPGP with &lt;code&gt;gpg --import tails-signing.key&lt;/code&gt;. You should see something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gpg: key xxxx: public key &amp;quot;Tails developers tails@boum.org&amp;quot; imported
gpg: Total number processed: 1
gpg: imported: 1 (RSA: 1)
gpg: no ultimately trusted keys found
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Download OpenPGP signature for your Tails version. This should be found from the original download page. Then execute the following command with modified filenames.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;TZ=UTC gpg --no-options --keyid-format long --verify tails-amd64-4.6.iso.sig tails-amd64-4.6.iso
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You should see this to verify the authenticity of the image. Also check the date is within five days of the latest version, with this version it should be within five days from 2020-05-05.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gpg: Signature made ma 4. toukokuuta 2020 20.45.29 UTC
gpg: using RSA key xxx
gpg: Good signature from &amp;quot;Tails developers tails@boum.org&amp;quot;
gpg: aka &amp;quot;Tails developers (offline long-term identity key) tails@boum.org&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following warning can be ignored.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gpg: WARNING: This key is not certified with a trusted signature!
gpg: There is no indication that the signature belongs to the owner.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Great, now we have downloaded and verified the image.&lt;/p&gt;
&lt;h2 id=&quot;starting-tails-with-virtualbox&quot; tabindex=&quot;-1&quot;&gt;Starting Tails with VirtualBox &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2020/step-by-step-access-to-tor-network-with-tails-using-virtualbox/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Start VirtualBox and click New. Select Linux and Other Linux (64 bit). Give the VirtualBox 2048 MB of RAM and do not add an hard drive.&lt;/p&gt;
&lt;p&gt;Open Settings of the machine just created. Confirm that Enable I/O APIC is enabled in System/Motherboard. Go to Storage, choose Empty and click on the little CD icon dropdown on the right. From the dropdown select “Choose Virtual Optical Disk Drive”. Browse to the downloaded Tails image and select it. Make sure to toggle Live CD/DVD on. Click OK and click big green Start button. Configure your locale settings when prompted and start using Tails.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/m5097RtQmB-1024.avif 1024w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/m5097RtQmB-1024.webp 1024w&quot;&gt;&lt;img alt=&quot;Tails operating system&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/m5097RtQmB-1024.png&quot; width=&quot;1024&quot; height=&quot;743&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h2 id=&quot;using-tails-and-accessing-tor-s-onion-addresses&quot; tabindex=&quot;-1&quot;&gt;Using Tails and accessing TOR’s onion addresses &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2020/step-by-step-access-to-tor-network-with-tails-using-virtualbox/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You should find TOR web browser from the Applications menu.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/qazjXGuKWO-1024.avif 1024w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/qazjXGuKWO-1024.webp 1024w&quot;&gt;&lt;img alt=&quot;Tor web browser&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/qazjXGuKWO-1024.png&quot; width=&quot;1024&quot; height=&quot;744&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;You can use for example https://duckduckgo.com and search for “tor search engine” to find TOR search engines where you can find the onion addresses. Here is a search query using on of the search engines.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/IgwesEGVhR-1024.avif 1024w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/IgwesEGVhR-1024.webp 1024w&quot;&gt;&lt;img alt=&quot;Tor web browser 2&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/IgwesEGVhR-1024.png&quot; width=&quot;1024&quot; height=&quot;740&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;There are a lot of drug related sites, forums and marketplaces easily accessible. It seems that most of the websites don’t work and similar images and texts are used around the websites which indicates that there could be same authors on multiple websites. There is even a forum for stock company insiders where you can sell your information. Mostly the websites are about criminal activity. I don’t want to promote their business on this blog but it can be seen from the image that there are a lot of search results in this area.&lt;/p&gt;
&lt;h2 id=&quot;you-can-get-caught-even-when-using-tor&quot; tabindex=&quot;-1&quot;&gt;You can get caught even when using TOR &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2020/step-by-step-access-to-tor-network-with-tails-using-virtualbox/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;For example, &lt;a href=&quot;https://www.mercurynews.com/2018/05/24/feds-operator-of-bay-area-dark-web-business-busted-for-alleged-drug-trafficking/&quot;&gt;https://www.mercurynews.com/2018/05/24/feds-operator-of-bay-area-dark-web-business-busted-for-alleged-drug-trafficking/&lt;/a&gt; shows a case where police ordered drugs from the dark web, tracked the post office where it had been sent and inspected the surveillance cameras to bust the drug dealer.&lt;/p&gt;
&lt;p&gt;This is probably the simplest way to catch the drug dealer and yet there are still dealers that take the risk.&lt;/p&gt;
&lt;p&gt;There are some alternatives to TOR which are not so known by the public. For example, i2p and freenet.&lt;/p&gt;
&lt;h2 id=&quot;how-tor-works&quot; tabindex=&quot;-1&quot;&gt;How TOR works &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2020/step-by-step-access-to-tor-network-with-tails-using-virtualbox/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;TOR is created from the principle of entry, exit and the nodes between these. The idea is that as there are many nodes between the client and the server responding to the answer it is hard to track who discusses with who.&lt;/p&gt;
&lt;p&gt;There is a directory available for TOR clients that has the list of nodes available. This directory can be fetched in encrypted connection (public key).&lt;/p&gt;
&lt;p&gt;When connecting to a specific address the client chooses random path made from three relay nodes listed in the directory. The message is encrypted three times then at each relay the message is decrypt once making the message plain when the exit node sends it to the wished location. Response is sent through the relay nodes where they encrypt it once on each step, then relay nodes share the encryption and decryption keys with the client which decrypts the message three times to view the message. Note that exit node transfers information in plain text.&lt;/p&gt;
&lt;p&gt;TOR relays use RSA algorithm with key sizes of 1024-bit to secure connections.&lt;/p&gt;
&lt;p&gt;TOR communications is one of the safest to hide one’s identity however there is a threat model for TOR. If adversary could obtain large amount of relay nodes under its observation there could be a vulnerability. This would be an immense task because there currently (5/2020) about 7000 relay nodes and 1000 exit nodes.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This was the fifth assignment of &lt;a href=&quot;http://terokarvinen.com/2020/ict-security-basics-from-trust-to-blockchain-itc4hm003-3001-2020-spring/&quot;&gt;ICT Security Basics&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>CIA Triad and Encryption Examples</title>
		<link href="https://www.lennu.net/2020/cia-triad-and-encryption-examples/"/>
		<updated>2020-05-03T00:00:00Z</updated>
		<id>https://www.lennu.net/2020/cia-triad-and-encryption-examples/</id>
		<content type="html">&lt;p&gt;In ICT-security related matters CIA Triad stands for Confidentiality, Integrity and Availability. These are the core principles that categorize most of the security issues threatening information technologies.&lt;/p&gt;
&lt;p&gt;Confidentiality has are all things related to protecting unauthorized access to information. For example usernames and passwords are created for only authorized users if adversary can get access to a username and password combination the confidentiality has an issue.&lt;/p&gt;
&lt;p&gt;Integrity holds things that protect information from malformation and simply put from bad information. For example adversary might have some way to insert false data into a database, to change their bank account to have million dollars. There are systems specifically build to ensure the integrity of data which compare data between for example two places and triggers an alarm if there’s an issue.&lt;/p&gt;
&lt;p&gt;Availability is the simplest of the triad to grasp on. Availability means that information should be available when it is needed. Adversary might create a denial of service attack that would harm availability of a system. It is hard for an organization to resist this but for example having distributed systems might have an positive effect.&lt;/p&gt;
&lt;h2 id=&quot;unbreakable-cipher&quot; tabindex=&quot;-1&quot;&gt;Unbreakable cipher &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2020/cia-triad-and-encryption-examples/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There aren’t many unbreakable ciphers but &lt;strong&gt;One time pad&lt;/strong&gt; is one of them.&lt;/p&gt;
&lt;p&gt;Pre-shared key, which should have same length or be longer than the message, is shared between sender and receiver. Each character in the message gets a modulo-addition from the shared key. For example with key BC and message AB the cipher is BD. Character A moves one letter to B, and character B moves two letters to D. Now when the secret key is only known by these two an adversary has no way of decoding the cipher.&lt;/p&gt;
&lt;h2 id=&quot;symmetric-encryption-example&quot; tabindex=&quot;-1&quot;&gt;Symmetric encryption example &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2020/cia-triad-and-encryption-examples/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Symmetric encryption is the straightforward give a key and the door will open. You can for example encrypt a zip file with WinRAR where it is using AES 256 encryption. In the user interface give a password and WinRAR will do the encryption.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/7g-wkgxVAP-480.avif 480w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/7g-wkgxVAP-480.webp 480w&quot;&gt;&lt;img alt=&quot;Archive&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/7g-wkgxVAP-480.png&quot; width=&quot;480&quot; height=&quot;478&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h2 id=&quot;asymmetric-encryption-example&quot; tabindex=&quot;-1&quot;&gt;Asymmetric encryption example &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2020/cia-triad-and-encryption-examples/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Asymmetric encryption is something where both parties have a public and a secret key. The public key is used for encrypting the message and the secret key is used for opening that message.&lt;/p&gt;
&lt;p&gt;I made a little example with NodeJS and &lt;a href=&quot;https://www.npmjs.com/package/node-rsa&quot;&gt;https://www.npmjs.com/package/node-rsa&lt;/a&gt;. It uses by default public key cryptography scheme pkcs1-sha256.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;const NodeRSA = require(&#39;node-rsa&#39;);

// {b: 512} means 512 bit length key
const key = new NodeRSA({b: 512})
console.log(&#39;key size:&#39;, key.getKeySize())

const message = &#39;Hello world!&#39;
console.log(&#39;message:&#39;, message)

const encrypted = key.encrypt(message, &#39;base64&#39;)
console.log(&#39;encrypted: &#39;, encrypted)

const decrypted = key.decrypt(encrypted, &#39;utf8&#39;)
console.log(&#39;decrypted: &#39;, decrypted)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The output of this script it this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;key size: 512
message: Hello world!
encrypted: Di0USm6XxwV+OgpBteuJIBjDPVaLjhviJNRcDKYHQXGEPSeSde+kMHKAkDkcZNk+7AcL5OuQ0+CcBRyz3EUl8A==
decrypted: Hello world!
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;secure-ciphers&quot; tabindex=&quot;-1&quot;&gt;Secure ciphers &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2020/cia-triad-and-encryption-examples/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are cracked ciphers and then there are the secure ones. The history of cryptography tells that most of the ciphers are eventually broken so organizations should be monitoring the cryptography news to know when to change their ciphers.&lt;/p&gt;
&lt;p&gt;For example AES and Twofish are considered secure encryption algorithms. MD5 and DES are examples of insecure encryption standards. One should always check for the security of the chosen algorithm before taking it into use.&lt;/p&gt;
&lt;h2 id=&quot;diffie-and-hellman-s-1976-paper-new-directions-in-cryptography&quot; tabindex=&quot;-1&quot;&gt;Diffie and Hellman’s 1976 paper New Directions in Cryptography &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2020/cia-triad-and-encryption-examples/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In their paper in 1976 the idea Diffie and Hellman introduced was the key exchange problem and how to solve it. It is called Diffie–Hellman key exchange. Before this the secure keys were transferred via physical means using paper or a trustee. The paper introduces a method where the keys can be transferred without the two parties having no prior knowledge of one another.&lt;/p&gt;
&lt;h2 id=&quot;suspicious-encryption-products&quot; tabindex=&quot;-1&quot;&gt;Suspicious encryption products &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2020/cia-triad-and-encryption-examples/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There should be suspicion when choosing any encryption tools. The company behind it should be reputable and the product should have users. This kind of software could control vital information and if the product is somehow compromised the information could be lost or it could used for blackmailing. For example I made a couple of years ago a software that encrypts messages using applied Data Encryption Standard &lt;a href=&quot;https://www.lennu.net/data-encryption-standard-made-with-key-sizes-of-14-bits/&quot;&gt;https://www.lennu.net/data-encryption-standard-made-with-key-sizes-of-14-bits/&lt;/a&gt;. I published the code but still I wouldn’t recommend it to be used since it is quite suspicious and the author hasn’t kept it up to date.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This was the fourth assignment of &lt;a href=&quot;http://terokarvinen.com/2020/ict-security-basics-from-trust-to-blockchain-itc4hm003-3001-2020-spring/&quot;&gt;ICT Security Basics&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>WebGoat Access Control Flaws and Dangers of Eval</title>
		<link href="https://www.lennu.net/2020/webgoat-access-control-flaws-and-dangers-of-eval/"/>
		<updated>2020-04-26T00:00:00Z</updated>
		<id>https://www.lennu.net/2020/webgoat-access-control-flaws-and-dangers-of-eval/</id>
		<content type="html">&lt;p&gt;In this post I’ll try out four different WebGoat assignments and analyze them in relation to OWASP 10 and the real world.&lt;/p&gt;
&lt;h2 id=&quot;using-an-access-control-matrix&quot; tabindex=&quot;-1&quot;&gt;Using an Access Control Matrix &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2020/webgoat-access-control-flaws-and-dangers-of-eval/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This assignment can be solved just by trying out different users and finding out which of them can access Account Manager. The answer is Larry.&lt;/p&gt;
&lt;p&gt;This is a OWASP 10 Broken Authentication problem because any user can assume the role of Larry just by trying out.&lt;/p&gt;
&lt;p&gt;Similar kind of vulnerability could be found on any system where access is not restricted with password or similar mechanism. For example on my &lt;a href=&quot;https://www.lennu.net/security-incident-of-zoom-video-conferences-video-files-found-from-a-search-engine/&quot;&gt;Zoom incident post&lt;/a&gt; there was a case that just by knowing the URL the adversary could watch private videos. In my opinion this is a very common issue and secrets are lying around in the internet for any explorer to find.&lt;/p&gt;
&lt;p&gt;This could easily be prevented by protecting private information with passwords or some other authentication mechanism. For example in this WebGoat exercise there should’ve been a password field and a server side check for it before revealing the access to Account Manager.&lt;/p&gt;
&lt;h2 id=&quot;bypass-a-path-based-access-control-scheme&quot; tabindex=&quot;-1&quot;&gt;Bypass a Path Based Access Control Scheme &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2020/webgoat-access-control-flaws-and-dangers-of-eval/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The idea here is to access private file called &lt;code&gt;WEB-INF/spring-security.xml&lt;/code&gt; in the underlying filesystem. As I knew that this file would probably be somewhere under the current directory where the software is running I just tried different lengths of sub directory command. This can be achieved by modifying the Document object model with browser developer tools. Change one of the &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; elements in &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; to have value of &lt;code&gt;../../../../../WEB-INF/spring-security.xml&lt;/code&gt; and select and click View File.&lt;/p&gt;
&lt;p&gt;This is a OWASP 10 Broken Access Control issue because server lets users access files outside the web directory.&lt;/p&gt;
&lt;p&gt;This could be used very maliciously by an attacker to find out private information from the server. For example to look for database files and downloading them from the server. I think it used to be more common but now a lot of the web frameworks in use protect users automatically from this.&lt;/p&gt;
&lt;p&gt;It can be prevented by using &lt;code&gt;.htaccess&lt;/code&gt; file by configuring the users to only have access to certain directories. Also it is necessary to have proper role and user management active within the software that is used to publish such websites. Lastly one shouldn’t make such programs that directly point to file paths withing the system. The accessible files should be saved to a database for example.&lt;/p&gt;
&lt;h2 id=&quot;bypass-presentational-layer-access-control&quot; tabindex=&quot;-1&quot;&gt;Bypass Presentational Layer Access Control &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2020/webgoat-access-control-flaws-and-dangers-of-eval/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In this WebGoat assignment the user Tom needs to be deleted. I found it quite easy and mostly guessed that by changing the value of the button you can send different commands to the server. You login to Tom’s account and go to ViewProfile where you open browser’s developer tools and edit the button of EditProfile. Change button’s value from &lt;code&gt;EditProfile&lt;/code&gt; to &lt;code&gt;DeleteProfile&lt;/code&gt; and click the button.&lt;/p&gt;
&lt;p&gt;As the title says this is OWASP 10 Broken Access Control issue.&lt;/p&gt;
&lt;p&gt;I think this vulnerability doesn’t come visible to normal users as it requires code modifications but in real life this can be done very easily. For example it could be interesting to go important services like bank websites and try this out. There could be any actions available for the user they didn’t know of. For example &lt;code&gt;GiveAdminPermissions&lt;/code&gt; could be nice. As was stated before Broken Access Control is usually protected by good frameworks but mistakes do happen and something like this where user has greater access to the software happen probably quite often.&lt;/p&gt;
&lt;p&gt;Modifying the source code of a website can be considered a malicious attempt and it’s important to protect against these kind of security issues. This can be ensured by making sure logged in users are assigned only the privileges they need. Software should follow least privilege principle which means in practice that software developer should start always from zero privileges when creating a role and give privileges when needed.&lt;/p&gt;
&lt;h2 id=&quot;dangerous-use-of-eval&quot; tabindex=&quot;-1&quot;&gt;Dangerous Use of Eval &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2020/webgoat-access-control-flaws-and-dangers-of-eval/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In this WebGoat task the mission is to inject code into the web browser. The requirement is to use alert to view document.cookie. I looked into the code and found out a clue that the software is using eval. The solution is to insert &lt;code&gt;543&#39;);alert(document.cookie);(&#39;&lt;/code&gt; into the three digit access code input field.&lt;/p&gt;
&lt;p&gt;This is a classic OWASP 10 Cross-Site Scripting XSS issue. In this task we are running malicious code on the users browser to view cookie information.&lt;/p&gt;
&lt;p&gt;If some mechanism allows the attacked to modify users browser then in real life an attacker could for example send data from the browser or modify the browser so that user would do something harmful. Also any kind of intrusion the organizations web pages is very harmful as it shows weakened security in the organization. This kind of issues come and go since web browsers protect users many of the common cross-site scripting issues but web developer can accidentally build such vulnerabilities for the attackers.&lt;/p&gt;
&lt;p&gt;Companies may protect against this kind of issue by ensuring code quality is good and all external libraries and use of them is identified and researched. Adversaries are interested of web pages where there are a lot of traffic and try find all the security holes available. Also the use of eval should be forbidden in any user initiated context as its very insecure function.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This was the third assignment of &lt;a href=&quot;http://terokarvinen.com/2020/ict-security-basics-from-trust-to-blockchain-itc4hm003-3001-2020-spring/&quot;&gt;ICT Security Basics&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Strategic approach on ICT security</title>
		<link href="https://www.lennu.net/2020/strategic-approach-on-ict-security/"/>
		<updated>2020-04-17T00:00:00Z</updated>
		<id>https://www.lennu.net/2020/strategic-approach-on-ict-security/</id>
		<content type="html">&lt;p&gt;The way of operationally approaching ICT security discussions with executives has become obsolete. Operational means acting on threats, vulnerabilities, risks and audits as they come and interacting with the organization with references to the details of the security issues. This style of approach is valid for smaller organizations but even for small organizations it can become quite overwhelming.&lt;/p&gt;
&lt;p&gt;This style of approach can be considered bad because it is not valued in the organization. Executives of an organization doesn’t care what security issues are handled and how. They care that the security is good and it doesn’t affect the business. New security standards can be expensive and difficult to manage. Organizations usually think that these are just something the security people invent as they can’t see the profit in them. Operational approach doesn’t reveal the true purpose of why these changes must be made.&lt;/p&gt;
&lt;h2 id=&quot;strategic-approach&quot; tabindex=&quot;-1&quot;&gt;Strategic approach &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2020/strategic-approach-on-ict-security/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Strategic approach can be seen more as an co-operative way of handling ICT security within the organization. Strategic approach means that the security issues are identified and reported in relation to the assets they are supposed to protect. This kind of approach merges security to the business.&lt;/p&gt;
&lt;p&gt;The key to approaching security on strategic way is to communicate within the organization how security issues are related to the business the organization does. Instead of talking about hacker codes and certificate names in strategic approach the security experts should be focusing on how the business benefits from these security related matters. The approach can be followed by working together and discussing how some ICT security related issue can be resolved within the organization.&lt;/p&gt;
&lt;p&gt;The biggest problem of operational approach is that every security related matter is a problem. Strategic approach is a new perspective of looking at ICT security for the whole organization. It should make ICT security seen as a vital part of the organization, and not just stack of problems handled one by one.&lt;/p&gt;
&lt;h2 id=&quot;business-case-example&quot; tabindex=&quot;-1&quot;&gt;Business case example &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2020/strategic-approach-on-ict-security/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Organization XYZ has security issues every month. Most of the issues are non-updated software that has severe security issues in them. Hackers and other bad actors have caused multiple interruptions to the business of XYZ and it has began to affect negatively on their customer experience and overall happiness.&lt;/p&gt;
&lt;p&gt;XYZ’s security team is dealing with the issues one by one and reporting the incidents and updated software to the managers as completed tasks. New standards and updates are coming weekly and security team has hard time finding the time to complete these issues. The organization doesn’t value the work of the security team because there seems to be more issues all the time and the required time and funds seems to be spent on wrong things because there’s still security issues all the time.&lt;/p&gt;
&lt;p&gt;Some queries come from the software department who are in need of auditing systems and asking for guidance. The security team can only answer briefly with incomplete answers and usually says “no” to every inquiry about a new feature to come. Software development team also hides some of the security related matters and pieces of software from the security team as they don’t trust their expertise and doesn’t value their negative attitude and input to the inquiries.&lt;/p&gt;
&lt;p&gt;XYZ’s security team has to change and especially change how the organization sees their value and input to the organization’s security matters, and how the organization sees their value inside the organization. The security team decides to try to change their approach from their old way of operation approach to more strategic approach.&lt;/p&gt;
&lt;p&gt;They first start by changing how they report and discuess the security issues they have handled within the organization. They report them as not fixing a certain problem but more like ensuring that the business wasn’t affected by the this certain security issue.&lt;/p&gt;
&lt;p&gt;Next they create an investment map that shows how the security matters have affected and will affect in the future to the business. The map has invest costs of and their value in possible lost revenue if these are not executed with information which parts of the organization this affects.&lt;/p&gt;
&lt;p&gt;They change their approach to the software development and business by entering the business discussions and inserting security as a merged part of every business project. They’ll have dedicated security experts within software development teams and also make their way to the executive boards. They start the auditing processes of systems very early on and make less use of third party audit companies.&lt;/p&gt;
&lt;h3 id=&quot;outcomes&quot; tabindex=&quot;-1&quot;&gt;Outcomes &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2020/strategic-approach-on-ict-security/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Organization XYZ still has some security issues but they have managed to tackle most of them. By integrating ICT security to the business and development endeavors the security team has established their value and place withing the organization.&lt;/p&gt;
&lt;p&gt;Their change of approach has given the executives more visibility of the ICT security and even some new knowledge about the matter. The security team has a board member who translates many of the issues to the other executives. The ICT security map helps the team and the whole organization by having clear vision what things in security are important and which can be done on a later date.&lt;/p&gt;
&lt;p&gt;The development teams has new trust for the security team and think security is part of the software development. They usually do security related issues before the security experts get a chance to notify them which means that the software development is interested to protect their software and has learned a lot.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2020/strategic-approach-on-ict-security/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In my opinion operational approach is something every organization should avoid because it’s not capable of handling security issues and the organization can’t get any valuable insight from that approach to help in decision making. Strategic approach is much better translating problems and the fact that security is a vital part of every business.&lt;/p&gt;
&lt;p&gt;Strategic approach is something that requires a bit of work form the management of ICT security but it’s also something that pays off easily to the rest of the organization. Well structured ICT security within the organization is something that is known and valued throughout the organization, and that is also how ICT security works best and can affect the organization in the most positive ways.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This was the second assignment of &lt;a href=&quot;http://terokarvinen.com/2020/ict-security-basics-from-trust-to-blockchain-itc4hm003-3001-2020-spring/&quot;&gt;ICT Security Basics&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Security incident of Zoom video conferences’ video files found from a search engine</title>
		<link href="https://www.lennu.net/2020/security-incident-of-zoom-video-conferences-video-files-found-from-a-search-engine/"/>
		<updated>2020-04-04T00:00:00Z</updated>
		<id>https://www.lennu.net/2020/security-incident-of-zoom-video-conferences-video-files-found-from-a-search-engine/</id>
		<content type="html">&lt;p&gt;On April 3, 2020, Washington Post &lt;a href=&quot;https://www.washingtonpost.com/technology/2020/04/03/thousands-zoom-video-calls-left-exposed-open-web/&quot;&gt;reported&lt;/a&gt; of a security incident of saved videos of Zoom video conferencing tool found in a search engine.&lt;/p&gt;
&lt;p&gt;The videos were stored in a separate online storage that was accessed by a search engine which then listed all of the videos in there into its records of web pages. Apparently the storages were publicly available Amazon Web Services’s file buckets.&lt;/p&gt;
&lt;p&gt;The person who contacted Washington Post about the matter found this by applying a naming pattern of the saved videos into the search engine and found over 15 000 results of saved videos. Zoom uses identical naming pattern for all of its saved videos which is the crucial security incident here.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Threat actor: can be anybody who sees the content of a private video and starts to act in a malicious way&lt;/li&gt;
&lt;li&gt;Exploit: access to private information found from the videos (at least the threat actor has to watch them)&lt;/li&gt;
&lt;li&gt;Vulnerability: identical naming convention in the saved videos of Zoom conferences and making the available to search engines&lt;/li&gt;
&lt;li&gt;Impact: any secret of the users could have been there&lt;/li&gt;
&lt;li&gt;Risk: probably most of the videos don’t contain valuable information to any threat actor so the risk is quite small for Zoom users&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;cyber-kill-chain&quot; tabindex=&quot;-1&quot;&gt;Cyber kill chain &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2020/security-incident-of-zoom-video-conferences-video-files-found-from-a-search-engine/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is a scenario that could have happened or can happen if one of the video files for example contained user bank account details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Recoinnassance:
&lt;ul&gt;
&lt;li&gt;Vulnerability was found by analyzing naming convention of saved video files and using it to find other video files from a search engine.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Weaponization:
&lt;ul&gt;
&lt;li&gt;Creating a AI that greps all the spoken language into text files from the videos.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Delivery:
&lt;ul&gt;
&lt;li&gt;Finding that a user uses certain services with a certain username and other details.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Exploitation:
&lt;ul&gt;
&lt;li&gt;Delivering a valid looking email containing the information about the target and placing a link to a trojan service.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Installation:
&lt;ul&gt;
&lt;li&gt;User going to the web service and giving more sensitive information about the user.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Command &amp;amp; Control:
&lt;ul&gt;
&lt;li&gt;For example accessing user’s bank account.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Actions on objectives:
&lt;ul&gt;
&lt;li&gt;Money transactions.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;mittre-att-and-ck-specifications-of-the-incident&quot; tabindex=&quot;-1&quot;&gt;MITTRE ATT&amp;amp;CK specifications of the incident &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2020/security-incident-of-zoom-video-conferences-video-files-found-from-a-search-engine/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Tactics&lt;/strong&gt; are the technical goals the adversary is having. In this case the adversary might have had exact goal to find out specific videos of specific users as they have noticed that the videos are all available with correct links.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Techniques&lt;/strong&gt; the are ways how the technical goals (tactics) are being achieved. Search engines with search keywords of the naming pattern of the video files of Zoom were used to find out other videos as they had been accessed by search engines and indexed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Procedures&lt;/strong&gt; are specific implementations of techniques for example these by creating a bot that does search engine queries of the Zoom video naming pattern and saves information about the results for the adversary.&lt;/p&gt;
&lt;h2 id=&quot;it-s-human-nature-to-want-to-find-flaws-and-exploit-them&quot; tabindex=&quot;-1&quot;&gt;It’s human nature to want to find flaws and exploit them &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2020/security-incident-of-zoom-video-conferences-video-files-found-from-a-search-engine/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In security the first and foremost rule is that there will be people who want to exploit and try to break in to your system. When system developers accept that someone is going to take advantage of every little security hole in the system they are developing then they start to take things seriously.&lt;/p&gt;
&lt;p&gt;Humans are explorers by nature. We want to know how something works and how it is built. We are also lazy and if we find a vulnerability of something then we tend to use that in our advantage.&lt;/p&gt;
&lt;p&gt;This should be good reminder for anyone working in the security industry: we are not fighting against bots, we are fighting against people who make the bots.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This was the first assignment of &lt;a href=&quot;http://terokarvinen.com/2020/ict-security-basics-from-trust-to-blockchain-itc4hm003-3001-2020-spring/&quot;&gt;ICT Security Basics&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Main points of TOGAF</title>
		<link href="https://www.lennu.net/2020/main-points-of-togaf/"/>
		<updated>2020-03-03T00:00:00Z</updated>
		<id>https://www.lennu.net/2020/main-points-of-togaf/</id>
		<content type="html">&lt;p&gt;TOGAF is a enterprise architecture standard that is fully free and open for any organization to use. It is developed by The Open Group and the first version was published in 1995. The standard is full and works fine on its own but most organizations tend to use just parts of it or just certain part to fill their enterprise architecture models. The development group consists of a wide spectrum and the result represents the needs of the whole community of these stakeholders.&lt;/p&gt;
&lt;p&gt;TOGAF standard defines enterprise architecture to four domains that are usually found from other enterprise architecture standards too and widely accepted as the common subsets. The business architecture which consists of business models and processes. The data architecture which consists of all data objects and assets the organization holds. The application architecture which consists of applications, how they are deployed, where they are deployed, how they work together and how they are related to business. The technology architecture consists of overview of software and hardware and how they relate and work within the previous domains.&lt;/p&gt;
&lt;p&gt;TOGAF provides a method for developing the TOGAF standardized architectures. The method is used for creating a new architecture, developing already established, moving from one architecture to another and monitoring how architecture is developing. The method is simply defining and inspecting the results of the created architecture with response to business objectives. The method is similar to agile development methodologies where the development processes are continuous and iterative cycle. However as it is a controlled development method it has phases which define the continuous cycle. The phases go from the preliminary phase which describes the architecture principles and architecture vision to through the specific domains and their development and migration phases.&lt;/p&gt;
&lt;p&gt;The TOGAF architecture content framework is a model for all the content that is produced during the continuous architecture building process. During the process mentioned above there are a lot of material that is produced. This material can quickly end up unresolvable and by using the content framework is is ensured that the materials don’t get mixed up.&lt;/p&gt;
&lt;p&gt;The previously mentioned are the main points of TOGAF but there are a lot of more to TOGAF. Enterprise continuum is a way to classify architectures and their documents into a wider context. Architecture repository is store for all the outputs and creations of the architecture development method. TOGAF architecture capability is a model to define the organization roles and properties in order to ensure enterprise architecture is deployed and correctly used all around the organization. TOGAF provides a first class standard for creating, maintaining and developing enterprise architectures. Most enterprise architecture standards focus on what are the deliverables of the architecture. The difference with TOGAF is that it focuses a lot into the architecture development method and how the using organization gets to create the architecture the need. The generic approach of TOGAF ensures it suits well to majority of use cases and it doesn’t restrict itself by generalizing the architecture and the deliverables to a too strict boundaries.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Terraform: Quoted type constraints are deprecated</title>
		<link href="https://www.lennu.net/2020/terraform-quoted-type-constraints-are-deprecated/"/>
		<updated>2020-01-30T00:00:00Z</updated>
		<id>https://www.lennu.net/2020/terraform-quoted-type-constraints-are-deprecated/</id>
		<content type="html">&lt;p&gt;This warning:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Interpolation-only expressions are deprecated
on somewhere.tf line 165, in variable &amp;quot;some_variable&amp;quot;:
  165:   type    = &amp;quot;list&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Is produced by the fact that type definitions and constraints should not be quoted (placed withing quotemarks) as it used to be.&lt;/p&gt;
&lt;p&gt;To fix this issue you should just remove the quotemarks around the type constraint.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;type    = list
&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Terraform: Interpolation-only expressions are deprecated</title>
		<link href="https://www.lennu.net/2020/terraform-interpolation-only-expressions-are-deprecated/"/>
		<updated>2020-01-30T00:00:00Z</updated>
		<id>https://www.lennu.net/2020/terraform-interpolation-only-expressions-are-deprecated/</id>
		<content type="html">&lt;p&gt;Terraform is updating constantly and code styles are getting reworked all the time. This update was a very good one and you should definitely start using it as it makes your code more readable.&lt;/p&gt;
&lt;p&gt;You may get warning like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Interpolation-only expressions are deprecated
on some_terraform_file.tf line 13, in resource &amp;quot;in_some_resouce&amp;quot; &amp;quot;some_name&amp;quot;:
   13:   something = &amp;quot;${variable}&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This means that variables can now be given without interpolation (without quotation marks and the dollar sign). To fix this just remove the interpolation. This is actually very good deprecation since the old style is very bad and misleading code style.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;something = variable
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The interpolation syntax should still be used if you want to create actual strings with variables in them.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Global variables with less-loader in Webpack</title>
		<link href="https://www.lennu.net/2020/global-variables-with-less-loader-in-webpack/"/>
		<updated>2020-01-30T00:00:00Z</updated>
		<id>https://www.lennu.net/2020/global-variables-with-less-loader-in-webpack/</id>
		<content type="html">&lt;p&gt;Less is a compiler that produces css files. It is usually used with webpack or some other tool that automates development procedures. With webpack one usually uses less-loader which loads all the less files and compiles them to one css file (this is the default usage).&lt;/p&gt;
&lt;p&gt;To pass global variables to less-loader and by that to all less files you can introduce &lt;code&gt;globalVars&lt;/code&gt; property to less-loader’s configuration.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;webpack config:
...
{
  loader: &#39;less-loader&#39;,
    options: {
    paths: [path.resolve(__dirname, &#39;src&#39;)],
    globalVars: {
      hereIsMyCustomVariable: &#39;blue&#39;,
      variablesLocation: &#39;./path-to-your/variables.less&#39;
    }
  }
}
...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With this configuration you have two global parameters &lt;code&gt;variablesLocation&lt;/code&gt; and &lt;code&gt;hereIsMyCustomVariable&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The other global &lt;code&gt;hereIsMyCustomVariable&lt;/code&gt; can be used like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;body {
  background: @hereIsMyCustomVariable;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But a very nice use case and example of the power of this feature is to pass name of a less file that contains other variables. So you can import that file within your less file. So the &lt;code&gt;variablesLocation&lt;/code&gt; is actually a file path to your variables.less file that can be imported like this within other less files.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;variables.less:
@myCoolVariable: #000000;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;something.less:
@import (reference) &#39;@{variableslocation}&#39;;
body {
  background: @myCoolVariable;
}
&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Simple String as JSON from Spring Rest Controller in Kotlin</title>
		<link href="https://www.lennu.net/2020/simple-string-as-json-from-spring-rest-controller-in-kotlin/"/>
		<updated>2020-01-22T00:00:00Z</updated>
		<id>https://www.lennu.net/2020/simple-string-as-json-from-spring-rest-controller-in-kotlin/</id>
		<content type="html">&lt;p&gt;Spring or Spring Boot usually by default transforms items to JSON. However if you return simple String like “cool” then that is not turned into JSON like here.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@GetMapping(&amp;quot;/cool&amp;quot;)
fun cool(): String {
    return &amp;quot;cool&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example it is returned as plain text which makes it hard for the caller to handle because the API was supposed to be JSON API. There are two ways to go around this.&lt;/p&gt;
&lt;p&gt;The first method is stringify the text to JSON using Kotlin’s internal stringify method and then return it.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@GetMapping(&amp;quot;/cool&amp;quot;)
fun cool(): String {
    return stringify(&amp;quot;cool&amp;quot;)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or do if you want to automatically do this then you can configure Spring to remove &lt;code&gt;StringHttpMessageConverter&lt;/code&gt; which is responsible for plain string objects. This was the next converter gets the job and usually this is JSON.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// WebMvcConfiguration.kt

@Component
class WebMvcConfiguration : WebMvcConfigurationSupport() {
    override protected fun extendMessageConverters(converters: MutableList&amp;lt;HttpMessageConverter&amp;lt;*&amp;gt;&amp;gt;) {
        converters.stream()
            .filter { c -&amp;gt; c is StringHttpMessageConverter }
            .findFirst().ifPresent(Consumer&amp;lt;HttpMessageConverter&amp;lt;*&amp;gt;&amp;gt; { converters.remove(it) })
    }
}
&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Historical evolution of analytics</title>
		<link href="https://www.lennu.net/2019/historical-evolution-of-analytics/"/>
		<updated>2019-09-17T00:00:00Z</updated>
		<id>https://www.lennu.net/2019/historical-evolution-of-analytics/</id>
		<content type="html">&lt;p&gt;The first occurrences of analysis of statistics are found from the 19th century by Frederick Winslow Taylor who performed time management exercises. Even Henry Ford took some interest into the assembly lines and how performant they were. The breakthrough came in the 1970s when Edgar F. Codd created relational databases which held mostly structured data and allowed users for retrieve the data by writing SQL. These kind of databases and SQL are still very much in use even today.&lt;/p&gt;
&lt;p&gt;With the Internet there was a big need for storing different kinds of data and this wasn’t the area for relational databases which are not very good at translating unstructured data into searchable. NoSQL databases followed this development with their ease of usage and very good flexibility. NoSQL systems then led into the era of big data and all the things around it. In the ever growing era of the Internet many organizations started to go online and they had perfect opportunity to start to collect data. In the late 2000s there was a great need for software that could serve as platform for all of the data gathered. This is also the time when business analytics started to get really popular. With all the data the organizations started to improve their businesses by making decisions based on data which is called business intelligence. Business intelligence was known from the late 1980s but it hadn’t made its way properly and was waiting for the right tools.&lt;/p&gt;
&lt;p&gt;Currently the latest tools of analytics are in the cloud. Cloud services rent services rather than selling you them for good. They offer endless data warehouses and tools for data mining and other analytic endeavours.&lt;/p&gt;
&lt;p&gt;Business analytics is more about looking at the data and inspecting why something happened even to predict or assume something about the future. Business intelligence is looking at the data and seeing the events leading up to something and not so much about why these events were taken.&lt;/p&gt;
&lt;h2 id=&quot;what-is-data-visualization&quot; tabindex=&quot;-1&quot;&gt;What is data visualization? &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2019/historical-evolution-of-analytics/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Visualizing the data collected is the easiest way to understand it. When an organization has a lot of data and they want to explore it or get “see it” it is easiest done by visualizing it. This usually means creating graphs, maps or charts. The latest ways of displaying data or visualizing it are usually full of information. The graphs are interactive and even update while looked at, some even allow you to do deeper analysis of them.&lt;/p&gt;
&lt;p&gt;Visualization can be done with well known Microsoft Excel but this is rather old and dull way of representing data. Now there are business intelligence platforms such as Tableau or Qlik which focus heavily on visualization and allowing the user to pick and choose the data which is interesting. Visualization is important to humans and especially data scientists since it’s easy for us to recognize that something is going as planned from a graph rather than looking at the raw data.&lt;/p&gt;
&lt;p&gt;There are dashboards everywhere now and there are new use cases all the time. Some businesses might be looking at click through rate of a webpage and some might be looking at the performance indicators of company. It’s increasingly popular to automate the data visualization and let the system create the graphs and pictures for you. The data behind the systems have started to understand different kinds of data and are usually ready to offer the best insights that the user should be looking at in their dashboard.&lt;/p&gt;
&lt;h2 id=&quot;what-is-machine-learning&quot; tabindex=&quot;-1&quot;&gt;What is machine learning? &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2019/historical-evolution-of-analytics/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Machine learning is a way to make systems learn from their experiences. In other words its a way to use data to make predictions.&lt;/p&gt;
&lt;p&gt;To be able to teach a machine, one would require a lot of data. This data is poured into a software that is an algorithm that tries to figure out the wanted outcome. This algorithm may have been given instructions of the matter and how to react to different cases of the data. Or it might be completely free of rules and the purpose of the algorithm is just to find out patterns of the given data.&lt;/p&gt;
&lt;p&gt;Features in machine learning are the facts about the subject and output variables are the facts that have been calculated from these features. Instance is a combination of these two – a single instance of the training data.&lt;/p&gt;
&lt;p&gt;For example you could have a vast collection of pictures of animals and some data with them. Some of them are pictures of a cat and the other ones are pictures of a dog. The images come with their features such as the subspecies of the animal, where it’s from, how old is it, the shape of the animal and the colors of it. The output variable or variables are then the fact that is this a picture of a cat or a dog. These images, their features and the output data are called the training data. Now the machine goes through this data and has some kind of an answer (model) what a cat might look like. When you enter another picture of a cat into the algorithm the machine can try to guess based on the earlier data was the picture taken of a cat or not.&lt;/p&gt;
&lt;p&gt;Machine learning is a very important and developing part of business analytics because it is one form of artificial intelligence and can help with decision making within the business. A business might want to know what a certain customer is keen on doing next in a website. This business could create a machine learning model of all of the previous users’ behaviors. Next when a customer visits their website the behavior of that single customer is inserted into the algorithm and the website kind of guides the user to go to the next thing that the algorithm predicts the user would want to go to. These kind of applications make machine learning a powerful tool within business analytics.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>vscode launch configurations for debugging and running jest tests</title>
		<link href="https://www.lennu.net/2019/vscode-launch-configurations-for-debugging-and-running-jest-tests/"/>
		<updated>2019-09-10T00:00:00Z</updated>
		<id>https://www.lennu.net/2019/vscode-launch-configurations-for-debugging-and-running-jest-tests/</id>
		<content type="html">&lt;p&gt;If you use Jest and vscode it might get very slow and frustrating to run the tests always from the command line. With these launch configurations you can run single jest tests or all of them inside vscode.&lt;/p&gt;
&lt;p&gt;You can add the configuration from here:&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/VZyPU4I2O3-591.avif 591w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/VZyPU4I2O3-591.webp 591w&quot;&gt;&lt;img alt=&quot;vscode debugging&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/VZyPU4I2O3-591.png&quot; width=&quot;591&quot; height=&quot;174&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;The file will most probably be located inside your workspace at the root level: &lt;code&gt;your-project/.vscode/launch.json&lt;/code&gt; – this is where vscode is looking for the config and you can even create the folder and file yourself.&lt;/p&gt;
&lt;p&gt;The following snippet has my usual launch config for projects using jest. It includes two different configurations – one for running just the current file and one for running all the tests.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;version&amp;quot;: &amp;quot;0.2.0&amp;quot;,
  &amp;quot;configurations&amp;quot;: [
    {
      &amp;quot;type&amp;quot;: &amp;quot;node&amp;quot;,
      &amp;quot;request&amp;quot;: &amp;quot;launch&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;Jest Current File&amp;quot;,
      &amp;quot;program&amp;quot;: &amp;quot;${workspaceFolder}/node_modules/.bin/jest&amp;quot;,
      &amp;quot;args&amp;quot;: [
        &amp;quot;${fileBasenameNoExtension}&amp;quot;,
        &amp;quot;--config&amp;quot;,
        &amp;quot;${workspaceRoot}/jest.config.js&amp;quot;
      ],
      &amp;quot;console&amp;quot;: &amp;quot;integratedTerminal&amp;quot;,
      &amp;quot;internalConsoleOptions&amp;quot;: &amp;quot;neverOpen&amp;quot;,
      &amp;quot;disableOptimisticBPs&amp;quot;: true
    },
    {
      &amp;quot;type&amp;quot;: &amp;quot;node&amp;quot;,
      &amp;quot;request&amp;quot;: &amp;quot;launch&amp;quot;,
      &amp;quot;name&amp;quot;: &amp;quot;Jest All&amp;quot;,
      &amp;quot;program&amp;quot;: &amp;quot;${workspaceFolder}/node_modules/.bin/jest&amp;quot;,
      &amp;quot;args&amp;quot;: [
        &amp;quot;--config&amp;quot;,
        &amp;quot;${workspaceRoot}/jest.config.js&amp;quot;
      ],
      &amp;quot;console&amp;quot;: &amp;quot;integratedTerminal&amp;quot;,
      &amp;quot;internalConsoleOptions&amp;quot;: &amp;quot;neverOpen&amp;quot;,
      &amp;quot;disableOptimisticBPs&amp;quot;: true
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After this you can open up Jest files and press &lt;code&gt;F5&lt;/code&gt; which will start the “debugging” in vscode. Just remember to choose the right configuration from the dropdown menu.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>npm install vs ci</title>
		<link href="https://www.lennu.net/2019/npm-install-vs-ci/"/>
		<updated>2019-04-26T00:00:00Z</updated>
		<id>https://www.lennu.net/2019/npm-install-vs-ci/</id>
		<content type="html">&lt;p&gt;npm recently launched new command called &lt;code&gt;npm ci&lt;/code&gt; which is made for continuous integration and especially to be used in deployments and other automated processes. Learn when to use which and you can avoid the usual what just happened situations with npm.&lt;/p&gt;
&lt;p&gt;The confusion started when npm released &lt;code&gt;package-lock.json&lt;/code&gt; files. There’s lot’s of good information and lot’s of bad informations about the way this file is used and what affects the generation of it.&lt;/p&gt;
&lt;h2 id=&quot;package-lock-json&quot; tabindex=&quot;-1&quot;&gt;package-lock.json &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2019/npm-install-vs-ci/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Package lock file sounds like something that will save the current state of the npm package tree. And that is completely true. In &lt;code&gt;package-lock.json&lt;/code&gt; you can find the full tree and exact versions used in the current setup. There’s nothing more to it.&lt;/p&gt;
&lt;h2 id=&quot;npm-install&quot; tabindex=&quot;-1&quot;&gt;npm install &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2019/npm-install-vs-ci/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The command &lt;code&gt;npm install&lt;/code&gt; will install packages according to &lt;strong&gt;package.json&lt;/strong&gt;. It &lt;strong&gt;does not&lt;/strong&gt; install the packages according to &lt;strong&gt;package-lock.json&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The confusion here is why doesn’t it do that? What’s the point of &lt;code&gt;package-lock.json&lt;/code&gt; if it doesn’t really affect anything. I really can’t say why npm did this the way they did, but the good thing is that after a while they introduced &lt;code&gt;npm ci&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;npm-ci&quot; tabindex=&quot;-1&quot;&gt;npm ci &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2019/npm-install-vs-ci/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The command &lt;code&gt;npm ci&lt;/code&gt; install’s the exact packages and tree found in the &lt;code&gt;package-lock.json&lt;/code&gt;. It’s made only for &lt;code&gt;package-lock.json&lt;/code&gt; and does a great job at it.&lt;/p&gt;
&lt;p&gt;There’s also some extra things you should know when using this command.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The installation process will &lt;em&gt;fail&lt;/em&gt; if the definitions in &lt;code&gt;package-lock.json&lt;/code&gt; doesn’t match the ranges or versions specified in &lt;code&gt;package.json&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;It’s faster than &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;It deletes old &lt;code&gt;node_modules&lt;/code&gt; directory&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So this command is ideal for automated environments and places where things are liked to be just like they were supposed to be.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>How to exclude specs or test files from webpack build in TS project</title>
		<link href="https://www.lennu.net/2019/how-to-exclude-specs-or-test-files-from-webpack-build-in-ts-project/"/>
		<updated>2019-04-26T00:00:00Z</updated>
		<id>https://www.lennu.net/2019/how-to-exclude-specs-or-test-files-from-webpack-build-in-ts-project/</id>
		<content type="html">&lt;p&gt;If you have your spec files in your &lt;strong&gt;typescript project&lt;/strong&gt; but not the actual test runner you might be getting some weird errors. This might happen if you have in a monorepo environment or some similar situation.&lt;/p&gt;
&lt;p&gt;This error is actually good one because usually you shouldn’t have tests within your build.&lt;/p&gt;
&lt;p&gt;The errors you might get could be something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ERROR in [at-loader] ./src/somefile.spec.tsx:2:25
TS2307: Cannot find module &#39;enzyme&#39;.&#92;n&#92;nERROR in [at-loader] ./src/somefile.spec.tsx:3:26
TS2307: Cannot find module &#39;enzyme-to-json&#39;.
 
﻿ERROR in [at-loader] ./src/somefile.spec.tsx:6:1
TS2304: Cannot find name &#39;describe&#39;.&#92;n&#92;nERROR in [at-loader] ./src/somefile.spec.tsx:7:3
TS2304: Cannot find name &#39;it&#39;.
 
ERROR in [at-loader] ./src/somefile.spec.tsx:10:5
TS2304: Cannot find name &#39;expect&#39;.
 
ERROR in [at-loader] ./src/somefile.spec.tsx:14:5
TS2304: Cannot find name &#39;jest&#39;.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So to fix the situation and remove the errors you have to exclude the spec files from the build. This should be done through typescript configuration (tsconfig.json). With the following style:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
...
  &amp;quot;exclude&amp;quot;: [
    &amp;quot;./src/**/*.spec.ts&#92;&amp;quot;,
    &amp;quot;./src/**/*.spec.tsx&#92;&amp;quot;,
    &amp;quot;node_modules&#92;&amp;quot;,
    &amp;quot;./dist/&#92;&amp;quot; &amp;amp;lt;- or whatever you&#39;r outDir path is
  ]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Remember that exclude array defaults to these locations:&lt;br&gt;
node_modules, bower_components, jspm_packages and .&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>How to burn ISO image to USB stick drive on Ubuntu</title>
		<link href="https://www.lennu.net/2019/how-to-burn-iso-image-to-usb-stick-drive-on-ubuntu/"/>
		<updated>2019-04-26T00:00:00Z</updated>
		<id>https://www.lennu.net/2019/how-to-burn-iso-image-to-usb-stick-drive-on-ubuntu/</id>
		<content type="html">&lt;p&gt;Burning ISO to a usb stick drive is very easy in Ubuntu and all the necessary applications are already installed for you. Bear in mind that you should be able to use command line (terminal).&lt;/p&gt;
&lt;p&gt;First plug in the usb stick drive.&lt;/p&gt;
&lt;p&gt;Find out where it’s mounted with &lt;code&gt;sudo fdisk -l&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then unmount the drive with &lt;code&gt;sudo umount /dev/sdX&lt;/code&gt;. Make sure to change the sdX to your specific case.&lt;/p&gt;
&lt;p&gt;Now you are ready to burn the image into the drive. Use the following command of dd:&lt;code&gt;sudo dd bs=4M if=/PATH/TO/THE/ISO/FILE of=/dev/sdX&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can monitor the process of dd by running the following command:&lt;code&gt;sudo kill -USR1 $(pgrep ^dd)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The kill command doesn’t actually kill the command but instead dd will output information about the process.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Hippo CMS 11 Installation with MySQL with GIT</title>
		<link href="https://www.lennu.net/2018/hippo-cms-11-installation-with-mysql-with-git/"/>
		<updated>2018-03-08T00:00:00Z</updated>
		<id>https://www.lennu.net/2018/hippo-cms-11-installation-with-mysql-with-git/</id>
		<content type="html">&lt;p&gt;In this tutorial we are going to install and run Hippo CMS version 11. This tutorial is made with Ubuntu 16.04 and requires default knowledge of the operating system.&lt;/p&gt;
&lt;h2 id=&quot;initial-setup&quot; tabindex=&quot;-1&quot;&gt;Initial setup &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2018/hippo-cms-11-installation-with-mysql-with-git/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Lets start with installing the dependencies which are Java 8 and Maven.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install openjdk-8-jdk
sudo apt-get install maven
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Create hippo project with this command&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn org.apache.maven.plugins:maven-archetype-plugin:2.4:generate &#92;
-DarchetypeRepository=https://maven.onehippo.com/maven2 &#92;
-DarchetypeGroupId=org.onehippo.cms7 &#92;
-DarchetypeArtifactId=hippo-project-archetype &#92;
-DarchetypeVersion=4.2.3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will ask all kinds of questions that you’ll find the answer from https://www.onehippo.org/11/trails/getting-started/creating-a-project.html.&lt;/p&gt;
&lt;p&gt;For this tutorial you can just click enter and the default will be applied.&lt;/p&gt;
&lt;h2 id=&quot;adding-git-to-project&quot; tabindex=&quot;-1&quot;&gt;Adding GIT to project &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2018/hippo-cms-11-installation-with-mysql-with-git/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now it’s good time to setup git since we have the basic project files on myhippoproject -folder.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git init myhippofolder
cd myhippofolder
git status
git add --all
git commit -m &amp;quot;Initial commit&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;add-mysql&quot; tabindex=&quot;-1&quot;&gt;Add MySQL &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2018/hippo-cms-11-installation-with-mysql-with-git/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To add MySQL into the project we need to create the actual database for it.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install mysql-server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Remember to add a root password&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo &amp;quot;CREATE DATABASE myhippoproject;&amp;quot; | mysql -u root -p
echo &amp;quot;CREATE USER &#39;hippouser&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;hippouserpassword&#39;;&amp;quot; | mysql -u root -p
echo &amp;quot;GRANT ALL PRIVILEGES ON myhippoproject.* TO &#39;hippouser&#39;@&#39;localhost&#39;;&amp;quot; | mysql -u root -p
echo &amp;quot;FLUSH PRIVILEGES;&amp;quot; | mysql -u root -p
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;hippo-cms-mysql-configuration&quot; tabindex=&quot;-1&quot;&gt;Hippo CMS MySQL configuration &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2018/hippo-cms-11-installation-with-mysql-with-git/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Hippo CMS configuration isn’t the best in the world and it’s quite complex and hard to follow. Finding a certain line from the configuration files can be very hard to pay attention when doing this.&lt;/p&gt;
&lt;p&gt;First add Resource to conf/context.xml. Notice username, password and url which configure your MySQL credentials for Hippo.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&#39;1.0&#39; encoding=&#39;utf-8&#39;?&amp;gt;
&amp;lt;Context&amp;gt;
...
&amp;lt;Resource
    name=&amp;quot;jdbc/repositoryDS&amp;quot; auth=&amp;quot;Container&amp;quot; type=&amp;quot;javax.sql.DataSource&amp;quot;
    maxTotal=&amp;quot;20&amp;quot; maxIdle=&amp;quot;10&amp;quot; minIdle=&amp;quot;2&amp;quot; initialSize=&amp;quot;2&amp;quot; maxWaitMillis=&amp;quot;10000&amp;quot;
    testWhileIdle=&amp;quot;true&amp;quot; testOnBorrow=&amp;quot;false&amp;quot; validationQuery=&amp;quot;select 1&amp;quot;
    timeBetweenEvictionRunsMillis=&amp;quot;10000&amp;quot;
    minEvictableIdleTimeMillis=&amp;quot;60000&amp;quot;
    username=&amp;quot;hippouser&amp;quot; password=&amp;quot;hippouserpassword&amp;quot;
    driverClassName=&amp;quot;com.mysql.jdbc.Driver&amp;quot;
    url=&amp;quot;jdbc:mysql://localhost:3306/myhippoproject?autoReconnect=true&amp;amp;amp;characterEncoding=utf8&amp;quot; /&amp;gt;
&amp;lt;/Context&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then add conf/repository.xml, the file contains a lot of stuff and mostly unnecessary things for us to know right know, so I’ll just add the file here. Most importantly it represents the place for content to be put on to and it’s configuration.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
 
&amp;lt;!DOCTYPE Repository
          PUBLIC &amp;quot;-//The Apache Software Foundation//DTD Jackrabbit 2.6//EN&amp;quot;
          &amp;quot;http://jackrabbit.apache.org/dtd/repository-2.6.dtd&amp;quot;&amp;gt;
 
&amp;lt;Repository&amp;gt;
 
  &amp;lt;DataSources&amp;gt;
    &amp;lt;DataSource name=&amp;quot;repositoryDS&amp;quot;&amp;gt;
      &amp;lt;param name=&amp;quot;driver&amp;quot; value=&amp;quot;javax.naming.InitialContext&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;url&amp;quot; value=&amp;quot;java:comp/env/jdbc/repositoryDS&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;databaseType&amp;quot; value=&amp;quot;mysql&amp;quot;/&amp;gt;
    &amp;lt;/DataSource&amp;gt;
  &amp;lt;/DataSources&amp;gt;
 
  &amp;lt;FileSystem class=&amp;quot;org.apache.jackrabbit.core.fs.db.DbFileSystem&amp;quot;&amp;gt;
    &amp;lt;param name=&amp;quot;dataSourceName&amp;quot; value=&amp;quot;repositoryDS&amp;quot;/&amp;gt;
    &amp;lt;param name=&amp;quot;schemaObjectPrefix&amp;quot; value=&amp;quot;repository_&amp;quot;/&amp;gt;
  &amp;lt;/FileSystem&amp;gt;
 
  &amp;lt;Security appName=&amp;quot;Jackrabbit&amp;quot;&amp;gt;
    &amp;lt;SecurityManager class=&amp;quot;org.hippoecm.repository.security.SecurityManager&amp;quot;/&amp;gt;
    &amp;lt;AccessManager class=&amp;quot;org.hippoecm.repository.security.HippoAccessManager&amp;quot;/&amp;gt;
    &amp;lt;LoginModule class=&amp;quot;org.hippoecm.repository.security.HippoLoginModule&amp;quot;/&amp;gt;
  &amp;lt;/Security&amp;gt;
 
  &amp;lt;Workspaces rootPath=&amp;quot;${rep.home}/workspaces&amp;quot; defaultWorkspace=&amp;quot;default&amp;quot;/&amp;gt;
 
  &amp;lt;Workspace name=&amp;quot;${wsp.name}&amp;quot;&amp;gt;
    &amp;lt;FileSystem class=&amp;quot;org.apache.jackrabbit.core.fs.db.DbFileSystem&amp;quot;&amp;gt;
      &amp;lt;param name=&amp;quot;dataSourceName&amp;quot; value=&amp;quot;repositoryDS&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;schemaObjectPrefix&amp;quot; value=&amp;quot;${wsp.name}_&amp;quot;/&amp;gt;
    &amp;lt;/FileSystem&amp;gt;
 
    &amp;lt;PersistenceManager class=&amp;quot;org.apache.jackrabbit.core.persistence.pool.MySqlPersistenceManager&amp;quot;&amp;gt;
      &amp;lt;param name=&amp;quot;dataSourceName&amp;quot; value=&amp;quot;repositoryDS&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;schemaObjectPrefix&amp;quot; value=&amp;quot;${wsp.name}_&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;externalBLOBs&amp;quot; value=&amp;quot;true&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;consistencyCheck&amp;quot; value=&amp;quot;false&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;consistencyFix&amp;quot; value=&amp;quot;false&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;bundleCacheSize&amp;quot; value=&amp;quot;64&amp;quot;/&amp;gt;
    &amp;lt;/PersistenceManager&amp;gt;
 
    &amp;lt;SearchIndex class=&amp;quot;org.hippoecm.repository.FacetedNavigationEngineImpl&amp;quot;&amp;gt;
      &amp;lt;param name=&amp;quot;indexingConfiguration&amp;quot; value=&amp;quot;indexing_configuration.xml&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;indexingConfigurationClass&amp;quot; value=&amp;quot;org.hippoecm.repository.query.lucene.ServicingIndexingConfigurationImpl&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;path&amp;quot; value=&amp;quot;${wsp.home}/index&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;useSimpleFSDirectory&amp;quot; value=&amp;quot;true&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;useCompoundFile&amp;quot; value=&amp;quot;true&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;minMergeDocs&amp;quot; value=&amp;quot;100&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;volatileIdleTime&amp;quot; value=&amp;quot;10&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;maxMergeDocs&amp;quot; value=&amp;quot;100000&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;mergeFactor&amp;quot; value=&amp;quot;5&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;maxFieldLength&amp;quot; value=&amp;quot;10000&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;bufferSize&amp;quot; value=&amp;quot;1000&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;cacheSize&amp;quot; value=&amp;quot;1000&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;onWorkspaceInconsistency&amp;quot; value=&amp;quot;log&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;forceConsistencyCheck&amp;quot; value=&amp;quot;false&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;enableConsistencyCheck&amp;quot; value=&amp;quot;false&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;autoRepair&amp;quot; value=&amp;quot;true&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;analyzer&amp;quot; value=&amp;quot;org.hippoecm.repository.query.lucene.StandardHippoAnalyzer&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;queryClass&amp;quot; value=&amp;quot;org.apache.jackrabbit.core.query.QueryImpl&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;respectDocumentOrder&amp;quot; value=&amp;quot;false&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;resultFetchSize&amp;quot; value=&amp;quot;1000&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;extractorTimeout&amp;quot; value=&amp;quot;100&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;extractorBackLogSize&amp;quot; value=&amp;quot;100&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;excerptProviderClass&amp;quot; value=&amp;quot;org.apache.jackrabbit.core.query.lucene.DefaultHTMLExcerpt&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;supportSimilarityOnStrings&amp;quot; value=&amp;quot;true&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;supportSimilarityOnBinaries&amp;quot; value=&amp;quot;false&amp;quot;/&amp;gt;
    &amp;lt;/SearchIndex&amp;gt;
 
    &amp;lt;ISMLocking class=&amp;quot;org.apache.jackrabbit.core.state.FineGrainedISMLocking&amp;quot;/&amp;gt;
  &amp;lt;/Workspace&amp;gt;
 
  &amp;lt;Versioning rootPath=&amp;quot;${rep.home}/version&amp;quot;&amp;gt;
    &amp;lt;FileSystem class=&amp;quot;org.apache.jackrabbit.core.fs.db.DbFileSystem&amp;quot;&amp;gt;
      &amp;lt;param name=&amp;quot;dataSourceName&amp;quot; value=&amp;quot;repositoryDS&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;schemaObjectPrefix&amp;quot; value=&amp;quot;version_&amp;quot;/&amp;gt;
    &amp;lt;/FileSystem&amp;gt;
 
    &amp;lt;PersistenceManager class=&amp;quot;org.apache.jackrabbit.core.persistence.pool.MySqlPersistenceManager&amp;quot;&amp;gt;
      &amp;lt;param name=&amp;quot;dataSourceName&amp;quot; value=&amp;quot;repositoryDS&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;schemaObjectPrefix&amp;quot; value=&amp;quot;version_&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;externalBLOBs&amp;quot; value=&amp;quot;true&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;consistencyCheck&amp;quot; value=&amp;quot;false&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;consistencyFix&amp;quot; value=&amp;quot;false&amp;quot;/&amp;gt;
    &amp;lt;/PersistenceManager&amp;gt;
 
    &amp;lt;ISMLocking class=&amp;quot;org.apache.jackrabbit.core.state.FineGrainedISMLocking&amp;quot;/&amp;gt;
  &amp;lt;/Versioning&amp;gt;
 
  &amp;lt;Cluster&amp;gt;
    &amp;lt;Journal class=&amp;quot;org.apache.jackrabbit.core.journal.DatabaseJournal&amp;quot;&amp;gt;
      &amp;lt;param name=&amp;quot;dataSourceName&amp;quot; value=&amp;quot;repositoryDS&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;databaseType&amp;quot; value=&amp;quot;mysql&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;schemaObjectPrefix&amp;quot; value=&amp;quot;repository_&amp;quot;/&amp;gt;
      &amp;lt;param name=&amp;quot;revision&amp;quot; value=&amp;quot;${rep.home}/revision.log&amp;quot;/&amp;gt;
    &amp;lt;/Journal&amp;gt;
  &amp;lt;/Cluster&amp;gt;
 
  &amp;lt;DataStore class=&amp;quot;org.apache.jackrabbit.core.data.db.DbDataStore&amp;quot;&amp;gt;
    &amp;lt;param name=&amp;quot;dataSourceName&amp;quot; value=&amp;quot;repositoryDS&amp;quot;/&amp;gt;
    &amp;lt;param name=&amp;quot;minRecordLength&amp;quot; value=&amp;quot;1024&amp;quot;/&amp;gt;
    &amp;lt;param name=&amp;quot;maxConnections&amp;quot; value=&amp;quot;5&amp;quot;/&amp;gt;
    &amp;lt;param name=&amp;quot;copyWhenReading&amp;quot; value=&amp;quot;true&amp;quot;/&amp;gt;
  &amp;lt;/DataStore&amp;gt;
 
&amp;lt;/Repository&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally we need to modify our pom.xml file to know about our just created repository.xml and MySQL scheme. So do the following changes in pom.xml:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;From pom.xml find this:
&amp;lt;container&amp;gt;
  &amp;lt;systemProperties&amp;gt;
  ...
  &amp;lt;/systemProperties&amp;gt;
&amp;lt;/container&amp;gt;
 
Inside &amp;lt;systemProperties&amp;gt; add:
&amp;lt;repo.config&amp;gt;file:${project.basedir}/conf/repository.xml&amp;lt;/repo.config&amp;gt;
 
And right after the &amp;lt;/systemProperties&amp;gt; and just before &amp;lt;/container&amp;gt; add this:
&amp;lt;dependencies&amp;gt;
  &amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;mysql&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;mysql-connector-java&amp;lt;/artifactId&amp;gt;
    &amp;lt;classpath&amp;gt;extra&amp;lt;/classpath&amp;gt;
  &amp;lt;/dependency&amp;gt;
&amp;lt;/dependencies&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;and at the end of the file before &amp;lt;/project&amp;gt; add this:
&amp;lt;dependencies&amp;gt;
  &amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;mysql&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;mysql-connector-java&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;5.1.34&amp;lt;/version&amp;gt;
    &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
  &amp;lt;/dependency&amp;gt;
&amp;lt;/dependencies&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Before rushing to the next step you should commit your changes:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git add --all
git commit -m &amp;quot;Add MySQL configuration&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;build-and-run&quot; tabindex=&quot;-1&quot;&gt;Build &amp;amp; Run &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2018/hippo-cms-11-installation-with-mysql-with-git/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now lets build our project.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn clean verify
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This downloads some assets and creates the runnable java files. Now we need to create .gitignore file because the created files shouldn’t go to version control. So create .gitignore and add the following in there. Also commit the file in git.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;**/target/**
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;git add .gitignore
git commit -m &amp;quot;Add .gitignore&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we are ready to run the project with this command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn -Pcargo.run -Drepo.bootstrap=true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The -Drepo.bootsrap=true is there to ensure that we are creating the system from scratch. If you don’t want to do this after the initial setup, you can just omit it.&lt;/p&gt;
&lt;p&gt;Try it out
You should now be able to go and see hippo working.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://localhost:8080/cms or http://localhost:8080/site
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Happy Hippo CMS:ing!&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Disable locale passing on ssh connection</title>
		<link href="https://www.lennu.net/2018/disable-locale-passing-on-ssh-connection/"/>
		<updated>2018-03-08T00:00:00Z</updated>
		<id>https://www.lennu.net/2018/disable-locale-passing-on-ssh-connection/</id>
		<content type="html">&lt;p&gt;You might have seen these super annoying error messages on a new Linux system:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LC_TIME = &amp;quot;fi_FI.UTF-8&amp;quot;,
	LC_MONETARY = &amp;quot;fi_FI.UTF-8&amp;quot;,
	LC_ADDRESS = &amp;quot;fi_FI.UTF-8&amp;quot;,
	LC_TELEPHONE = &amp;quot;fi_FI.UTF-8&amp;quot;,
	LC_NAME = &amp;quot;fi_FI.UTF-8&amp;quot;,
	LC_MEASUREMENT = &amp;quot;fi_FI.UTF-8&amp;quot;,
	LC_IDENTIFICATION = &amp;quot;fi_FI.UTF-8&amp;quot;,
	LC_NUMERIC = &amp;quot;fi_FI.UTF-8&amp;quot;,
	LC_PAPER = &amp;quot;fi_FI.UTF-8&amp;quot;,
	LANG = &amp;quot;C&amp;quot;
    are supported and installed on your system.
perl: warning: Falling back to the standard locale (&amp;quot;C&amp;quot;).
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LC_TIME = &amp;quot;fi_FI.UTF-8&amp;quot;,
	LC_MONETARY = &amp;quot;fi_FI.UTF-8&amp;quot;,
	LC_ADDRESS = &amp;quot;fi_FI.UTF-8&amp;quot;,
	LC_TELEPHONE = &amp;quot;fi_FI.UTF-8&amp;quot;,
	LC_NAME = &amp;quot;fi_FI.UTF-8&amp;quot;,
	LC_MEASUREMENT = &amp;quot;fi_FI.UTF-8&amp;quot;,
	LC_IDENTIFICATION = &amp;quot;fi_FI.UTF-8&amp;quot;,
	LC_NUMERIC = &amp;quot;fi_FI.UTF-8&amp;quot;,
	LC_PAPER = &amp;quot;fi_FI.UTF-8&amp;quot;,
	LANG = &amp;quot;C&amp;quot;
    are supported and installed on your system.
perl: warning: Falling back to the standard locale (&amp;quot;C&amp;quot;).
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You cans see the current locale by typing &lt;em&gt;locale&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;You should see something like this en_US.UTF-8 because that’s the most used locale and usually the preferred way to use Linux servers.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;LANG=en_US.UTF-8
LANGUAGE=
LC_CTYPE=&amp;quot;en_US.UTF-8&amp;quot;
LC_NUMERIC=&amp;quot;en_US.UTF-8&amp;quot;
LC_TIME=&amp;quot;en_US.UTF-8&amp;quot;
LC_COLLATE=&amp;quot;en_US.UTF-8&amp;quot;
LC_MONETARY=&amp;quot;en_US.UTF-8&amp;quot;
LC_MESSAGES=&amp;quot;en_US.UTF-8&amp;quot;
LC_PAPER=&amp;quot;en_US.UTF-8&amp;quot;
LC_NAME=&amp;quot;en_US.UTF-8&amp;quot;
LC_ADDRESS=&amp;quot;en_US.UTF-8&amp;quot;
LC_TELEPHONE=&amp;quot;en_US.UTF-8&amp;quot;
LC_MEASUREMENT=&amp;quot;en_US.UTF-8&amp;quot;
LC_IDENTIFICATION=&amp;quot;en_US.UTF-8&amp;quot;
LC_ALL=
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But if you don’t then this is most often because you have logged in with ssh and your ssh client is passing the locale of your own system into the server. There are two ways to prevent this.&lt;/p&gt;
&lt;p&gt;Easiest is to disabled the passing from your own system (the one where you are connecting from):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudoedit /etc/ssh/ssh_config
 
comment this line SendEnv LANG LC_*
 
like this
 
# SendEnv LANG LC_*
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The other way is to prevent the passing of the locale on your ssh server (the one you are connecting to):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudoedit /etc/ssh/sshd_config (notice the sshD)
 
comment out this line #AcceptEnv LANG LC_* like this
 
#AcceptEnv LANG LC_*
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now just relog to your server and type &lt;em&gt;locale&lt;/em&gt; again.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>How to use PHP and Amazon API to fetch product information</title>
		<link href="https://www.lennu.net/2017/how-to-use-php-and-amazon-api-to-fetch-product-information/"/>
		<updated>2017-03-31T00:00:00Z</updated>
		<id>https://www.lennu.net/2017/how-to-use-php-and-amazon-api-to-fetch-product-information/</id>
		<content type="html">&lt;p&gt;So you have a list of ASINs for which you’d like to get more information? That can be easily done with Amazon API. It’s a great tool to use when you already know which ASINs (products) you want to work with. In this post I assume you want to fetch product information for multiple items and have the list of ASINs ready in a text file, separated by a new line.&lt;/p&gt;
&lt;h2 id=&quot;the-problem&quot; tabindex=&quot;-1&quot;&gt;The problem &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2017/how-to-use-php-and-amazon-api-to-fetch-product-information/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Many people want to fetch Amazon product information for their websites. They have review sites, comparison sites, blogs about certain subject where Amazon products are displayed (with affiliate links, of course). Often basic information like name and image are enough, but sometimes you want more detailed data. Scraping all product data off Amazon website might’ve occurred to you. But web scraping is rather unreliable and not approved by Amazon. In fact, you are risking your Amazon Associates account if you are publishing scraped content. So, how to retrieve that valuable information for Amazon products if not with web scraping?&lt;/p&gt;
&lt;h2 id=&quot;the-solution&quot; tabindex=&quot;-1&quot;&gt;The solution &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2017/how-to-use-php-and-amazon-api-to-fetch-product-information/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Use Amazon API! After you have a list of ASINs at your disposal the API is a very handy tool. You can retrieve a lot of information with it, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Price&lt;/li&gt;
&lt;li&gt;Discount amount and percentage&lt;/li&gt;
&lt;li&gt;Availability&lt;/li&gt;
&lt;li&gt;Images&lt;/li&gt;
&lt;li&gt;UPC&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cool, isn’t it? So let’s see what you need…&lt;/p&gt;
&lt;h2 id=&quot;requirements&quot; tabindex=&quot;-1&quot;&gt;Requirements &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2017/how-to-use-php-and-amazon-api-to-fetch-product-information/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Web server with PHP enabled&lt;/li&gt;
&lt;li&gt;ASIN list (text file, one ASIN per line)&lt;/li&gt;
&lt;li&gt;Amazon Associates account (&lt;a href=&quot;http://affiliate-program.amazon.com/gp/associates/apply/main.html&quot;&gt;get it here&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Amazon Product Advertising API enabled (&lt;a href=&quot;https://affiliate-program.amazon.com/gp/flex/advertising/api/sign-in.html&quot;&gt;enable it here&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Amazon API PHP class (&lt;a href=&quot;http://www.codediesel.com/downloads/amazonapi&quot;&gt;get it from here&lt;/a&gt; thanks to &lt;a href=&quot;http://www.codediesel.com/&quot;&gt;Sameer Borate&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Opening up Amazon Associates account should be easy and fast. Just go here and follow the instructions. It could take a few days to get you approved – but in my experience, most people are accepted. Just remember to have some kind of a website ready with original content. And preferably give accurate information because they’re going to send you check / deposit money to your bank account after you start generating money (which is, by the way, not so hard with Amazon Associates program). Anyway, in the process you’ll also make a Tracking ID which is used to track the visitors you send to Amazon. Keep that at hand, you’ll need it later.&lt;/p&gt;
&lt;p&gt;Once you have enabled Amazon API on your account, you must create Access Key ID and Secret Access Key. They are the keys that the Amazon API PHP script will use to authenticate with Amazon API servers. You can get the keys here. Just click on Access Keys -&amp;gt; Create New Access Key. You’ll be presented with a box saying an access key has been successfully created for you. Click Download Key File and save it on your computer. This is important because once you close the pop-up, you can’t retrieve the secret access key again from your Amazon API account settings.&lt;/p&gt;
&lt;p&gt;Next, upload &lt;a href=&quot;http://www.codediesel.com/downloads/amazonapi&quot;&gt;the two files&lt;/a&gt; (amazon_api_class.php and aws_signed_request.php) to your web server’s public_html or its subdirectory. You don’t have to modify the latter, but slight modifications have to be made for the class file itself. So open up amazon_api_class.php and find lines 42, 49 and 57 and do as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On line 42, put your Access Key ID inside the double quotes. Remember, you downloaded the keys to your computer above.&lt;/li&gt;
&lt;li&gt;On line 49, put your Secret Access Key inside the double quotes.&lt;/li&gt;
&lt;li&gt;On line 57, put your Tracking ID inside the double quotes. You can see it &lt;a href=&quot;https://affiliate-program.amazon.com/gp/associates/network/main.html&quot;&gt;here&lt;/a&gt; on upper right corner (Store) after logging in.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Great, now you have the PHP class ready. It’s time to look at the actual source code of the file that will fetch detailed product information for every ASIN in your list. Put the following code to the same directory you put the amazon_api_class.php and aws_signed_request.php to and run the code.&lt;/p&gt;
&lt;p&gt;PHP Code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?php
        
        // Open the list of ASINs for reading
        $handle = fopen(&amp;quot;asins.txt&amp;quot;, &amp;quot;r&amp;quot;);
        
        // Include the Amazon API PHP class
        include(&amp;quot;amazon_api_class.php&amp;quot;);
 
        // Create a new Amazon API object
        $obj = new AmazonProductAPI();
        
        // Start looping through the ASIN file, line by line
        while (($asin = fgets($handle)) !== false) {
        
            // Remove the new line from ASIN
            $asin = str_replace(&amp;quot;&#92;n&amp;quot;,&amp;quot;&amp;quot;,$asin);
 
            // Try to fetch product information with the object
            try {
                $result = $obj-&amp;gt;getItemByAsin($asin);
            }
            // If unsuccesful, catch the exception...
            catch(Exception $e)
            {
                // And print it to the screen
                echo $e-&amp;gt;getMessage();
            }
            
            // To see the whole response (with all the information, uncomment
            // the following three lines
            // echo &amp;quot;&amp;lt;pre&amp;gt;&amp;quot;;
            // print_r($result);
            // echo &amp;quot;&amp;lt;/pre&amp;gt;&amp;quot;; */
            
            // Get title, price and image URL from the response
            $title = $result-&amp;gt;Items-&amp;gt;Item-&amp;gt;ItemAttributes-&amp;gt;Title;
            $price = $result-&amp;gt;Items-&amp;gt;Item-&amp;gt;OfferSummary-&amp;gt;LowestNewPrice-&amp;gt;FormattedPrice;
            $image_url = $result-&amp;gt;Items-&amp;gt;Item-&amp;gt;LargeImage-&amp;gt;URL;
            
            // Print the title, price, ASIN and image URL to screen
            echo &amp;quot;$asin Title: $title&amp;lt;br /&amp;gt;$asin Price: $price&amp;lt;br /&amp;gt;$asin Image URL: $image_url&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;&amp;quot;;
            
            // Wait 1 second because of Amazon API call limit
            // Adjust it to your liking, more info here:
            // https://affiliate-program.amazon.com/gp/advertising/api/detail/faq.html
            sleep(1);
        
        // End of ASIN
        }
        
        // Close the ASIN text file
        fclose($handle);
        
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So what’s happening there?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We open the ASIN text file (called asins.txt in this example) with read mode on.&lt;/li&gt;
&lt;li&gt;We include Amazon API PHP class.&lt;/li&gt;
&lt;li&gt;We create a new Amazon API object.&lt;/li&gt;
&lt;li&gt;We start while loop with fgets that returns a new line from ASINs file and puts it to variable $asin.&lt;/li&gt;
&lt;li&gt;We remove new line (&#92;n) from the end of the ASIN.&lt;/li&gt;
&lt;li&gt;We initiate try-catch statement and try to use getItemByAsin function from the Amazon API PHP class. If successful, we continue. If not, we catch the exception and print the message to screen.&lt;/li&gt;
&lt;li&gt;I commented out the full response, but you can uncomment lines 31-33 to see the full response and pick the product information you want.&lt;/li&gt;
&lt;li&gt;Next we fetch the product’s title, price and image URL from the response object. That’s done by retrieving paths from the object with the -&amp;gt; operator.&lt;/li&gt;
&lt;li&gt;We echo the information to screen. You can replace the line 41 with whatever you want (for example, insert the retrieved information to database), but to make it simple in this example we just echo it.&lt;/li&gt;
&lt;li&gt;We sleep (wait) one second. This is because of Amazon API’s call limits. If you’ve generated sales in the past 30 days you can reduce the waiting time. &lt;a href=&quot;https://affiliate-program.amazon.com/gp/advertising/api/detail/faq.html&quot;&gt;Read more about it here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;We are at the end of line (ASIN), move on to the next one and start from the beginning of while loop. If this is the last line from the ASIN file, move to next line in the code.&lt;/li&gt;
&lt;li&gt;We finally close the ASIN file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Not so hard, isn’t it. This way you can retrieve plenty of information from the Amazon API for your projects. This is 100% Terms of Services compliant way to do it. I’ve also found out that the API is reliable and doesn’t experience lags or other oddities. But there are some things to keep in mind…&lt;/p&gt;
&lt;h2 id=&quot;caveats&quot; tabindex=&quot;-1&quot;&gt;Caveats &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2017/how-to-use-php-and-amazon-api-to-fetch-product-information/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Sometimes the price returned is “price too low to display” rather than actual price. This is not a bug but a feature of the API. &lt;a href=&quot;http://docs.aws.amazon.com/AWSECommerceService/latest/DG/minimum-advertised-price.html&quot;&gt;Read more about it here&lt;/a&gt;. The only way to go around this would be to scrape the price from their website rather than using the API. But web scraping Amazon, especially the price information, is forbidden by their Terms of Services. If you publish scraped information, your Amazon Associates account could get banned.&lt;/li&gt;
&lt;li&gt;You can’t return customer reviews or star ratings with the API. You can, however, return a link to the customer reviews. But that’s not very often the desired option. Again, web scraping Amazon product pages would give you the customer reviews, but publishing them would break copyright laws and the Terms of Services. So don’t do it.&lt;/li&gt;
&lt;li&gt;There’s a call limit for Amazon API. That means you can only do certain amount of API calls in a second. If you haven’t generated any sales in the past 30 days, the default limit is one call per second. But when you generate sales for Amazon (and commission for yourself), the API limit changes. &lt;a href=&quot;https://affiliate-program.amazon.com/gp/advertising/api/detail/faq.html&quot;&gt;Read more about it here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Not every product’s information can be retrieved through the API. I’m not sure exactly why some products are off limits for the API. But that’s how it is. I’ve seen at least some “discontinued by manufacturer” products not working with the API. But rest assured that 99% of the time the product information can be retrieved.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That’s all I can think for now. Amazon API is a good, reliable tool for programmatically fetching product data. You can use use it to build sites and with some creativity, perhaps even profitable ones!&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Doctrine Find out if Collection is Empty or Not</title>
		<link href="https://www.lennu.net/2017/doctrine-find-out-if-collection-is-empty-or-not/"/>
		<updated>2017-03-13T00:00:00Z</updated>
		<id>https://www.lennu.net/2017/doctrine-find-out-if-collection-is-empty-or-not/</id>
		<content type="html">&lt;p&gt;You can do a Doctrine query based on the amount of relationship/collection size fairly easy.&lt;/p&gt;
&lt;p&gt;Usually in these cases you want to find out if some collection that’s related to your Entity has anything or is empty.&lt;/p&gt;
&lt;p&gt;You can use the Query Builder’s where clause to limit these results.&lt;/p&gt;
&lt;p&gt;Let’s say we have &lt;strong&gt;Category Entity&lt;/strong&gt; and &lt;strong&gt;Product Entity&lt;/strong&gt;. We want to fetch all Categories that have products.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;amp;lt;?php
 
namespace AppBundle&#92;Repository;
 
class CategoryRepository extends &#92;Doctrine&#92;ORM&#92;EntityRepository
{
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; public function findCategoriesWithProducts() {
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; $qb = $this-&amp;amp;gt;createQueryBuilder(&#39;c&#39;)
        -&amp;amp;gt;where(&#39;SIZE(c.products) &amp;amp;gt; 0&#39;);
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; return $qb-&amp;amp;gt;getQuery()-&amp;amp;gt;getResult();
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See we are using SIZE to create the amount of products inside the category and fetching only the categories that have more than 0 products.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Doctrine Many To Many with Extra Fields</title>
		<link href="https://www.lennu.net/2017/doctrine-many-to-many-with-extra-fields/"/>
		<updated>2017-03-09T00:00:00Z</updated>
		<id>https://www.lennu.net/2017/doctrine-many-to-many-with-extra-fields/</id>
		<content type="html">&lt;p&gt;Extra fields for Many to Many relationship is usually well supported. However in Doctrine this is actually something that you can’t do with just normal ManyToMany entity.&lt;/p&gt;
&lt;p&gt;In Doctrine you have to define three Entities where you kind of manually create the Many To Many relationship. This is done like this.&lt;/p&gt;
&lt;p&gt;Lets say we have Products and Categories. Products can have many Categories and Categories can have many Products. So we need a many to many relationship.&lt;/p&gt;
&lt;p&gt;Now for the sake of example we also need quantity of how many products are in a category. It would be convenient to store the information into the middle table of our many to many relationship.&lt;/p&gt;
&lt;p&gt;Lets first define the Product class&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;namespace Entity;
 
use Doctrine&#92;ORM&#92;Mapping as ORM;
 
/**
 * @ORM&#92;Entity()
 * @ORM&#92;Table(name=&amp;quot;product&amp;quot;)
 */
class Product
{
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; /**
     * @ORM&#92;Id()
     * @ORM&#92;Column(type=&amp;quot;integer&amp;quot;)
     */
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; private $id;
 
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; /**
     * ORM&#92;Column(name=&amp;quot;name&amp;quot;, type=&amp;quot;string&amp;quot;, length=50, nullable=false)
     */
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; private $name;
 
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; /**
     * @ORM&#92;OneToMany(targetEntity=&amp;quot;Entity&#92;CategoryProduct&amp;quot;, mappedBy=&amp;quot;product&amp;quot;)
     */
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; private $categoryProducts;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So you see that we are using &lt;strong&gt;OneToMany&lt;/strong&gt; relationship in here and it is targeting Entity CategoryProducts which eventually will be our middle table.&lt;/p&gt;
&lt;p&gt;Now lets define Category class:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;namespace Entity;
 
use Doctrine&#92;ORM&#92;Mapping as ORM;
 
/**
&amp;amp;nbsp;* @ORM&#92;Entity()
&amp;amp;nbsp;* @ORM&#92;Table(name=&amp;quot;store&amp;quot;)
&amp;amp;nbsp;*/
class Store
{
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; /**
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; * @ORM&#92;Id()
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; * @ORM&#92;Column(type=&amp;quot;integer&amp;quot;)
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; */
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; private $id;
 
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; /**
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; * ORM&#92;Column(name=&amp;quot;name&amp;quot;, type=&amp;quot;string&amp;quot;, length=50, nullable=false)
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; */
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; private $name;
 
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; /**
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; * @ORM&#92;OneToMany(targetEntity=&amp;quot;Entity&#92;CategoryProduct&amp;quot;, mappedBy=&amp;quot;category&amp;quot;)
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; */
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; private $categoryProducts;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we have defined both of our main entities. Now it’s time for the middle table.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;namespace Entity;
 
use Doctrine&#92;ORM&#92;Mapping as ORM;
 
/**
&amp;amp;nbsp;* @ORM&#92;Entity()
&amp;amp;nbsp;* @ORM&#92;Table(name=&amp;quot;category_product&amp;quot;)
&amp;amp;nbsp;*/
class CategoryProduct
{
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; /**
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; * ORM&#92;Column(type=&amp;quot;integer&amp;quot;)
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; */
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; private $quantity;
 
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; /**
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; * @ORM&#92;Id()
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; * @ORM&#92;ManyToOne(targetEntity=&amp;quot;Entity&#92;Product&amp;quot;, inversedBy=&amp;quot;categoryProducts&amp;quot;) 
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; * @ORM&#92;JoinColumn(name=&amp;quot;product_id&amp;quot;, referencedColumnName=&amp;quot;id&amp;quot;, nullable=false) 
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; */
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; private $product;
 
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; /**
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; * @ORM&#92;Id()
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; * @ORM&#92;ManyToOne(targetEntity=&amp;quot;Entity&#92;Category&amp;quot;, inversedBy=&amp;quot;categoryProducts&amp;quot;) 
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; * @ORM&#92;JoinColumn(name=&amp;quot;category_id&amp;quot;, referencedColumnName=&amp;quot;id&amp;quot;, nullable=false) 
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; */
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; private $category;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here in the middle table we just define ManyToOne side relationships to their corresponding OneToMany relations on the main entities. We can also add here as many extra fields as we like. Currently this entity contains the &lt;strong&gt;Quantity&lt;/strong&gt; which will store the information of how many products are in this category.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Symfony Doctrine JMS Serializer Max Depth</title>
		<link href="https://www.lennu.net/2017/symfony-doctrine-jms-serializer-max-depth/"/>
		<updated>2017-03-03T00:00:00Z</updated>
		<id>https://www.lennu.net/2017/symfony-doctrine-jms-serializer-max-depth/</id>
		<content type="html">&lt;p&gt;There is a great &lt;strong&gt;MaxDepth&lt;/strong&gt; exclusion policy in JMS Serializer however there is also a big  mystery how it works.&lt;/p&gt;
&lt;p&gt;Lets think of normal case where you are from the start excluding everything in your model and then exposing the fields separately.&lt;/p&gt;
&lt;p&gt;We have entity called Product which has properties id, category and price. &lt;strong&gt;From these category and price are exposed.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now we know or guess that category probably has a lot of connections to many places and we’re not sure about it’s exclusion policies and &lt;strong&gt;we’d like to limit the depth of our object to only one level&lt;/strong&gt;. Meaning &lt;strong&gt;we don’t want to expose nothing from category entity which is a entity reference&lt;/strong&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;amp;lt;?php
 
namespace AppBundle&#92;Entity;
 
use Doctrine&#92;ORM&#92;Mapping as ORM;
use JMS&#92;Serializer&#92;Annotation as Serializer;
 
/**
&amp;amp;nbsp;* @ORM&#92;Entity
&amp;amp;nbsp;* @ORM&#92;Table(name=&amp;quot;products&amp;quot;)
&amp;amp;nbsp;* @Serializer&#92;ExclusionPolicy(&amp;quot;all&amp;quot;)
&amp;amp;nbsp;*/
class Product
{
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; /**
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; * @ORM&#92;Column(name=&amp;quot;id&amp;quot;, type=&amp;quot;integer&amp;quot;)
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; * @ORM&#92;Id
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; * @ORM&#92;GeneratedValue
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; */
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; private $id;
 
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; /**
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; * @var &#92;ProductCategory
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; *
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; * @ORM&#92;ManyToOne(targetEntity=&amp;quot;Category&amp;quot;, inversedBy=&amp;quot;products&amp;quot;)
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; * @ORM&#92;JoinColumns({
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; *&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; @ORM&#92;JoinColumn(name=&amp;quot;category_id&amp;quot;, referencedColumnName=&amp;quot;id&amp;quot;, nullable=false)
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; * })
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; * @Serializer&#92;Expose()
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; * @Serializer&#92;MaxDepth(1)
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; */
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; private $category;
 
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; /**
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; * @var decimal
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; *
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; * @Assert&#92;NotNull()
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; * @ORM&#92;Column(name=&amp;quot;price&amp;quot;, type=&amp;quot;decimal&amp;quot;, precision=10, scale=2, nullable=false)
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; * @Serializer&#92;Expose()
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; */
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; private $price;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So as you can see from the example we have placed&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* @Serializer&#92;Expose()
* @Serializer&#92;MaxDepth(1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;MaxDepth(1) to our category property.&lt;/p&gt;
&lt;p&gt;Now to make this all work, in our &lt;strong&gt;controller&lt;/strong&gt; we have to give the serializer a custom parameter to let it know that we are using these MaxDepth annotations.&lt;/p&gt;
&lt;p&gt;If you are using FOS&#92;RestBundle:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* @Rest&#92;View(serializerEnableMaxDepthChecks=true)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you are not then try this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;use JMS&#92;Serializer&#92;SerializationContext; $serializer-&amp;gt;serialize($data, &#39;json&#39;, SerializationContext::create()-&amp;gt;enableMaxDepthChecks());
&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Docker Compose Volume Path Problem in Windows</title>
		<link href="https://www.lennu.net/2017/docker-compose-volume-path-problem-in-windows/"/>
		<updated>2017-03-03T00:00:00Z</updated>
		<id>https://www.lennu.net/2017/docker-compose-volume-path-problem-in-windows/</id>
		<content type="html">&lt;p&gt;If you are having some errors with composing Docker containers which have volumes in Windows there is usual and easy solution.&lt;/p&gt;
&lt;p&gt;The problem is usually indicated by the following errors:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ERROR: for php&amp;amp;nbsp; Cannot create container for service
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;invalid volume specification
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Encountered errors while bringing up the project.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There is a simple fix to make errors go away. Docker-Compose simply doesn’t follow the paths the same on Windows as it would on Unix systems.&lt;/p&gt;
&lt;p&gt;Create &lt;strong&gt;.env&lt;/strong&gt; file and add there:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;COMPOSE_CONVERT_WINDOWS_PATHS=1
&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Docker Compose &amp; Machine Cheatsheet</title>
		<link href="https://www.lennu.net/2017/docker-compose-machine-cheatsheet/"/>
		<updated>2017-03-03T00:00:00Z</updated>
		<id>https://www.lennu.net/2017/docker-compose-machine-cheatsheet/</id>
		<content type="html">&lt;h2 id=&quot;docker-machine&quot; tabindex=&quot;-1&quot;&gt;Docker Machine &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2017/docker-compose-machine-cheatsheet/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Create a default docker machine with Virtualbox as its driver:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker-machine create -d virtualbox default
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Configure Docker Client to act against &lt;strong&gt;default&lt;/strong&gt; Docker Machine:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker-machine env default
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Unset Docker Client to normal state:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker-machine env -u
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run with these commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker-machine start
docker-machine stop
docker-machine restart
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;docker-compose&quot; tabindex=&quot;-1&quot;&gt;Docker Compose &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2017/docker-compose-machine-cheatsheet/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Run Docker Compose&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To run Compose in &lt;strong&gt;headless state&lt;/strong&gt; use this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker-compose up -d
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Stop Docker Compose’s containers&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker-compose down
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To remove all volumes while taking containers down, use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker-compose down -v
&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal 8 Configuration Management with Drush</title>
		<link href="https://www.lennu.net/2017/drupal-8-configuration-management-with-drush/"/>
		<updated>2017-03-02T00:00:00Z</updated>
		<id>https://www.lennu.net/2017/drupal-8-configuration-management-with-drush/</id>
		<content type="html">&lt;p&gt;You can easily control your Drupal 8 configurations with Drush. First I’d recommend that you set your configurations files out of files folder:&lt;/p&gt;
&lt;p&gt;Add this to your settings.php (or default.settings.php if you’d like it to be default):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$config_directories[&#39;sync&#39;] = &#39;config/sync&#39;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you configurations should be more available and also visible for Git.&lt;/p&gt;
&lt;p&gt;To export your current configurations use this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;drush config-export sync
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and to import:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;drush config-import sync
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that if you are a team or you are developing on multiple systems then &lt;strong&gt;it is necessary to have the same UUID&lt;/strong&gt; for the site you are developing.&lt;/p&gt;
&lt;p&gt;You can find out the site UUID with this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;drush config-get &amp;quot;system.site&amp;quot; uuid
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and set it with this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;drush config-set &amp;quot;system.site&amp;quot; uuid &amp;quot;INSERT-UUID-HERE&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Redux Action Creator vs. Action</title>
		<link href="https://www.lennu.net/2017/redux-action-creator-vs-action/"/>
		<updated>2017-02-27T00:00:00Z</updated>
		<id>https://www.lennu.net/2017/redux-action-creator-vs-action/</id>
		<content type="html">&lt;p&gt;One of the core things in Redux is the &lt;strong&gt;Actions&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;These are the things that you send to reducers which eventually change the state of the application.&lt;/p&gt;
&lt;p&gt;Action -&amp;gt; Reducer -&amp;gt; State&lt;/p&gt;
&lt;h2 id=&quot;action&quot; tabindex=&quot;-1&quot;&gt;Action &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2017/redux-action-creator-vs-action/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Usually actions are formed like this: (&lt;strong&gt;This is a JavaScript object&lt;/strong&gt;)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
 type: SET_NAME,
 name: &#39;John&#39;,
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We have type and we have name.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Type&lt;/strong&gt; is how Redux’s reducers know how they should modify the state and the second property &lt;strong&gt;name&lt;/strong&gt; has the value we want to insert into our state.&lt;/p&gt;
&lt;h2 id=&quot;action-creator&quot; tabindex=&quot;-1&quot;&gt;Action Creator &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2017/redux-action-creator-vs-action/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;So now we know what is an action (it’s a JavaScript Object), next we’d like to know how it’s different from &lt;strong&gt;action creator&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;This is action creator:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function setName(name) {
  return {
    type: SET_NAME,
    name: name,
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See the middle part that returns an object, it’s the same JavaScript object we defined above. The difference between action and action creator is quite simple.&lt;/p&gt;
&lt;p&gt;Action is the actual object that is sent for the Reducer.&lt;/p&gt;
&lt;p&gt;Action creator is a function that is used to create this object.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Immutable.js Set Deeply Nested Valued with: setIn</title>
		<link href="https://www.lennu.net/2017/immutable-js-set-deeply-nested-valued-with-setin/"/>
		<updated>2017-02-27T00:00:00Z</updated>
		<id>https://www.lennu.net/2017/immutable-js-set-deeply-nested-valued-with-setin/</id>
		<content type="html">&lt;p&gt;Using Immutable.js you get to know its function set quite quickly in the beginning. &lt;strong&gt;Set&lt;/strong&gt; completely overwrites a property but what if we want to just set a property inside that property?&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
  name: &#39;John&#39;,
  children: {
    1: {
      name: &#39;Lisa&#39;,
    }
    2: {
      name: &#39;Anna&#39;,
    },
  },
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So imagine we have a object like that. We can simply use Immutable.&lt;strong&gt;set&lt;/strong&gt; to change John to something else with&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;state.set(&#39;name&#39;, &#39;Richard&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But if we want to change name of one of John’s children? Then we have to go deeper into the tree with Immutable.&lt;strong&gt;setIn&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;state.setIn([&#39;children&#39;, 1, &#39;name&#39;], &#39;Jennifer&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Notice the array syntax!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This way we can set as deep value as we want and we don’t have to completely overwrite the children object.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Native JavaScript Promise Example with Prompt</title>
		<link href="https://www.lennu.net/2017/native-javascript-promise-example-with-prompt/"/>
		<updated>2017-02-22T00:00:00Z</updated>
		<id>https://www.lennu.net/2017/native-javascript-promise-example-with-prompt/</id>
		<content type="html">&lt;p&gt;JavaScript on modern browsers has a native support for promises. And the greatest thing is that the syntax is very easy.&lt;/p&gt;
&lt;p&gt;Basically you can use promises for anything but they are at their best with asynchronous actions. For example ajax, user input, timeout. In this example we are using native JavaScript dialog: &lt;strong&gt;prompt&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Lets first check out the basic syntax:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var p = new Promise(function(resolve, reject) {
  if (true) {
    resolve(&#39;Message&#39;)
  }
  else {
    reject(&#39;Error message for catch&#39;)
  }
})
 
p.then(function(message) { 
  console.log(message)
  return &#39;Another message&#39;
})
.then(function(anotherMessage) {
  console.log(anotherMessage)
})
.catch(function(error) {
  console.log(error)
})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can also chain the whole thing like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;new Promise(function(resolve, reject) {
  if (true) {
    resolve(&#39;Message&#39;)
  }
  else {
    reject(&#39;Error message for catch&#39;)
  }
})
.then(function(message) {
  console.log(message)
  return &#39;Another message&#39;
})
.then(function(anotherMessage) {
  console.log(anotherMessage)
})
.catch(function(error) {
  console.log(error)
})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or cut it to small functions:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;new Promise(myPromise)
.then(message)
.then(anotherMessage)
.catch(handleError)
 
function myPromise(resolve, reject) {
  if (true) {
    resolve(&#39;Message&#39;)
  }
  else {
    reject(&amp;quot;Error message for catch&amp;quot;)
  }
}
 
function message(message) {
  console.log(message)
  return &#39;Another message&#39;
}
 
function anotherMessage(anotherMessage) {
  console.log(anotherMessage)
}
 
function handleError(error) {
  console.log(error)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here I have made a little script that generates Alphabet squares. First it asks for user input and then creates rows and finally prints them. If user’s input is invalid it will get caught in error handling.&lt;/p&gt;
&lt;p&gt;The final result gives you alphabet squares depending on the size of the number. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;AAAAA
ABBBA
ABCBA
ABBBA
AAAAA
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;var ALPHABET = [&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;, &#39;E&#39;, &#39;F&#39;, &#39;G&#39;, &#39;H&#39;, &#39;I&#39;, &#39;J&#39;, &#39;K&#39;, &#39;L&#39;, &#39;M&#39;, &#39;N&#39;, &#39;O&#39;, &#39;P&#39;, &#39;Q&#39;, &#39;R&#39;, &#39;S&#39;, &#39;T&#39;, &#39;U&#39;, &#39;V&#39;, &#39;W&#39;, &#39;X&#39;, &#39;Y&#39;, &#39;Z&#39;, &#39;Å&#39;, &#39;Ä&#39;, &#39;Ö&#39;]
 new Promise(getUserInput)
 .then(createRows)
 .then(printRows)
 .catch(handleError)
 function getUserInput(resolve, reject) {
   var userInput = parseInt(window.prompt(&amp;quot;Give number between 1-26.&amp;quot;,&amp;quot;3&amp;quot;))
   if (!userInput || userInput &amp;amp;lt; 1 || userInput &amp;gt; 26) {
   reject(&amp;quot;Number should be between 1-26.&amp;quot;)
 }
   resolve(userInput)
 }
 function printRows(rows) {
   rows.forEach(function(row) { console.log(row) })
 }
 function handleError(e) { console.log(e) }
 function createRows(size) {
   var rows = []
   for (var i = 0; i &amp;amp;lt; size; i++) {     rows.push(createSingleRow(i, size))   }   for (var i = size; i &amp;gt; 0; i--) {
     rows.push(createSingleRow(i, size))
   }
   return rows
 }
 function createSingleRow(index, size) {
   var rowAlphabet = ALPHABET.slice(0, index)
   var row = &amp;quot;&amp;quot;
   for (var j = 0; j &amp;amp;lt; size; j++) {
     row += rowAlphabet[j] &amp;amp;amp;&amp;amp;amp; j &amp;amp;lt; size
     ? rowAlphabet[j]
     : row.slice(-1)
   }
   return row + reverseString(row.slice(0, row.length-1))
 }
 function reverseString(s) { return s.split(&#39;&#39;).reverse().join(&#39;&#39;) }
&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Git Strategy with Feature Branches and Rebasing</title>
		<link href="https://www.lennu.net/2017/git-strategy-with-feature-branches-and-rebasing/"/>
		<updated>2017-02-21T00:00:00Z</updated>
		<id>https://www.lennu.net/2017/git-strategy-with-feature-branches-and-rebasing/</id>
		<content type="html">&lt;p&gt;My personal favorite Git strategy is this: (there are many ways to do it)&lt;/p&gt;
&lt;h2 id=&quot;every-feature-starts-from-master-branch&quot; tabindex=&quot;-1&quot;&gt;Every feature starts from &lt;strong&gt;master branch&lt;/strong&gt; &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2017/git-strategy-with-feature-branches-and-rebasing/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;git checkout master
git pull
git checkout -b feature/name-of-the-feature
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Code!&lt;/p&gt;
&lt;h2 id=&quot;after-coding-or-during-coding&quot; tabindex=&quot;-1&quot;&gt;After coding or during coding &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2017/git-strategy-with-feature-branches-and-rebasing/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Commit all the changes in your branch and push the branch to remote.&lt;/p&gt;
&lt;p&gt;You can commit all changes at once:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git add --all
git commit -m &amp;quot;Commit message&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or you can specify the commits with more detail&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git add name-of-the-file
git commit -m &amp;quot;Commit message&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once you are done commiting and you have no changes or untracked files left, push your branch to remote.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git push origin feature/name-of-your-feature
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;rebasing-your-branch&quot; tabindex=&quot;-1&quot;&gt;Rebasing your branch &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2017/git-strategy-with-feature-branches-and-rebasing/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Rebasing is a way to bring changes from the master branch which have been inserted there after you started your own feature branch.&lt;/p&gt;
&lt;p&gt;In rebasing you pull the changes from the master (you can specify some other target too) and start adding your feature branch’s commits on top of it.&lt;/p&gt;
&lt;p&gt;If there are a lot of changes in the master, especially things that are affecting your work, then I suggest you do a rebase everyday.&lt;/p&gt;
&lt;p&gt;If there are no changes that affect your work, then there is no need to do it as often. But keep in mind that if you branch starts to fall a lot behind master it may become very difficult to do the rebase, because there might be so many conflicts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This is my routine&lt;/strong&gt; for rebasing when I’m developing and have made all the commits on my feature branch:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git checkout master
git pull
git checkout feature/name-of-the-feature
git rebase master (you can add -i to modify/rename the commits if you want)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Rebase and fix conflicts and once finished:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git push origin your-branch -f
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you have succesfully rebased your branch and it’s in sync with master.&lt;/p&gt;
&lt;h2 id=&quot;multiple-developers-and-rebasing&quot; tabindex=&quot;-1&quot;&gt;Multiple developers and rebasing &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2017/git-strategy-with-feature-branches-and-rebasing/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you have multiple developers working on the same branch then you have to communicate the rebasing so that all developers get the force pushed version to their machine. They can’t just pull the branch since its history has changed and doesn’t match anymore to their own branch.&lt;/p&gt;
&lt;p&gt;You can also postpone the rebasing to a state where only one developer is working with the branch&lt;/p&gt;
&lt;h3 id=&quot;multiple-developer-rebasing-strategy&quot; tabindex=&quot;-1&quot;&gt;Multiple developer rebasing strategy &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2017/git-strategy-with-feature-branches-and-rebasing/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The problem with multiple developers working on the same branch can be solved by having one base branch and sub branches made from that base branch for each developer who works on the feature.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;master
&lt;ul&gt;
&lt;li&gt;base branch
&lt;ul&gt;
&lt;li&gt;each developers own branch&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now actually no one is working directly on the base branch.&lt;/p&gt;
&lt;p&gt;Own branches are merged with or without pull request to the base branch and once everything is done the base branch is merged into master. This is also good way to separate tasks to little branches and make the workflow better.&lt;/p&gt;
&lt;p&gt;When we want to get the latest changes from master, some developer will checkout the base branch and do the rebase on master.&lt;/p&gt;
&lt;p&gt;The sub branches are then rebased to the base branch.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>What is jQuery and how to use it</title>
		<link href="https://www.lennu.net/2016/what-is-jquery-and-how-to-use-it/"/>
		<updated>2016-08-25T00:00:00Z</updated>
		<id>https://www.lennu.net/2016/what-is-jquery-and-how-to-use-it/</id>
		<content type="html">&lt;p&gt;jQuery is the most used JavaScript library available. Its main job is to ease the creation of simple functions to a website. The syntax of jQuery is made very easy to read and it is most often the first JavaScript library that a new web developer becomes familiar with.&lt;/p&gt;
&lt;p&gt;You can select elements from a web page, create animations, add and modify events and create ajax functionalities. This is jQuery from google hosted content delivery network:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script src=&amp;quot;https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is a script that you can insert into the source of a website.&lt;/p&gt;
&lt;h2 id=&quot;overview&quot; tabindex=&quot;-1&quot;&gt;Overview &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/what-is-jquery-and-how-to-use-it/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Under the tree jQuery is DOM (Document Object Model) modifying library. For example, from a website you can find an element and change its color, modify text, increase font size, react to click events or hide the element. Everything that can be seen on a web page, can also be modified with jQuery.&lt;/p&gt;
&lt;p&gt;It is a really strong library if the DOM is wanted to be modified with ease and in a speedy fashion. It’s in usage in over half of available websites and the learning of it is really easy. The weakness of is the the its size. jQuery is a large library and a lot of things can be achieved by using it. But a lot of smaller libraries specified for exact usage do the same things in a better and more effective way.&lt;/p&gt;
&lt;p&gt;jQuery is at its best when the visible elements of a website must be modified dynamically. For example when a user clicks a button, jQuery reacts and shows something new to the user.&lt;/p&gt;
&lt;h2 id=&quot;features&quot; tabindex=&quot;-1&quot;&gt;Features &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/what-is-jquery-and-how-to-use-it/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The most important features of jQuery are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Selection of DOM elements&lt;/li&gt;
&lt;li&gt;The manipulation of DOM&lt;/li&gt;
&lt;li&gt;Events&lt;/li&gt;
&lt;li&gt;Effects and animations&lt;/li&gt;
&lt;li&gt;Ajax&lt;/li&gt;
&lt;li&gt;Deferred and promise&lt;/li&gt;
&lt;li&gt;Extraction of JSON&lt;/li&gt;
&lt;li&gt;Building on top of jQuery&lt;/li&gt;
&lt;li&gt;Bringing modern technologies to old web browsers&lt;/li&gt;
&lt;li&gt;Support for most web browsers&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are two versions of jQuery. The first and number one version is meant for the users that need support for old browsers. The second version only has support for moderns browsers.&lt;/p&gt;
&lt;h2 id=&quot;usage&quot; tabindex=&quot;-1&quot;&gt;Usage &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/what-is-jquery-and-how-to-use-it/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To start using jQuery, you need to append the script found at the top of the page to your website.&lt;/p&gt;
&lt;p&gt;The usage is simple. Choose and object which you want to do something with and do.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
$(&#39;body&#39;).hide() // this hides the body of the website, use show() to show
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The common thing with all jQuery methods is its dollar sign &lt;strong&gt;$&lt;/strong&gt;, a variable that starts all new jQuery actions. The functions are well named and do exactly what they say.&lt;/p&gt;
&lt;p&gt;There are hundreds of jQuery functions, some used more than the others but all of them have a special thing they solve. If you need to modify, add or follow something on a web page, you can probably do it with jQuery.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>jQuery animate Example with CSS, Duration and Easing</title>
		<link href="https://www.lennu.net/2016/jquery-animate-example-with-css-duration-and-easing/"/>
		<updated>2016-08-25T00:00:00Z</updated>
		<id>https://www.lennu.net/2016/jquery-animate-example-with-css-duration-and-easing/</id>
		<content type="html">&lt;p&gt;Animation is one of the key aspects of jQuery. It is such a big feature set that it has multiple different functions built inside jQuery library. jQuery animate is sort of custom function along with the other animation functions. You can animate almost any CSS style there is and create very good looking user interfaces by doing smooth transitions and effects according the to the actions made by the user.&lt;/p&gt;
&lt;p&gt;jQuery.animate() takes a set of parameters:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;properties, an object containing CSS Styles&lt;/li&gt;
&lt;li&gt;duration, how long the animation should take&lt;/li&gt;
&lt;li&gt;easing, in which style should jQuery do the animation (&lt;strong&gt;easing can only be ‘swing’ which is default or ‘linear’&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;callback, a function that should be ran after the animation has completed&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;With these parameters there are a lot of variety in the things you can implement with this function. The basic cases are usually simple but jQuery.animate() can be extended to be very powerful and multi-functional method.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(&#39;selector&#39;).animate(
  {
    &#39;css-property&#39;: &#39;value&#39;, // for example &#39;opacity&#39;: &#39;0.5&#39;,
  },
  duration, // integer for example 2000
  &#39;swing&#39;, // here we only have two choices &#39;swing&#39; and &#39;linear&#39;
  function(){
    // What you want to do after the animation?
  }
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As most of the time with jQuery, the function is applied to a specified selector or jQuery object. The animation can only affect the selection but the CSS properties could easily affect other elements on the page and change the look and feel dramatically.&lt;/p&gt;
&lt;p&gt;The set of CSS properties available and by this the set of things you can do it very vast. Because animate allows a lot of customization, you have to know what you want to do. It doesn’t strict you out to one particular thing but it lets you decide what needs to be done.&lt;/p&gt;
&lt;h2 id=&quot;examples&quot; tabindex=&quot;-1&quot;&gt;Examples &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/jquery-animate-example-with-css-duration-and-easing/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Lets do a simple example using all the parameters of jQuery animate. First we need a HTML structure that contain a div with some inline styling making the example more clear.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div style=&amp;quot;background: red; width: 150px; height: 150px;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;basic-example&quot; tabindex=&quot;-1&quot;&gt;Basic example &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/jquery-animate-example-with-css-duration-and-easing/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now we need the actual animate function. I have specified the animation to do &lt;strong&gt;opacity changing&lt;/strong&gt; which is a common task made with this function.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(&#39;div&#39;).animate(
  {
    &#39;opacity&#39;: &#39;0.5&#39;,
  },
  1000,
  &#39;swing&#39;,
  function() {
  	$(&#39;div&#39;).append(&#39;&amp;lt;span&amp;gt;Animation complete&amp;lt;/span&amp;gt;&#39;)
  }
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now as we can see the CSS we have in there is very simple: turn the opacity of an element to 0.5. The animation should last for one second and the easing should be linear. The function will add a span with some text inside the red div when the animation has been completed.&lt;/p&gt;
&lt;h3 id=&quot;multiple-styles-easing-and-arbitrary-values&quot; tabindex=&quot;-1&quot;&gt;Multiple styles, easing and arbitrary values &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/jquery-animate-example-with-css-duration-and-easing/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We could change multiple CSS properties at once in the same animation. We can also add individual animation easing to each property.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(&#39;div&#39;).animate(
  {
    &#39;opacity&#39;: [&#39;0.5&#39;, &#39;swing&#39;],
    &#39;width&#39;: [&#39;250px&#39;, &#39;linear&#39;],
    &#39;height: &#39;toggle&#39;
  },
  1000,
  function() {
  	$(&#39;body&#39;).append(&#39;&amp;lt;span&amp;gt;Animation complete&amp;lt;/span&amp;gt;&#39;)
  }
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We moved the jQuery selector to body in the callback function because, as you can see we used ‘toggle’ as our height value. This is a jQuery speciality that lets you write arbitrary values to properties and let jQuery handle the rest. These values can be: toggle, show and hide.&lt;/p&gt;
&lt;h2 id=&quot;options&quot; tabindex=&quot;-1&quot;&gt;Options &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/jquery-animate-example-with-css-duration-and-easing/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can also move from specified parameters to single options object. There are a lot of options that are not available in the first examples, most of them made specially for promise type of programming. For example with options you could add a &lt;strong&gt;start&lt;/strong&gt; function for the animations to be ran before the animation sets in. Lets turn the third example to the option way.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(&#39;div&#39;).animate(
  {
    &#39;opacity&#39;: [&#39;0.5&#39;, &#39;linear&#39;],
    &#39;width&#39;: [&#39;250px&#39;, &#39;swing&#39;],
    &#39;height&#39;: &#39;toggle&#39;
  },
  {
    &#39;duration&#39;: 1000,
    &#39;start&#39;: function() {
      $(&#39;body&#39;).append(&#39;&amp;lt;span&amp;gt;Animation started&amp;lt;/span&amp;gt;&#39;)
    },
    &#39;complete&#39;: function() {
      $(&#39;body span&#39;).text(&#39;Animation completed&#39;)
    },
  }
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we append the span to the body in the beginning and when the animation has been completed the text of the span is modified. You can find a lot of these options from &lt;a href=&quot;http://api.jquery.com/animate/#animate-properties-options&quot;&gt;http://api.jquery.com/animate/#animate-properties-options&lt;/a&gt;.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>jQuery after Definition and Example</title>
		<link href="https://www.lennu.net/2016/jquery-after-definition-and-example/"/>
		<updated>2016-08-25T00:00:00Z</updated>
		<id>https://www.lennu.net/2016/jquery-after-definition-and-example/</id>
		<content type="html">&lt;p&gt;With jQuery after you can add content after the specified selector. The content can be anything and the selector can be any element that is found on a web page. The content most often is a new HTML element or plain text. The selector should be an selector or a already initialized jQuery object that corresponds to real element on a page. Remember that &lt;strong&gt;jQuery.after() can only be applied to real elements&lt;/strong&gt; so you can’t use it on virtual variables that are not yet in the page.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(&#39;selector&#39;).after(&#39;content&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So the after function makes it possible to &lt;strong&gt;insert elements or some other content after the selected element&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&quot;examples&quot; tabindex=&quot;-1&quot;&gt;Examples &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/jquery-after-definition-and-example/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here we have a simple examples explaining the different situations where after can be used.&lt;/p&gt;
&lt;h3 id=&quot;working-example&quot; tabindex=&quot;-1&quot;&gt;Working example &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/jquery-after-definition-and-example/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Our first example will find a div element and apply the after function with another paragraph to it. Here we have a basic layout of HTML page with a div inside the body area.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next we will simply find the &lt;strong&gt;div&lt;/strong&gt; and add a paragraph &lt;strong&gt;after&lt;/strong&gt; it.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(&#39;div&#39;).after(&#39;&amp;lt;p&amp;gt;Some other text&amp;lt;/p&amp;gt;&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You could also write the same function with a different approach. This would work fine as well.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var div = $(&#39;div&#39;)
div.after(&#39;&amp;lt;p&amp;gt;Some other text&amp;lt;/p&amp;gt;&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or even like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var div = $(&#39;div&#39;)
var paragraph = $(&#39;&amp;lt;p&amp;gt;Some other text&amp;lt;/p&amp;gt;&#39;)
div.after(paragraph)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The process goes like this in the jQuery.after() function:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;jQuery finds the element specified by the selector&lt;/li&gt;
&lt;li&gt;after() inserts content specified in the parameter after the previously found element&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In the end with all styles, the final result would look something like this.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;body&amp;gt;
  &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;p&amp;gt;Some other text&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;example-with-common-mistake&quot; tabindex=&quot;-1&quot;&gt;Example with common mistake &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/jquery-after-definition-and-example/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;It is common to mix up after() and append() which functions a bit differently. after() inserts after the element, as append() inserts to the last position possible inside the element.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;body&amp;gt;
  &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you try to insert inside the div you need to use append().&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(&#39;div&#39;).after(&#39;&amp;lt;p&amp;gt;Some other text&amp;lt;/p&amp;gt;&#39;)
$(&#39;div&#39;).append(&#39;&amp;lt;p&amp;gt;Some another text&amp;lt;/p&amp;gt;&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This example will lead us to this final result:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;body&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;p&amp;gt;Some another text&amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;p&amp;gt;Some other text&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From this you can observe how append and after behaves a little bit differently.&lt;/p&gt;
&lt;p&gt;jQuery after is a good function for the right cause and you can find a lot of usage for it. You can also select multiple elements that get “after:ed” so that if you select all the divs in the page the after function will insert content after everyone of them.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>jQuery addClass with Explanation and Example</title>
		<link href="https://www.lennu.net/2016/jquery-addclass-with-explanation-and-example/"/>
		<updated>2016-08-25T00:00:00Z</updated>
		<id>https://www.lennu.net/2016/jquery-addclass-with-explanation-and-example/</id>
		<content type="html">&lt;p&gt;This function can help you daily. It simplifies the web development a lot and allows you to do complicated styling using classes. jQuery addClass does what is says. It adds a class to the object now under modification. It has no side effects and it really does only one simple thing add a class. It provides a powerful combination with removeClass() and toggleClass() to class handling.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(&#39;selector&#39;).addClass(&#39;name-of-the-class&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the class already exists in the specified jQuery object, it doesn’t do anything.&lt;/p&gt;
&lt;p&gt;Lets say you have an element like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div id=&amp;quot;great-div&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You apply $(‘#great-div’).addClass(‘new-class’) to that element and you’ll end up with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&amp;quot;new-class&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;example&quot; tabindex=&quot;-1&quot;&gt;Example &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/jquery-addclass-with-explanation-and-example/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Lets say we have this un-ordered list with ID mike. This list consists of items concerning name, age location and status about a person.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;ul id=&amp;quot;mike&amp;quot;&amp;gt;
    &amp;lt;li class=&amp;quot;name&amp;quot;&amp;gt;Mike&amp;lt;/li&amp;gt;
    &amp;lt;li class=&amp;quot;age&amp;quot;&amp;gt;18&amp;lt;/li&amp;gt;
    &amp;lt;li class=&amp;quot;location&amp;quot;&amp;gt;Europe&amp;lt;/li&amp;gt;
    &amp;lt;li class=&amp;quot;status&amp;quot;&amp;gt;Single&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we want to filter some information about Mike to be invisible. We create a CSS style class called: hidden.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.hidden {
    display: none;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With jQuery addClass we can now add this hidden class to the element which we want to hide. In this example we want to hide Mike’s age. First we find ID: mike, and then under that ID we find class: age.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var person = $(&#39;#mike&#39;)
person.find(&#39;.age&#39;).addClass(&#39;hidden&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We successfully have now added Mike’s age a hidden class.&lt;/p&gt;
&lt;p&gt;jQuery addClass allows you easily to do this kind of logic and really makes development faster and more streamlined. Combine this function with removeClass and toggleClass and you have generated yourself a fully functioning  front end system which relies to setting classes to elements based on actions by the users.&lt;/p&gt;
&lt;h3 id=&quot;dynamic-login-system&quot; tabindex=&quot;-1&quot;&gt;Dynamic Login System &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/jquery-addclass-with-explanation-and-example/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can do a dynamic login system with addClass. Have a button which has an click event that shows a login screen. First define the HTML.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;button id=&amp;quot;show-login-button&amp;quot;&amp;gt;&amp;lt;/button&amp;gt;
&amp;lt;div id=&amp;quot;login&amp;quot;&amp;gt;...&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Have CSS where login is hidden on default and if show-login class is added to the body class we show login.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;body.show-login #login {
    display: block;
}
 
#login {
    display: none;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally create an event listener that listens the button we defined earlier to have and click event that adds show-login class to body element.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(&#39;#showlogin-button&#39;).on(&#39;click&#39;, function() {
    $(&#39;body&#39;).addClass(&#39;show-login&#39;)
})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This kind of behavior is possible with jQuery addClass and they make it very important tool for everyone to have and know.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>jQuery addBack Explanation and Example</title>
		<link href="https://www.lennu.net/2016/jquery-addback-explanation-and-example/"/>
		<updated>2016-08-25T00:00:00Z</updated>
		<id>https://www.lennu.net/2016/jquery-addback-explanation-and-example/</id>
		<content type="html">&lt;p&gt;jQuery addBack function adds the element found in the previous search to the jQuery object group. You can find elements under a parent element and add the parent element also the list of elements.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(&#39;selector&#39;).addBack()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Basically addBack takes the first selector and adds this to the final group of elements.&lt;/p&gt;
&lt;p&gt;Find a div and search buttons under it with addBack function: $(‘div’).find(‘button’).addBack(‘button’).&lt;br&gt;
You’ll end up with a group consisting of these elements [div, button, button, button, button, …]. You can create quite complicated selections and they will be fast and good in performance.&lt;/p&gt;
&lt;h2 id=&quot;example&quot; tabindex=&quot;-1&quot;&gt;Example &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/jquery-addback-explanation-and-example/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Usually addBack is used like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var elements = $(&#39;selector&#39;).find(&#39;another-selector&#39;).addBack()
 
// elements now contains selector and another-selector
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;First this finds the first selector from a web page and then finds elements under it with another selector. In normal situation the children elements were the ones that would be chosen to the jQuery element array. However when there is the last addBack function, also the first also known as the parent selector gets to the list of elements.&lt;/p&gt;
&lt;p&gt;For example there could be a list with five elements in it. The third one is important and it has been given its own ID. jQuery finds this element by looking for its ID. When we have found this element we want to find all the list items that follow it, the fourth and fifth. This can be done with nextAll function. When we use addBack with nextAll we can collect all three elements. After we have collected the list of elements we can pain their background to red.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;ul&amp;gt;
  &amp;lt;li&amp;gt;1&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;2&amp;lt;/li&amp;gt;
  &amp;lt;li id=&amp;quot;important&amp;quot;&amp;gt;3&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;4&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;5&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
var elements = $(&#39;#important&#39;).nextAll().addBack()
elements.css(&#39;background&#39;, red)
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;AddBack is not very common function, but it has its own little need and place of usage. It is very useful when we want to search elements from a long DOM tree but still keep the original parent element chosen.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>jQuery add Explained with Example</title>
		<link href="https://www.lennu.net/2016/jquery-add-explained-with-example/"/>
		<updated>2016-08-25T00:00:00Z</updated>
		<id>https://www.lennu.net/2016/jquery-add-explained-with-example/</id>
		<content type="html">&lt;p&gt;jQuery add function returns a new jQuery object which has been added the element given as a parameter. With this function you can add elements to already existing jQuery object and making it possible to do the modification of all these elements at once.&lt;/p&gt;
&lt;p&gt;So if we have already selected bunch of elements and stored them in a variable, we can add more elements to this variable. This could be necessary if we first wanted to pick a group of elements and add a group of elements somehow connected the previous group.&lt;/p&gt;
&lt;p&gt;Visualized the array of elements it would look like this:&lt;/p&gt;
&lt;p&gt;[0, 1, 2, 3, 4, 5]&lt;br&gt;
add([6, 7, 8, 9, 10])&lt;br&gt;
Finally our array would consist of [0, 1,  2, 3, 4, 5, 6, 7, 8, 9, 10]&lt;/p&gt;
&lt;p&gt;jQuery add is good example of a function that many doesn’t event know. It is one of these little helpers that the massive library gives us. If you learn to use it and remember of its existence you’ll be surprised of the use cases you will find with it.&lt;/p&gt;
&lt;h2 id=&quot;example&quot; tabindex=&quot;-1&quot;&gt;Example &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/jquery-add-explained-with-example/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here are some examples how to use jQuery add.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var elements = $(&#39;a&#39;)
elements.add(&#39;i&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;var elements = $(&#39;selector&#39;).add(&#39;another-selector&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;var elements = $(&#39;a&#39;)
var anotherElements = $(&#39;i&#39;)
 
elements.add(anotherElements)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;var elements = $(&#39;a&#39;)
elements.add(&#39;&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For example in the DOM there could be the section and div elements that we wanted to modify. You could first take all section elements, give them a border and then take div elements to the same group and give each of the elements a red background.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var elements = $(&#39;section&#39;)
elements.css(&#39;border&#39;, &#39;1px solid black&#39;)
elements.add(&#39;div&#39;)
elements.css(&#39;background&#39;, &#39;red&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add function is a good way to combine many elements that are searched with jQuery. It can really make the code easier to read and avoid unnecessary duplication of code. By using add, you can do the DOM manipulation once and not multiple times like you would have to if you were to multiple different groups of elements.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>How to use function from another controller in Symfony</title>
		<link href="https://www.lennu.net/2016/how-to-use-function-from-another-controller-in-symfony/"/>
		<updated>2016-08-25T00:00:00Z</updated>
		<id>https://www.lennu.net/2016/how-to-use-function-from-another-controller-in-symfony/</id>
		<content type="html">&lt;p&gt;Sometimes there is a need to to one of the functions from another controller. The way this is done is by serving the controller as as service of Symfony.&lt;/p&gt;
&lt;p&gt;For example we have a good solid function doing one specific thing with some entity. Lets say we have a entity that has an image associated with it and we have already done the processing and the fetching of the image somehow in one of our controller.&lt;/p&gt;
&lt;p&gt;Now we enter into a situation where we need this same image somewhere in a slightly different situation. We wouldn’t like to build the whole process again and we’d like to use the old controller to get through this.&lt;/p&gt;
&lt;p&gt;The solution might be to make the function static and make it so that it is not part of any instance, but that might not be a good and viable solution. If it helps you here is the way:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public static function nameOfTheFunction() {
    $doSomething = null;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The right way in Symfony if to serve the class as a service.&lt;/p&gt;
&lt;p&gt;Go to your services file in app/config/services.yml and append the following there, make sure that you are appending the controller you need to serve:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;app.your_controller_service:
    class: AppBundle&#92;Controller&#92;YourController
        calls:
            - [setContainer, [&amp;quot;@service_container&amp;quot;]]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now in our another controller which needs the &lt;strong&gt;services&lt;/strong&gt; of this controller we can call with this command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$some = $this-&amp;gt;get(&#39;app.your_controller_service&#39;)-&amp;gt;getSomeAction($passSomeParameters);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Thats it!&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>How to reset GIT commits of a branch</title>
		<link href="https://www.lennu.net/2016/how-to-reset-git-commits-of-a-branch/"/>
		<updated>2016-08-25T00:00:00Z</updated>
		<id>https://www.lennu.net/2016/how-to-reset-git-commits-of-a-branch/</id>
		<content type="html">&lt;p&gt;I assume that you are in branch and you’d like to forget about your commits.&lt;/p&gt;
&lt;p&gt;If you want to reset the whole branch and make it look like its master, and lose all the changes use this command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git reset --hard master
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to reset the previous commit but not lose the changes use this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git reset HEAD^
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to continue working but have the changes included in the same commit then you can use this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git commit --amend
&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Symfony vs Laravel – The Battle of Old and New</title>
		<link href="https://www.lennu.net/2016/symfony-vs-laravel/"/>
		<updated>2016-05-20T00:00:00Z</updated>
		<id>https://www.lennu.net/2016/symfony-vs-laravel/</id>
		<content type="html">&lt;p&gt;Question that arise for many new projects with PHP as their main back end language which web framework should I choose. How can you make a decision between Symfony and Laravel?&lt;/p&gt;
&lt;p&gt;These two PHP web frameworks are currently the two most used. They have a lot in common and Laravel actually uses some parts of Symfony, but in the end its a world of its own. Even though they have a lot in common, they also differ in many ways from each other. The basic object oriented model and model view controller pattern is in the heart of both.&lt;/p&gt;
&lt;h2 id=&quot;symfony&quot; tabindex=&quot;-1&quot;&gt;Symfony &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/symfony-vs-laravel/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Symfony has been a very successful web framework because it has successfully modularized itself and allow a lot of freedom in style. You can only use certain parts of Symfony and not follow the “Symfony” way of doing things. Symfony also extends greatly and has great documentation and large user base to support you.&lt;/p&gt;
&lt;p&gt;It is easy to integrate into and can stand as a solid structure around your old code base. Symfony has a lot of ways of doing things and as the framework doesn’t really strict you to one way, you can choose your own path. This is the biggest concern for new Symfony projects. Because there really is no mandatory structure you can do what ever you want and end in chaotically structured application. The basis is also kinda old and there aren’t standardized REST guides to help you do modern structures for website.&lt;/p&gt;
&lt;p&gt;Speed of development in Symfony is good. You can rapidly develop a fully functioning little website with some little features. But when you get into a large system stage you’ll start to take a lot of time doing many things related to entities and their controllers. Because there is no one true way of doing things you can easily go wrong and push yourself back a good time.&lt;/p&gt;
&lt;p&gt;The best thing is also the worst. The easiness to do things in Symfony is a two edged sword, it might give you great results but in the other end might stab you in the back. To overcome these problems, try to separate code and structure it well. Follow the best practices and don’t let code turn into spaghetti.&lt;/p&gt;
&lt;h2 id=&quot;laravel&quot; tabindex=&quot;-1&quot;&gt;Laravel &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/symfony-vs-laravel/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Laravel is the new kid on the block when it comes to PHP web frameworks. It is a young framework from 2011 and has gradually risen in to the peak positions of most followed and used web frameworks. Laravel is more web framework than Symfony. It offers very much tools and preferred ways of doing things. The user base is rising all the time and new versions with great documentation arise on a regular basis.&lt;/p&gt;
&lt;p&gt;Laravel projects should be started as new projects as there is no clear integration possibilities to old code bases. Laravel lets you do a lot of things freely but also restricts you in a sort of way that you don’t end up in a chaotic situation. Laravel tries to keep your code base clean and well structured. Laravel is more modern framework and it has lots of modern tools attached to it. The templating system is pure and simple and combined with support for nodejs task processing, it offers very good front end solutions straight from the box.&lt;/p&gt;
&lt;p&gt;Laravel and its controllers are made for RESTful services. The framework tries to guide you into the REST world and you’ll probably end with good solution if you follow the official documentation.&lt;/p&gt;
&lt;p&gt;The development process is really rapid as you can use a lot of techniques featured in Laravel. These techniques and tools make the development fast and efficient. It kind of restricts you to one way but this way is a really good way of doing things.&lt;/p&gt;
&lt;p&gt;The best thing in Laravel really is that it makes you focus on structure and create good code. It doesn’t offer very much space of movement but more enough to do complicated things. To master the framework well you will have to through a long journey. But you can get started very very easily and you’ll go through amazing learning process into the Laravel world.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/symfony-vs-laravel/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As we can notice from the reviews of the two there are one main factor that differs these two.&lt;/p&gt;
&lt;p&gt;The Symfony way is not really a way, it’s more a set of tools you can use to build your website. On the other hand Laravel is a way of doing things and doesn’t give you as much freedom.&lt;/p&gt;
&lt;p&gt;I have used both of them and personally I find Laravel to be more friendly and better web framework than Symfony. When going into Symfony and starting a project, you don’t really have one place to start the pieces are all over the place and there is no clear signaling to do things. You will find your own way and eventually end up refactoring a lot of code just because you didn’t know somethings you knew once your project gets to a more mature state. Laravel tries to keep you doing good and well structured code from the beginning and doesn’t allow you to go through the easiest route.&lt;/p&gt;
&lt;p&gt;With Symfony I’m sure you’ll learn a lot about programming in general while in Laravel you’ll sort of already a way of doing things. While the Laravel way is really good you don’t get the same experience as you would with Symfony. But because Laravel makes the development so rapid and don’t you do foolish things as easily, it is the clear winner for me when choosing a PHP web framework.&lt;/p&gt;
&lt;p&gt;I’ll just leave the current Google Trends chart here at the bottom. From this we can verify that Laravel has taken over a big part of the PHP world. The updates for Laravel seems to be good and the framework is really stable and production ready. So if you are trying to figure out which framework to go with, think about your project and what you want to achieve and how. Laravel makes rapid, solid and efficient development in Laravel way. But Symfony gives you more freedom.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>JavaScript Semicolons Are Not Necessary</title>
		<link href="https://www.lennu.net/2016/javascript-semicolons-are-not-necessary/"/>
		<updated>2016-05-19T00:00:00Z</updated>
		<id>https://www.lennu.net/2016/javascript-semicolons-are-not-necessary/</id>
		<content type="html">&lt;p&gt;Did you know that when you are writing JavaScript, most of the time you don’t actually need to use semicolon in the end of the line. In most programming languages semicolons are mandatory in the end of the line. But in more modern languages, like JavaScript, Python or Swift, this tradition has been cut off. These languages handle the the ending of a statement some other way.&lt;/p&gt;
&lt;p&gt;In JavaScript a line end is recognized as a ending for a statement. There are few special cases when this doesn’t happen and we will go through these in a bit.&lt;/p&gt;
&lt;p&gt;JavaScript semicolons are however a possibility which you can use. This makes is a bit harder to understand when you need them and when you don’t. But in my opinion it is better learn when you need them and when you don’t need them. That’s the way how you learn how JavaScript actually works and why it works that way.&lt;/p&gt;
&lt;p&gt;Most JavaScript programmers tend to always insert semicolon in the end of the line. This is mostly a habit and not an actual logical outcome. It is very rare that you should encounter a situation where code breaks or has unwanted behavior because you didn’t append a semicolon. There are some situations where this might happen and by learning them you can master JavaScript even better.&lt;/p&gt;
&lt;h2 id=&quot;javascript-semicolon&quot; tabindex=&quot;-1&quot;&gt;JavaScript Semicolon &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/javascript-semicolons-are-not-necessary/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A new line ( &#92;n ) basically ends a statement. The following are the situations where this does not happen.&lt;/p&gt;
&lt;h3 id=&quot;open-declaration&quot; tabindex=&quot;-1&quot;&gt;Open declaration &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/javascript-semicolons-are-not-necessary/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you have an open declaration the new line won’t matter, for example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var greatArray = [
    1,
    2,
    3,
]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;increment&quot; tabindex=&quot;-1&quot;&gt;Increment &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/javascript-semicolons-are-not-necessary/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you write&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;foo++
bar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It will be translated into&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;++bar
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;one-line-if&quot; tabindex=&quot;-1&quot;&gt;One line if &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/javascript-semicolons-are-not-necessary/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you write&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if (false)
console.log(&#39;hello&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You won’t see the console.log statement. You need to have a statement or a semicolon to end the if.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if (false) ;
console.log(&#39;hello&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;loops&quot; tabindex=&quot;-1&quot;&gt;Loops &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/javascript-semicolons-are-not-necessary/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In loops the semicolon is often necessary. For loop requires you to have semicolons as a delimiter of its parameters.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;for (var i = 0; i &amp;lt; 10; i++) {
    console.log(i)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;next-statement-starts-with-an-binary-operator&quot; tabindex=&quot;-1&quot;&gt;Next statement starts with an binary operator &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/javascript-semicolons-are-not-necessary/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If the next statement right after the line without a semicolon starts with one the following special operators, it will be recognized as an expression to the previous statement.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;/li&gt;
&lt;li&gt;(&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;*&lt;/li&gt;
&lt;li&gt;/&lt;/li&gt;
&lt;li&gt;–&lt;/li&gt;
&lt;li&gt;,&lt;/li&gt;
&lt;li&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function greatFunction() {
    console.log(&#39;run&#39;)
}
 
greatFunction()
[1, 2, 3, 4, 5].forEach(function(number) {
    console.log(number)
})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The array will be interpreted as an expression to the previous function there will can be unwanted behavior or breaking of code. This can be prevented by using the semicolon on the right spot.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function runGreatFunction() {
    console.log(&#39;run&#39;)
}
 
runGreatFunction()
;[1, 2, 3, 4, 5].forEach(function(number) {
    console.log(number)
})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now if you notice we prepended the array with a semicolon and everything works perfectly. This semicolon is also very noticeable because it is prepended so it kind of shines in there saying there is something going on here.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/javascript-semicolons-are-not-necessary/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I recommend you all to try writing JavaScript without semicolons as it really makes you write better code. It is far more important to understand to understand the structures of JavaScript programming language than blindly append semicolons everywhere just to avoid an occasional error.&lt;/p&gt;
&lt;p&gt;You can now leave the semicolon in peace.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Gulp Tutorial with Examples</title>
		<link href="https://www.lennu.net/2016/gulp-tutorial-with-examples/"/>
		<updated>2016-05-18T00:00:00Z</updated>
		<id>https://www.lennu.net/2016/gulp-tutorial-with-examples/</id>
		<content type="html">&lt;p&gt;Gulp is a way to automate processes that one might have when building a system with JavaScript. It is at the moment the fastest build processor leaving behind the old school Grunt which was the previous winner.&lt;/p&gt;
&lt;p&gt;The main thing in Gulp are the &lt;strong&gt;tasks&lt;/strong&gt;. These are some examples about what the tasks usually are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Compiling&lt;/strong&gt; CSS with your favorite technology for example: Sass, LESS, Stylus&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Minifying&lt;/strong&gt; CSS&lt;/li&gt;
&lt;li&gt;Compiling JavaScript with your favorite bundler for example: Browserify, require.js, plain nodejs, or something else&lt;/li&gt;
&lt;li&gt;Minifying or &lt;strong&gt;Uglifying&lt;/strong&gt; JavaScript&lt;/li&gt;
&lt;li&gt;Cleaning folders and moving files from one place to another&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Watching&lt;/strong&gt; for changes in a folder and start processes if changes happen&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sounds cool right? There are a lot of tasks and automation you can achieve with Gulp. These tasks usually take a lot of time if needed to be done manually. The great thing with task runners is that when you do the tasks, everybody on the project can use them. One developer running tasks by hand is not that bad but if the number becomes two or usually more the benefits of these automated processes become solid.&lt;/p&gt;
&lt;h2 id=&quot;installation&quot; tabindex=&quot;-1&quot;&gt;Installation &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/gulp-tutorial-with-examples/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have tested this installation process on Ubuntu 14.04 and 16.04. First you need to have nodejs on your system. You can get it from here https://nodejs.org/en/.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm init # go through the steps with enter, no need to answer anything
npm install gulp --save-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Thats it, now you should have an npm project and a gulp saved to it. Then open up your package.json file on a editor and add &lt;strong&gt;gulp script&lt;/strong&gt; to there:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;example&amp;quot;,
  &amp;quot;version&amp;quot;: &amp;quot;1.0.0&amp;quot;,
  &amp;quot;description&amp;quot;: &amp;quot;&amp;quot;,
  &amp;quot;main&amp;quot;: &amp;quot;gulpfile.js&amp;quot;,
  &amp;quot;scripts&amp;quot;: {
    &amp;quot;test&amp;quot;: &amp;quot;echo &#92;&amp;quot;Error: no test specified&#92;&amp;quot; &amp;amp;&amp;amp; exit 1&amp;quot;,
    &amp;quot;gulp&amp;quot;: &amp;quot;gulp&amp;quot;
  },
  &amp;quot;devDependencies&amp;quot;: {
    &amp;quot;gulp&amp;quot;: &amp;quot;^3.9.1&amp;quot;
  },
  &amp;quot;author&amp;quot;: &amp;quot;&amp;quot;,
  &amp;quot;license&amp;quot;: &amp;quot;ISC&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;examples&quot; tabindex=&quot;-1&quot;&gt;Examples &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/gulp-tutorial-with-examples/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Gulp always needs a &lt;strong&gt;gulpfile&lt;/strong&gt;. Create gulpfile.js in the folder.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&#39;use strict&#39; // makes the JavaScript you write a little bit better
 
var gulp = require(&#39;gulp&#39;)
 
gulp.task(&#39;default&#39;, function() {
    console.log(&#39;Here is the default task&#39;)
})
 
gulp.task(&#39;sometask&#39;, function() {
    console.log(&#39;Here is some task&#39;)
})
 
gulp.task(&#39;someothertask&#39;, function() {
    console.log(&#39;Here is some other task&#39;)
})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we have a fully functioning automated Gulp task. It is nice to include a default task so you can run gulp with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm run gulp
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Otherwise you need to append the task name to the command.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm run gulp sometask
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;chaining-and-ordering-tasks&quot; tabindex=&quot;-1&quot;&gt;Chaining and ordering tasks &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/gulp-tutorial-with-examples/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Often a bit time after the initial Gulp configuration you tend to need to do tasks in certain order. In Gulp this has been done extremely easy. &lt;strong&gt;Lets modify our default task.&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gulp.task(&#39;default&#39;, [&#39;sometask&#39;, &#39;someothertask&#39;], function() {
    console.log(&#39;Here is the default task&#39;)
})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What this actually does is, it runs ‘sometask’ and then ‘someothertask’ and after those it runs the default task. This way you can order the tasks the way you want and create different combinations.&lt;/p&gt;
&lt;h3 id=&quot;sass-task&quot; tabindex=&quot;-1&quot;&gt;Sass task &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/gulp-tutorial-with-examples/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;npm install gulp-sass --save-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;var sass = require(&#39;gulp-sass&#39;)
 
gulp.task(&#39;sass&#39;, function() {
    return gulp.src([
        &#39;./sass/**/*.scss&#39;,
        &#39;./otherplace/sass/**/*.scss&#39;,
    ])
    .pipe(sass().on(&#39;error&#39;, sass.logError))
    .pipe(gulp.dest(&#39;./css&#39;))
})
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;minify-css-task&quot; tabindex=&quot;-1&quot;&gt;Minify CSS task &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/gulp-tutorial-with-examples/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;npm install gulp-clean-css --save-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;var cleanCSS = require(&#39;gulp-clean-css&#39;)
 
gulp.task(&#39;minify-css&#39;, function() {
    return gulp.src(&#39;./css/*.css&#39;)
    .pipe(cleanCSS())
    .pipe(gulp.dest(&#39;./css&#39;))
})
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;browserify-task&quot; tabindex=&quot;-1&quot;&gt;Browserify task &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/gulp-tutorial-with-examples/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;npm install browserify --save-dev
npm install vinyl-source-stream --save-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;var browserify = require(&#39;browserify&#39;)
var source = require(&#39;vinyl-source-stream&#39;)
 
gulp.task(&#39;browserify&#39;, function() {
    return browserify([&#39;./source/example.js&#39;, &#39;./source/anotherexample.js&#39;])
    .bundle()
    .pipe(source(&#39;bundle.js&#39;))
    .pipe(gulp.dest(&#39;./js&#39;))
})
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;uglify-task&quot; tabindex=&quot;-1&quot;&gt;Uglify task &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/gulp-tutorial-with-examples/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;npm install gulp-uglify --save-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;var uglify = require(&#39;gulp-uglify&#39;)
 
gulp.task(&#39;uglify&#39;, function() {
    return gulp.src(&#39;./js/*.js&#39;)
    .pipe(uglify())
    .pipe(gulp.dest(function(data) {
        return data.base
    }))
})
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;clean-task&quot; tabindex=&quot;-1&quot;&gt;Clean task &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/gulp-tutorial-with-examples/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;npm install del --save-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;var del = require(&#39;del&#39;)
 
gulp.task(&#39;clean&#39;, function() {
    return del([
        &#39;./css&#39;,
        &#39;./js&#39;,
    ])
})
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;watch-task&quot; tabindex=&quot;-1&quot;&gt;Watch task &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/gulp-tutorial-with-examples/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;gulp.task(&#39;watch&#39;, function() {
    gulp.watch(&#39;./sass/**/*.scss&#39;, [&#39;sass&#39;])
    gulp.watch(&#39;./source/**/*.js&#39;, [&#39;browserify&#39;])
})
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;gulp-4&quot; tabindex=&quot;-1&quot;&gt;Gulp 4 &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/gulp-tutorial-with-examples/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Gulp 4 is the new version of Gulp which has been in development for a quite some time and the release is coming close. The old ordering style in Gulp 3 has a lot of problems and bugs that the developers chose to fix by developing a new major version of Gulp. You can install it with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install gulpjs/gulp#4.0 --save-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The main difference there is the chaining process which changes to a more clean and simple solution. In Gulp 4 the ordering happens with functions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Notice that this doesn’t work with Gulp 3.&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gulp.task(&#39;default&#39;,
    gulp.series(
        &#39;clean&#39;,
        gulp.parallel(
            &#39;sass&#39;,
            gulp.series(&#39;browserify&#39;, &#39;uglify&#39;)
        ),
        &#39;watch&#39;,
    )
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we have a default task with processes going in the order of&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clean&lt;/li&gt;
&lt;li&gt;Sass at the same time as Uglify after Browserify&lt;/li&gt;
&lt;li&gt;Finally Watch&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gulp.series(&#39;task&#39;, &#39;task&#39;, &#39;task&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;you can run tasks in series followed by each other, and with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gulp.parallel(&#39;task&#39;, &#39;task&#39;, &#39;task&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;you can run tasks side by side at the same time&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>SQLite GUI Linux</title>
		<link href="https://www.lennu.net/2016/sqlite-gui-linux/"/>
		<updated>2016-04-07T00:00:00Z</updated>
		<id>https://www.lennu.net/2016/sqlite-gui-linux/</id>
		<content type="html">&lt;h1 id=&quot;sqlite-gui-linux-lennu-net&quot; tabindex=&quot;-1&quot;&gt;SQLite GUI Linux – Lennu.net &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/sqlite-gui-linux/&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;SQLite is a cool and a handy tool for creating small databases in development or just trying things out. To make it even better, you can install free GUI tools to help you in development.&lt;/p&gt;
&lt;p&gt;There are only few variant available at the moment and even less in major package repositories. There are only two available in Ubuntu 14.04 apt-get, and a few more outside the package managers. The easiest way to start with Linux SQLite GUI is to install one of the two software available in the package manager.&lt;/p&gt;
&lt;h2 id=&quot;sqliteman&quot; tabindex=&quot;-1&quot;&gt;SQLiteman &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/sqlite-gui-linux/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is probably the best straight out of APT available GUI tool for SQLite. It installs well and the feeling is quite modern once started.&lt;/p&gt;
&lt;p&gt;The overall view of the database is well done and shows everything you want. The actual database records seem to a little hidden and doesn’t work well for super large record bases.&lt;/p&gt;
&lt;p&gt;Scripts are easily written on the command bar and can be run with shortcuts. Weird thing is that the application gives you error if you append ; to your script, which is quite bad behavior.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install sqliteman
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;sqlite-browser&quot; tabindex=&quot;-1&quot;&gt;SQLite Browser &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/sqlite-gui-linux/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is a handy old looking tool, that works fairly well. The best part in it is the clear user interface that lets you see the records and the database layout in a single view. The file browser is terrible but you’ll find what you need with it.&lt;/p&gt;
&lt;p&gt;Testing specific commands shows that at least in Ubuntu 14.04 the application will crash if you make a bad SQL command. Major problem, but if you can deal with it, it is a good choice.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install sqlitebrowser
&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Symfony route optional parameter</title>
		<link href="https://www.lennu.net/2016/symfony-route-optional-parameter/"/>
		<updated>2016-04-06T00:00:00Z</updated>
		<id>https://www.lennu.net/2016/symfony-route-optional-parameter/</id>
		<content type="html">&lt;p&gt;Symfony routes can have optional parameters, so that your path works with or without a parameter. This is something that usually a good service should do so that the user won’t get lost and no error pages occur.&lt;/p&gt;
&lt;p&gt;This feature can be achieved by setting a default value for the parameter.&lt;/p&gt;
&lt;p&gt;Here are the examples of setting routes in Symfony with default parameter.&lt;br&gt;
Annotation:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/**
 * @Route(&amp;quot;/task/{task}&amp;quot;, defaults={&amp;quot;task&amp;quot; = 1})
 */
public function taskAction($task)
{
    
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;YAML:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;task:
    path:      /task/{task}
    defaults:  { _controller: AppBundle:Task:index, task: 1 }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;XML:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!-- app/config/routing.xml --&amp;gt;
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; ?&amp;gt;
&amp;lt;routes xmlns=&amp;quot;http://symfony.com/schema/routing&amp;quot;
    xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
    xsi:schemaLocation=&amp;quot;http://symfony.com/schema/routing
        http://symfony.com/schema/routing/routing-1.0.xsd&amp;quot;&amp;gt;
 
    &amp;lt;route id=&amp;quot;task&amp;quot; path=&amp;quot;/task/{task}&amp;quot;&amp;gt;
        &amp;lt;default key=&amp;quot;_controller&amp;quot;&amp;gt;AppBundle:Task:index&amp;lt;/default&amp;gt;
        &amp;lt;default key=&amp;quot;task&amp;quot;&amp;gt;1&amp;lt;/default&amp;gt;
    &amp;lt;/route&amp;gt;
&amp;lt;/routes&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;PHP:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;use Symfony&#92;Component&#92;Routing&#92;RouteCollection;
use Symfony&#92;Component&#92;Routing&#92;Route;
 
$collection = new RouteCollection();
$collection-&amp;gt;add(&#39;task&#39;, new Route(&#39;/task/{task}&#39;, array(
    &#39;_controller&#39; =&amp;gt; &#39;AppBundle:Task:index&#39;,
    &#39;task&#39;        =&amp;gt; 1,
)));
 
return $collection;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By using this, you can access pages /task and /task/2 by using the same controller and route. Remember that trailing slash /task/ does not work by default on Symfony (you need to redirect trailing slashes).&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>gedit plugins for web development</title>
		<link href="https://www.lennu.net/2016/gedit-plugins-for-web-development/"/>
		<updated>2016-04-05T00:00:00Z</updated>
		<id>https://www.lennu.net/2016/gedit-plugins-for-web-development/</id>
		<content type="html">&lt;p&gt;gedit can be enhanced to complete and successful code editor by getting some plugins. With the plugins you get major benefits of  accessibility and speed to the writing process. The plugins can be installed on all major Linux distributions which have gedit installed. This tutorial has been tested with Ubuntu 14.04 and should work on every other Ubuntu release also.&lt;/p&gt;
&lt;p&gt;First off you should check out gedit preferences which can be found from:&lt;br&gt;
Edit-&amp;gt;Preferences&lt;br&gt;
From there you can find all simple editor preferences like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Visible line numbers&lt;/li&gt;
&lt;li&gt;Text wrapping&lt;/li&gt;
&lt;li&gt;Highlighting&lt;/li&gt;
&lt;li&gt;Tab width in spaces&lt;/li&gt;
&lt;li&gt;Spaces instead of tabs&lt;/li&gt;
&lt;li&gt;Theme of gedit&lt;/li&gt;
&lt;li&gt;List of plugins and their preferences you want to use&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can install more gedit plugins by applying the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install gedit-plugins
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will install the best plugins immediately to be available on your gedit. The following list contains the most important plugins you get with the package:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Color Picker: You can choose a color from a color popup and insert its code straight to text&lt;/li&gt;
&lt;li&gt;Character Map: Browse a list of special characters and choose any to be inserted into the text&lt;/li&gt;
&lt;li&gt;Draw Spaces: This will let you draw spaces with little dots which is very important when doing clean code&lt;/li&gt;
&lt;li&gt;Session Saver: To continue your work from where you left off, you need to save your session with this plugin, otherwise you will always have to start from blank state&lt;/li&gt;
&lt;li&gt;Multi Edit: You can edit single file in multiple areas simultaneously with multi edit&lt;/li&gt;
&lt;li&gt;Code comment: Comment your code with control+M and remove comment with control+shift+m&lt;/li&gt;
&lt;li&gt;Bracket Completion: Detect bracket typing by completing the other end of the brackets&lt;/li&gt;
&lt;li&gt;Embedded Terminal: You can see and run terminal commands in gedit, very useful for having code hints all the time visible while typing&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;gedit-new-syntax-highlight-format&quot; tabindex=&quot;-1&quot;&gt;gedit new syntax highlight format &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/gedit-plugins-for-web-development/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you need more syntax highlighting formats, you need to get a lang file or copy an old one and paste it with different name. This all happens in:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/usr/share/gtksourceview-3.0/language-specs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For example for LESS, you can copy css.lang to less.lang to get LESS syntax highlighted appropriately.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Duplicate sources.list entry</title>
		<link href="https://www.lennu.net/2016/duplicate-sources-list-entry/"/>
		<updated>2016-04-05T00:00:00Z</updated>
		<id>https://www.lennu.net/2016/duplicate-sources-list-entry/</id>
		<content type="html">&lt;p&gt;Duplicate sources.list entry can be a pain to fix. It usually occurs while you are trying to install some new software and try to to install it by adding multiple sources and trying and trying. This fix is mainly fore Ubuntu 14.04 trusty version, but I will update it on every LTS version to come.&lt;/p&gt;
&lt;p&gt;After a while you notice that you have successfully made complete mess out of your APT package management. And you start to get weird warnings or errors just like this one:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;W: Duplicate sources.list entry http://archive.canonical.com/ubuntu/ trusty/partner amd64 Packages (/var/lib/apt/lists/archive.canonical.com_ubuntu_dists_trusty_partner_binary-amd64_Packages)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This tells us that there are sources lists that are duplicate or clones or each other and APT is doing a lot of work to figure out how to work this through.&lt;/p&gt;
&lt;h2 id=&quot;fix-by-reset&quot; tabindex=&quot;-1&quot;&gt;Fix by reset &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/duplicate-sources-list-entry/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The easiest way to fix the problem is to reset the whole apt-get sources lists. Type in these commands to have the sources lists first deleted.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak
sudo rm -rf /etc/apt/sources.list
sudo rm -rf /etc/apt/sources.list.d/*
sudo rm -rf /var/lib/apt/lists
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After you have deleted the old lists you can paste in a new one.&lt;/p&gt;
&lt;p&gt;This is a default file for sources.lists, if you need more specific one  (for example you might need Google Chrome repositories), please use the following generator &lt;a href=&quot;https://repogen.simplylinux.ch/&quot;&gt;https://repogen.simplylinux.ch/&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#------------------------------------------------------------------------------#
#                            OFFICIAL UBUNTU REPOS                             #
#------------------------------------------------------------------------------#
 
 
###### Ubuntu Main Repos
deb http://archive.ubuntu.com/ubuntu/ trusty main restricted universe multiverse 
deb-src http://archive.ubuntu.com/ubuntu/ trusty main restricted universe multiverse 
 
###### Ubuntu Update Repos
deb http://archive.ubuntu.com/ubuntu/ trusty-security main restricted universe multiverse 
deb http://archive.ubuntu.com/ubuntu/ trusty-updates main restricted universe multiverse 
deb-src http://archive.ubuntu.com/ubuntu/ trusty-security main restricted universe multiverse 
deb-src http://archive.ubuntu.com/ubuntu/ trusty-updates main restricted universe multiverse 
 
###### Ubuntu Partner Repo
deb http://archive.canonical.com/ubuntu trusty partner
deb-src http://archive.canonical.com/ubuntu trusty partner
 
#------------------------------------------------------------------------------#
#                           UNOFFICIAL UBUNTU REPOS                            #
#------------------------------------------------------------------------------#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After this run the following command to fetch new repository lists.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you should have the new correctly working lists on your Linux. Also all duplicate sources.list entries should be gone.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Connecting to archive.ubuntu.com</title>
		<link href="https://www.lennu.net/2016/connecting-to-archive-ubuntu-com/"/>
		<updated>2016-04-05T00:00:00Z</updated>
		<id>https://www.lennu.net/2016/connecting-to-archive-ubuntu-com/</id>
		<content type="html">&lt;p&gt;Because the Internet is going to move to IPv6 time, there are already ongoing changes happening around different internet operators. This causes some issues if some service in the middle or the final server does not support IPv6, you may get stuck to connecting.&lt;/p&gt;
&lt;p&gt;archive.ubuntu.com is somehow one of those servers that tend to get stuck if you try to connect to them by IPv6 from certain locations.&lt;/p&gt;
&lt;p&gt;To fix this, you need to set your gai(get address info) to notice if a site prefers IPv4 connection. Open up gai.conf and uncomment a line.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudoedit /etc/gai.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Uncomment line 54 to look like this:
 
precedence ::ffff:0:0/96  100
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Thats it. Your Linux and gai will now choose to prefer IPv4 if the connecting server is that sort.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Float Left, I’m Trying to Explain It</title>
		<link href="https://www.lennu.net/2016/float-left-im-trying-to-explain-it/"/>
		<updated>2016-01-20T00:00:00Z</updated>
		<id>https://www.lennu.net/2016/float-left-im-trying-to-explain-it/</id>
		<content type="html">&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/_FqHQGy20f-640.avif 640w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/_FqHQGy20f-640.webp 640w&quot;&gt;&lt;img alt=&quot;Float left&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/_FqHQGy20f-640.jpeg&quot; width=&quot;640&quot; height=&quot;200&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;I’m trying to explain what float: left; really does. And no it is not a magic function to get divs side by side.&lt;/p&gt;
&lt;p&gt;If you have developed a website you have come a cross this CSS style. You have used it, it has made incredible layouts for you and in the end you really have had no clue why you are using it.This is the actual line you can write to the website CSS file.&lt;/p&gt;
&lt;p&gt;What does it do? This is a tough one…&lt;/p&gt;
&lt;p&gt;Lets look at this from a non web developer point of view.&lt;/p&gt;
&lt;p&gt;People have to do lines in order to get into their favourite places. But if you are a VIP you can get out of the line and walk straight to the door. If we have multiple VIPs then they have to create their own line.&lt;/p&gt;
&lt;p&gt;This is sort of what happens when you say float:left to an html element.&lt;/p&gt;
&lt;p&gt;You create a new line of elements into the current container, but remember this, VIPs are invisible to their surroundings, and so are floating elements. See the picture on top.&lt;/p&gt;
&lt;p&gt;If you try to create a border around your element container, floated elements are not counted into this container. Just like VIPs are not contained into a waiting line. You can insert floated element with other elements and they will wrap around it, but the floated element is not using space in your container, other elements are just avoiding it.&lt;/p&gt;
&lt;h2 id=&quot;you-don-t-have-to-use-float-left-to-create-a-layout&quot; tabindex=&quot;-1&quot;&gt;You don’t have to use float left to create a layout &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/float-left-im-trying-to-explain-it/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2009/10/the-mystery-of-css-float-property/&quot;&gt;Smashing Magazine&lt;/a&gt; in 2009&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If it were not for the CSS &lt;code&gt;float&lt;/code&gt; property, CSS layouts would not be possible except using absolute and relative positioning&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is actually not true at all. At least not anymore.&lt;/p&gt;
&lt;p&gt;You can and you should create layouts without the floating thing. All major browsers ever since IE8 have had a possibility of displaying a block element as inline.&lt;/p&gt;
&lt;p&gt;The major problem web developers were trying to solve by using floating is the fact that block level elements don’t follow each other. Two divs (HTML Document Division Elements) cannot be next to one another. They are by default block elements.&lt;/p&gt;
&lt;p&gt;But hey, now you can make divs to be block level elements inline.&lt;/p&gt;
&lt;p&gt;Inline your elements and create any kind of layouts you want.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Vagrant Puppet Tutorial</title>
		<link href="https://www.lennu.net/2016/vagrant-puppet-tutorial/"/>
		<updated>2016-01-14T00:00:00Z</updated>
		<id>https://www.lennu.net/2016/vagrant-puppet-tutorial/</id>
		<content type="html">&lt;p&gt;Vagrant and Puppet are easy to configure together. In this tutorial I will show you how to setup a VirtualBox configured by Vagrant and provisioned by Puppet.&lt;/p&gt;
&lt;p&gt;So you will need to have these installed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VirtualBox&lt;/li&gt;
&lt;li&gt;Vagrant&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By the way this should work on all platforms including Linux, OS X and Windows.&lt;/p&gt;
&lt;h2 id=&quot;vagrantfile-example&quot; tabindex=&quot;-1&quot;&gt;Vagrantfile example &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/vagrant-puppet-tutorial/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Create a new directory for your project and create in there a file called &lt;strong&gt;Vagrantfile&lt;/strong&gt;. Paste the following into this file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&#92;# -&#92;*- mode: ruby -&#92;*-

&#92;# vi: set ft=ruby :

Vagrant.configure(2) do |config|

  config.vm.box &#92;= &amp;quot;ubuntu/trusty64&amp;quot;

  config.vm.define &amp;quot;dev&amp;quot;, primary: true do |dev|

    config.ssh.insert&#92;_key &#92;= false

    config.vm.hostname &#92;= &amp;quot;dev.machine&amp;quot;

    config.vm.network &amp;quot;private&#92;_network&amp;quot;, ip: &amp;quot;192.168.33.10&amp;quot;

    config.vm.provision &amp;quot;puppet&amp;quot; do |puppet|

      puppet.manifests&#92;_path &#92;= &amp;quot;puppet/manifests&amp;quot;

      puppet.manifest&#92;_file &#92;= &amp;quot;default.pp&amp;quot;

      puppet.module&#92;_path &#92;= &amp;quot;puppet/modules&amp;quot;

    end

  end

end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is a example file which uses Ubuntu / Trusty 64 bit 14.04 LTS. The box will be contactable on localhost (127.0.0.1) and its’ private network will be IP 192.168.33.10 (which you can add to your host file with a domain). The hostname will be just dev.machine.&lt;/p&gt;
&lt;p&gt;Puppet manifets will be applied from a folder: &lt;strong&gt;puppet/manifests&lt;/strong&gt;, and Puppet modules can be found from &lt;strong&gt;puppet/modules&lt;/strong&gt;. So create those folders into your project directory.&lt;/p&gt;
&lt;h2 id=&quot;puppet-file-structure&quot; tabindex=&quot;-1&quot;&gt;Puppet file structure &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/vagrant-puppet-tutorial/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Create a file called &lt;strong&gt;default.pp&lt;/strong&gt; into &lt;strong&gt;puppet/manifests&lt;/strong&gt;. Paste the following into the file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;include dev::dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we are including a module called dev into the manifest. Let’s create that.&lt;/p&gt;
&lt;p&gt;Create these folders:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;puppet/modules/dev/manifests&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;puppet/modules/dev/templates&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now create file called &lt;strong&gt;dev.pp&lt;/strong&gt; into &lt;strong&gt;puppet/modules/dev/manifests&lt;/strong&gt;. Paste the following into it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class dev::dev {

  notify { &#39;Saving examplefile.txt to /tmp&#39;:}&#92;-&amp;gt;

  file { &#39;/tmp/examplefile.txt&#39;:

    content &#92;=&#92;&amp;gt; template(&#39;dev/examplefile.txt&#39;),

  }

}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the manifest we are creating an examplefile.txt from our templates which we still need to create.&lt;/p&gt;
&lt;p&gt;Create a file called &lt;strong&gt;examplefile.txt&lt;/strong&gt; into &lt;strong&gt;puppet/modules/dev/templates/examplefile.txt&lt;/strong&gt; and write anything into it.&lt;/p&gt;
&lt;h2 id=&quot;starting-up-our-vagrantbox&quot; tabindex=&quot;-1&quot;&gt;Starting up our Vagrantbox &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2016/vagrant-puppet-tutorial/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now we have succesfully created the files necessary to create fully functioning VirtualBox which will be configured by our Vagrantfile and provisioned by Puppet. Start up the VirtualBox with &lt;strong&gt;vagrant up dev&lt;/strong&gt;, which will download the box and configure it and provision it on the first run.&lt;/p&gt;
&lt;p&gt;You will see all the action on the console log and afterwards you can log into the box with SSHing to &lt;a href=&quot;https://www.lennu.net/cdn-cgi/l/email-protection&quot;&gt;[email protected]&lt;/a&gt; There you will find our examplefile.txt from /tmp.&lt;/p&gt;
&lt;p&gt;Operate your Vagrantbox with the following commands:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vagrant up dev – Start the box&lt;/li&gt;
&lt;li&gt;vagrant reload dev – Reload the box&lt;/li&gt;
&lt;li&gt;vagrant provision dev – Provision the box while box is running&lt;/li&gt;
&lt;li&gt;vagrant suspend dev – Suspend and save status of the box&lt;/li&gt;
&lt;li&gt;vagrant halt dev – Shutdown the box&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thats your brief guide using Puppet with Vagrant.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Tutorial to create your own web font with SVG images</title>
		<link href="https://www.lennu.net/2015/tutorial-to-create-your-own-web-font-with-svg-images/"/>
		<updated>2015-11-27T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/tutorial-to-create-your-own-web-font-with-svg-images/</id>
		<content type="html">&lt;p&gt;In order to easily insert little images to your websites, you should really consider using svg icons which are inserted straight into your websites font. They can be used by applying a class to certain web elements.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/eXjfbuk9jW-249.avif 249w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/eXjfbuk9jW-249.webp 249w&quot;&gt;&lt;img alt=&quot;Font icons&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/eXjfbuk9jW-249.jpeg&quot; width=&quot;249&quot; height=&quot;100&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;First you need the SVG files of your images. Make sure they have all same aspect radius and same size. I recommend using same size on Y-axis and on X-axis, something like 88x88px. Otherwise your icons may vary in size and cause hard to do styling in HTML.&lt;/p&gt;
&lt;p&gt;There are some projects which can converts your SVG files to a font file. In this example we are going to use &lt;a href=&quot;http://endtwist.github.io/fontcustom/&quot;&gt;Font Custom&lt;/a&gt;. To install it on Linux (I’m using Ubuntu) follow the next steps:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install fontforge eot&#92;-utils ttfautohint

wget http://people.mozilla.com/~jkew/woff/woff-code-latest.zip

unzip woff-code-latest.zip -d sfnt2woff &amp;amp;&amp;amp; cd sfnt2woff &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo mv sfnt2woff /usr/local/bin/

gem install fontcustom
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or if you are on Mac OS X, use these:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install fontforge --with-python

brew install eot&#92;-utils

gem install fontcustom
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now when you have it installed on your machine you may convert the SVG files to the font. Use this simple example to use Font Custom:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fontcustom compile fontfolder --name my-icons
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Just replace font folder to the one where your SVG images are and click enter. Font Custom will now create a folder my-icons and convert the SVG files to a font. There is a nice preview file also created by Font Custom.&lt;/p&gt;
&lt;p&gt;You can use the font by browsing to the just created folder and including my-icons.css to your website.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link href&#92;=&amp;quot;my-icons.css&amp;quot; rel&#92;=&amp;quot;stylesheet&amp;quot; type&#92;=&amp;quot;text/css&amp;quot;&#92;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On the HTML code you can now include your custom font by writing for example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;i class&#92;=&amp;quot;icon-lightbulb&amp;quot;&#92;&amp;gt;&amp;lt;/i&#92;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The name is inherited from the SVG file names.&lt;/p&gt;
&lt;p&gt;Remember that in order to control the size of the custom fonts SVG image, you need to to apply font-size, not width or height.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Javascript Reduce with String Concatenation Example</title>
		<link href="https://www.lennu.net/2015/javascript-reduce-with-string-concatenation-example/"/>
		<updated>2015-11-19T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/javascript-reduce-with-string-concatenation-example/</id>
		<content type="html">&lt;p&gt;For many reduce function is unknown because you rarely need something like it. Reduce is actually a great function which helps your coding a lot if you learn how to use and when to use it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Reduce takes an array and applies something to each value and returns only one value.&lt;/strong&gt; In our example we will apply an array of strings to be concatenated together.&lt;/p&gt;
&lt;p&gt;The basic syntax of Reduce is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var x = [&#39;b&#39;,&#39;c&#39;,&#39;d&#39;].reduce(function(previous, current, index, array) {
  return previous + current
}, &#39;a&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you specify array in the function parameters, you don’t have to include start (‘a’) value. Start value is to be used if you include it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Our [‘b’,’c’,’d’] array will be put into reduce function.&lt;/li&gt;
&lt;li&gt;The first parameter of reduce is a function which get previous, current, index and our [‘b’,’c’,’d’] array.&lt;/li&gt;
&lt;li&gt;In the function we will &lt;strong&gt;return previous + current&lt;/strong&gt; which just concatenates them together.&lt;/li&gt;
&lt;li&gt;Reduce is now going to take each value in our array and apply it to our specified function.
&lt;ul&gt;
&lt;li&gt;Notice that on the &lt;strong&gt;first round the previous variable will be our start value ‘a’.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;After the first round&lt;/strong&gt;, current will be the first variable from our array [‘b’,’c’,’d’].&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;After the first round the return value will always be the next previous.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So this will happen:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;a + b&lt;/li&gt;
&lt;li&gt;ab + c&lt;/li&gt;
&lt;li&gt;abc + d&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;And after all the rounds our reduce function will return &lt;strong&gt;abcd&lt;/strong&gt; to our &lt;strong&gt;x&lt;/strong&gt; variable.&lt;/p&gt;
&lt;p&gt;It might sometimes be hard to find a problem where to use reduce. When you start to use it, you also start to find problems where you can have great benefits by using it. It has great performance and it is supported by major browsers including IE9. You can also find the same function from certain utility libraries such as lodash or underscore.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Responsive or Mobile site</title>
		<link href="https://www.lennu.net/2015/responsive-or-mobile-site/"/>
		<updated>2015-11-10T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/responsive-or-mobile-site/</id>
		<content type="html">&lt;p&gt;There are currently two good options for websites to have mobile accessibility. The first one is to have one fully responsive site and the other one is to have own website for mobile users (m.example.com). Before deciding which one you should go for, consider the next subjects first.&lt;/p&gt;
&lt;h2 id=&quot;one-responsive-web-site&quot; tabindex=&quot;-1&quot;&gt;One responsive web site &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/responsive-or-mobile-site/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is the number one choice of most websites these days. The simplicity of having only one website with only one content just makes it great choice for the majority of websites. If you don’t have plans to create content solely for mobile users, then this is your number one choice.&lt;/p&gt;
&lt;p&gt;Of course responsive sites also have drawbacks. For example the idea is to build your styling on your site so that it scales to every possible device and browser variation available on the market. Or if you happen to start having mobile only content, you need to design a logic on your site how to show desktop or mobile content.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Only one content to be written and administrated&lt;/li&gt;
&lt;li&gt;The design of the site has to scale to majority of devices and browsers&lt;/li&gt;
&lt;li&gt;How to show desktop or mobile content to different users?
&lt;ul&gt;
&lt;li&gt;What about SEO, which one should you choose to show for Google?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;mobile-site&quot; tabindex=&quot;-1&quot;&gt;Mobile site &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/responsive-or-mobile-site/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Separate mobile site seems to be the choice of big companies such which probably suggests to the fact that it is more expensive to build separate mobile site. These sites usually work in m.example.com subdomain where they have their own life and most often somewhat different design from the main website.&lt;/p&gt;
&lt;p&gt;Mobile only sites too have problems. When user is asked do they want to be connected to the mobile only site, users tend to feel that they these sites are somewhat narrowed down and not have all the functionalities which is often true. You just don’t have the resources to build as good site as your main page is. The content might be outdated or something is missing from the mobile site.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Two contents to manage&lt;/li&gt;
&lt;li&gt;The design can be a bit simpler and not to scale as much&lt;/li&gt;
&lt;li&gt;You can show different content to desktop or mobile users&lt;/li&gt;
&lt;li&gt;SEOwise it is a great option if you have mobile only content&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;so-which-one-do-i-choose&quot; tabindex=&quot;-1&quot;&gt;So, which one do I choose? &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/responsive-or-mobile-site/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We still haven’t seen a site with d.example.com where you would have desktop only site in a subdomain. So choose fully responsive site or site with mobile subdomain.&lt;/p&gt;
&lt;p&gt;If I had a website with content that was supposed to be seen only by the mobile users then I would go for the subdomain option. For example if you had a gaming site where the game client would be different for desktop and mobile then it would a great pain to make the users browsers to choose which one should it pick. You could enter into flickering site where mobile content would suddenly be shown or have to be waited with loading spinners spinning until the browser has made up its mind.&lt;/p&gt;
&lt;p&gt;If I had a website with only one content, I would definitely go for one fully responsive site. There would be no point to create subdomain with the mobile site, since every website can be designed to mobile view, it can be a bit trouble for large sites but I think its worth it.&lt;/p&gt;
&lt;p&gt;Make sure you choose this before starting your new website, other wise you could end up in a terrible mess. It is also a bit hard to change it when the project is ongoing.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Zeplin Collaboration Tool Review</title>
		<link href="https://www.lennu.net/2015/zeplin-collaboration-tool-review/"/>
		<updated>2015-11-05T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/zeplin-collaboration-tool-review/</id>
		<content type="html">&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/papp-1FuvC-523.avif 523w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/papp-1FuvC-523.webp 523w&quot;&gt;&lt;img alt=&quot;Zeplin&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/papp-1FuvC-523.png&quot; width=&quot;523&quot; height=&quot;510&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Lately I have been using a lot application called Zeplin. It is a collaboration tool between designers and developers. The main idea behind is that the designer can upload his or hers designs (mainly Sketch?) to the platform and all the details about it will be processed to easily viewable form. I as a developer have been using the application for a few months now on a daily basis and here are my thoughts about it.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/vccRAkS1Gi-850.avif 850w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/vccRAkS1Gi-850.webp 850w&quot;&gt;&lt;img alt=&quot;Zeplin User Interface&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/vccRAkS1Gi-850.png&quot; width=&quot;850&quot; height=&quot;425&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Zeplin allows the developer to see every detail of the design.&lt;/p&gt;
&lt;h2 id=&quot;native-application-vs-web-application&quot; tabindex=&quot;-1&quot;&gt;Native application vs. Web application &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/zeplin-collaboration-tool-review/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I’m a Linux user so I have only tested the web application, but as far as I have seen other people use it, they have liked the experience on the native OS X application.&lt;/p&gt;
&lt;p&gt;If you are on Linux or Windows, you have use the web application in order to use Zeplin. I fancy the web anyway so I kinda like it being in my browser. I have used Zeplin mainly on Firefox where it works quite nice, some slowness here and there but overall fine.&lt;/p&gt;
&lt;h2 id=&quot;the-user-interface&quot; tabindex=&quot;-1&quot;&gt;The User Interface &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/zeplin-collaboration-tool-review/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The UI is very easy to follow and quite simple. Zeplin seems to be one page application where you are presented with three columns. On the left you have designs of certain project, on the center you’ll see the actual design, and on the right you have details area.&lt;/p&gt;
&lt;p&gt;You have the design on your screen and where ever you want to get more details, you on click on it. Pixels, colours, margins, borders, sizes, gradients, you name it. The only thing I have had some trouble have been the text areas where some details have been left out, and I have had to ask the designer for them.&lt;/p&gt;
&lt;h2 id=&quot;missing&quot; tabindex=&quot;-1&quot;&gt;Missing &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/zeplin-collaboration-tool-review/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There still a lot of work to be done to make it perfect. Maybe in the future we could see automatic CSS lines of certain things. For example Zeplin nicely displays shadows, even every angle of them. But they could also print out the actual box-shadow CSS code.&lt;/p&gt;
&lt;p&gt;Designers can put design assets into Zeplin, but we haven’t used the option since we always like to have our images fully optimized, and I don’t see a way to put those images into Zeplin. I may be wrong.&lt;/p&gt;
&lt;p&gt;It is funny sometimes to notice a flaw in the design when Zeplin displays all the pixels precisely. Design containing a list could have different margins on the items just because it is unnoticeable on the human eye. But you just have to find the middle value.&lt;/p&gt;
&lt;h2 id=&quot;zeplin&quot; tabindex=&quot;-1&quot;&gt;Zeplin &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/zeplin-collaboration-tool-review/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It is a unique idea, and it has made my job a lot easier due not having to interrupt designers all the time with details about the sketch. The pricing is very low, and you can use it for free if you keep your sketches on one project.&lt;/p&gt;
&lt;p&gt;Try it out at &lt;a href=&quot;https://zeplin.io/&quot;&gt;https://zeplin.io/&lt;/a&gt; I’m sure you will like it, if you do a lot of close designer developer collaboration.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>jQuery Ajax Example with JSON Response</title>
		<link href="https://www.lennu.net/2015/jquery-ajax-example-with-json-response/"/>
		<updated>2015-05-23T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/jquery-ajax-example-with-json-response/</id>
		<content type="html">&lt;p&gt;On one of my first big Javascript projects I learned how to use &lt;a href=&quot;http://www.jquery.org&quot;&gt;jQuery&lt;/a&gt; and especially its Ajax function. Nowadays I use the library almost everyday for displaying, fetching and controlling the web.&lt;/p&gt;
&lt;p&gt;jQuery is a Javascript library which has been made to ease the development of JavaScript based websites and it offers massive framework for frontend web development. One major and maybe the best part of it is Ajax, Asynchronous JavaScript and XML. In common language you can you can load data into a website without refreshing it. On this post I will demonstrate how to use this function.&lt;/p&gt;
&lt;h2 id=&quot;jquery-ajax&quot; tabindex=&quot;-1&quot;&gt;jQuery Ajax &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/jquery-ajax-example-with-json-response/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The basic syntax of jQuery Ajax is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$.ajax(&#92;[settings&#92;])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are tens of &lt;a href=&quot;http://api.jquery.com/jquery.ajax/&quot;&gt;settings&lt;/a&gt; you can use for the function. But usually we are interested in the &lt;strong&gt;url&lt;/strong&gt;. The new syntax of jQuery ajax recommends everyone to use Promises. Which gives the function multiple callback options, like &lt;strong&gt;done&lt;/strong&gt; and &lt;strong&gt;fail&lt;/strong&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$.ajax({

  url: &#39;https://www.lennu.net/&#39;,

})

.done(function(data) {

  alert(data)

})

.fail(function() {

  alert(&amp;quot;Ajax failed to fetch data&amp;quot;)

})
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;example&quot; tabindex=&quot;-1&quot;&gt;Example &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/jquery-ajax-example-with-json-response/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In this example I will show you how to do Ajax with jQuery and how to process multidimensional JSON data table coming in through Ajax.&lt;/p&gt;
&lt;p&gt;This example is partly taken from a wine project which I was developing some time ago. On the project we did a lot of coding with Javascript and the main function was jQuery’s Ajax. In that project were creating a software with HTML5, Javascript, CSS and on the serverside with PHP and MySQL. The project wasn’t a great success but it taught me a lot about JavaScript. This example is about some of the technologies we were using on that project.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/Fi2LJxjkgy-569.avif 569w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/Fi2LJxjkgy-569.webp 569w&quot;&gt;&lt;img alt=&quot;jQuery Ajax Example with JSON Response&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/Fi2LJxjkgy-569.png&quot; width=&quot;569&quot; height=&quot;427&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;html&quot; tabindex=&quot;-1&quot;&gt;HTML &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/jquery-ajax-example-with-json-response/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We will start with HTML skeleton with jQuery already embedded in it from Google.&lt;/p&gt;
&lt;p&gt;Inside HTML we have three buttons, these buttons will be used for getting different kind of wines from our serverside.&lt;/p&gt;
&lt;p&gt;There is also a div where the wines will appear after being fetched from serverside.&lt;br&gt;
Add the Javascript code below to line 7.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;

&amp;lt;html&amp;gt;

&amp;lt;head&amp;gt;

&amp;lt;title&amp;gt;jQuery Ajax Example with JSON Response&amp;lt;/title&amp;gt;

&amp;lt;script src&#92;=&amp;quot;//ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js&amp;quot; type&#92;=&amp;quot;text/javascript&amp;quot;&#92;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;!-- Write Javascript code here --&amp;gt;

&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;

  &amp;lt;form method&#92;=&amp;quot;post&amp;quot; action&#92;=&amp;quot;&amp;quot;&#92;&amp;gt;

    &amp;lt;button value&#92;=&amp;quot;all&amp;quot; type&#92;=&amp;quot;submit&amp;quot;&#92;&amp;gt;Get All Wines!&amp;lt;/button&amp;gt;

    &amp;lt;button value&#92;=&amp;quot;red&amp;quot; type&#92;=&amp;quot;submit&amp;quot;&#92;&amp;gt;Get Red Wines!&amp;lt;/button&amp;gt;

    &amp;lt;button value&#92;=&amp;quot;white&amp;quot; type&#92;=&amp;quot;submit&amp;quot;&#92;&amp;gt;Get White Wines!&amp;lt;/button&amp;gt;

  &amp;lt;/form&amp;gt;

  &amp;lt;div id&#92;=&amp;quot;wines&amp;quot;&#92;&amp;gt;

  &amp;lt;!-- Javascript will print data in here when we have finished the page --&amp;gt;

  &amp;lt;/div&amp;gt;

&amp;lt;/body&amp;gt;

&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;javascript&quot; tabindex=&quot;-1&quot;&gt;Javascript &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/jquery-ajax-example-with-json-response/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here we have the Javascript for the HTML.&lt;/p&gt;
&lt;p&gt;Basically we have a submit event that fires when a button is clicked.&lt;br&gt;
Next we take the value of the button clicked and send it to serverside.php with jQuery’s ajax()-function. From this function we get back our JSON data which we’ll process on success.&lt;/p&gt;
&lt;p&gt;After that it’s simple if and else to append our #wines div.&lt;/p&gt;
&lt;p&gt;Add this to the HTML Skeleton in &lt;code&gt;HEAD&lt;/code&gt; section.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script type&#92;=&amp;quot;text/javascript&amp;quot;&#92;&amp;gt;

$(document).ready(function(){

  $(&#39;:submit&#39;).on(&#39;click&#39;, function() { // This event fires when a button is clicked

    var button &#92;= $(this).val();

    $.ajax({ // ajax call starts

      url: &#39;serverside.php&#39;, // JQuery loads serverside.php

      data: &#39;button=&#39; + $(this).val(), // Send value of the clicked button

      dataType: &#39;json&#39;, // Choosing a JSON datatype

    })

    .done(function(data) { // Variable data contains the data we get from serverside

      $(&#39;#wines&#39;).html(&#39;&#39;); // Clear #wines div

      if (button &#92;== &#39;all&#39;) { // If clicked buttons value is all, we post every wine

        for (var i in data.red) {

          $(&#39;#wines&#39;).append(&#39;Red wine: &#39; + data.red&#92;[i&#92;] + &#39;&amp;lt;br/&amp;gt;&#39;);

        }

        for (var i in data.white) {

          $(&#39;#wines&#39;).append(&#39;White wine: &#39; + data.white&#92;[i&#92;] + &#39;&amp;lt;br/&amp;gt;&#39;);

        }

      }

      else if (button &#92;== &#39;red&#39;) { // If clicked buttons value is red, we post only red wines

        for (var i in data) {

          $(&#39;#wines&#39;).append(&#39;Red wine: &#39; + data&#92;[i&#92;] + &#39;&amp;lt;br/&amp;gt;&#39;);

        }

      }

      else if (button &#92;== &#39;white&#39;) { // If clicked buttons value is white, we post only white wines

        for (var i in data) {

          $(&#39;#wines&#39;).append(&#39;White wine: &#39; + data&#92;[i&#92;] + &#39;&amp;lt;br/&amp;gt;&#39;);

        }

      }

    });

    return false; // keeps the page from not refreshing

  });

});

&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;serverside&quot; tabindex=&quot;-1&quot;&gt;Serverside &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/jquery-ajax-example-with-json-response/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now we need the serverside where Ajax will connect, create this file by the name of &lt;code&gt;serverside.php&lt;/code&gt; if you wish everything to run smoothly.&lt;/p&gt;
&lt;p&gt;This simple php gets clicked buttons value sent from our Ajax-function. After that we create a multidimensional data table.&lt;/p&gt;
&lt;p&gt;Finally we do a PHP’s JSON-encoding and if else the right table to send back to Ajax.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?php

// Get value of clicked button

$button &#92;= $&#92;_GET&#92;[&#39;button&#39;&#92;];

// Red wine table

$red &#92;= array(&#39;Chianti&#39;, &#39;Barolo&#39;, &#39;Pinot Noir&#39;);

$white &#92;= array(&#39;Chardonnay&#39;, &#39;Cava&#39;, &#39;Chablis&#39;);

// Combine red and white tables into one multidimensional table

$winetable &#92;= array(

  &amp;quot;red&amp;quot; &#92;=&#92;&amp;gt; $red,

  &amp;quot;white&amp;quot; &#92;=&#92;&amp;gt; $white,

);

// Finally depending on the button value, JSON encode our winetable and print it

if ($button &#92;== &amp;quot;red&amp;quot;) {

  print json&#92;_encode($red);

}

else if ($button &#92;== &amp;quot;white&amp;quot;) {

  print json&#92;_encode($white);

}

else {

  print json&#92;_encode($winetable);

}

?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These codes will produce a working HTML site with jQuery doing some cool Ajax! You can use them as a skeleton when you are building your own Ajax based website.&lt;/p&gt;
&lt;h3 id=&quot;more-javascript-coming-soon&quot; tabindex=&quot;-1&quot;&gt;More Javascript Coming Soon! &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/jquery-ajax-example-with-json-response/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I hope you have learned to do Ajax with jQuery from this example and can use this example maybe for something cool and useful! I’m gonna post more Javascript themed topics in the near future, so follow my Twitter to find out about new posts.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Less Mixins Example</title>
		<link href="https://www.lennu.net/2015/less-mixins-example/"/>
		<updated>2015-05-18T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/less-mixins-example/</id>
		<content type="html">&lt;p&gt;Less is a wonderful tool and one of the best things Less has to offer is the ability to create mixins with. In normal CSS you can’t do this. With mixins you can reduce the amount of code in HTML and keep your stylesheets more readable and modular.&lt;/p&gt;
&lt;h2 id=&quot;example&quot; tabindex=&quot;-1&quot;&gt;Example &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/less-mixins-example/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Lets think of situation where we have two similar looking buttons but they are not the same width. A very common situation in front-end development.&lt;/p&gt;
&lt;h3 id=&quot;css&quot; tabindex=&quot;-1&quot;&gt;CSS &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/less-mixins-example/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In traditional CSS we would create one general style to these elements and modify the width with another selector. This is fine and good way to do it in CSS but always requires you to write two selectors in your HTML.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;button class&#92;=&amp;quot;button-green button-login&amp;quot;&#92;&amp;gt;&amp;lt;/button&amp;gt;

&amp;lt;button class&#92;=&amp;quot;button-green button-login-wide&amp;quot;&#92;&amp;gt;&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;.button-green {

  background: green;

}

.button-green.button-login {

  width: 50px;

}

.button-green.button-login-wide {

  width: 75px;

}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;less&quot; tabindex=&quot;-1&quot;&gt;Less &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/less-mixins-example/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Less turns the traditional CSS backwards. In Less we can have two individual classes for the buttons and bring the general styles for them from a mixin. In result we can assign one selector in HTML to find the right styles for our button.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;button class&#92;=&amp;quot;button-login&amp;quot;&#92;&amp;gt;&amp;lt;/button&amp;gt;

&amp;lt;button class&#92;=&amp;quot;button-login-wide&amp;quot;&#92;&amp;gt;&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;.button-green() {

  background: green;

}

.button-login {

  button-green();

  width: 50px;

}

.button-login-wide {

  button-green();

  width: 75px;

}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The parentheses leaves the mixin out from the stylesheet so you can’t actually use that selector to create something. You can disable this feature by removeing the parentheses.&lt;/p&gt;
&lt;p&gt;Less mixins behauvior can of couse be streched and you can attach multiple mixins to a single selector. By using Less mixins you can achieve a great deal of modularity and reduced amount of code with better readability.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Simple PHP Template Engine</title>
		<link href="https://www.lennu.net/2015/simple-php-template-engine/"/>
		<updated>2015-05-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/simple-php-template-engine/</id>
		<content type="html">&lt;p&gt;I builded a very simple template engine for PHP. It is actually a fork from Drupal so this is pure GPL2 code. You can also read this post as a tutorial on how to use PHP strtr with a lot of arguments.&lt;/p&gt;
&lt;h2 id=&quot;php-template-engines&quot; tabindex=&quot;-1&quot;&gt;PHP Template Engines &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/simple-php-template-engine/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you look around for PHP template engine or something to do with templates you will end up with massive enterprise libraries which really has a lot of unimportant and not needed function in them. I have used Drupal for a while now on my work and it has the best function to format template. I stripped it down and made SPTE also known as Simple PHP Template Engine, and believe me when I say it is simple.&lt;/p&gt;
&lt;h3 id=&quot;php-html-code&quot; tabindex=&quot;-1&quot;&gt;PHP HTML Code &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/simple-php-template-engine/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;PHP Code is usually written inside HTML and these types of files are usually very unreadable because HTML and PHP are inlined within each other. With Simple PHP Template Engine we are going to wrap HTML inside a PHP variable and set variable spaces in it. It is a very smooth process and makes HTML code clean and separated from the PHP code.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/9wLXHbXL4k-917.avif 917w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/9wLXHbXL4k-917.webp 917w&quot;&gt;&lt;img alt=&quot;PHP HTML code&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/9wLXHbXL4k-917.jpeg&quot; width=&quot;917&quot; height=&quot;136&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Does this ring any bells? This kind of HTML within PHP is usually very unreadable.&lt;/p&gt;
&lt;h2 id=&quot;spte&quot; tabindex=&quot;-1&quot;&gt;SPTE &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/simple-php-template-engine/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The next block reseprents the source code of SPTE. If we look into the code we can see that the class has one function called &lt;strong&gt;format($template, $args),&lt;/strong&gt; which converts HTML special chars on arguments that start with @. At the end we return &lt;strong&gt;strtr()&lt;/strong&gt; which really is all we need.&lt;/p&gt;
&lt;h3 id=&quot;syntax&quot; tabindex=&quot;-1&quot;&gt;Syntax &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/simple-php-template-engine/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?php

class spte {

  public function format($template, $args) {

    foreach ($args as $arg &#92;=&#92;&amp;gt; $value) {

      if ($arg&#92;[0&#92;] &#92;== &#39;@&#39;) $args&#92;[$arg&#92;] &#92;= htmlspecialchars($value);

    }

    return strtr($template, $args);

  }

}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;SPTE is basically a php class which you can include to your favourite PHP file and use it with following syntax:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;include&#92;_once(&#39;spte.php&#39;);

$spte &#92;= new spte();

$spte&#92;-&amp;gt;format($template, array());
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;example&quot; tabindex=&quot;-1&quot;&gt;Example &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/simple-php-template-engine/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here is an example using SPTE to create a simple web page.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?php

include&#92;_once(&#39;spte.php&#39;);

$spte &#92;= new spte();

$template &#92;= &#39;

&amp;lt;!doctype html&amp;gt;

&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;

&amp;lt;head&amp;gt;

&amp;lt;title&amp;gt;Demo: Simple PHP Template Engine&amp;lt;/title&amp;gt;

&amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1&amp;quot;&amp;gt;

&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;

&amp;lt;h1&amp;gt;@heading&amp;lt;/h1&amp;gt;

&amp;lt;p&amp;gt;

  @hello-world Today is @date!&amp;lt;br/&amp;gt;

  Check out the source code to notice difference on the next lines.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;

  !fourth-line&amp;lt;br/&amp;gt;

  @fifth-line&amp;lt;br/&amp;gt;

&amp;lt;/p&amp;gt;

&amp;lt;/body&amp;gt;

&amp;lt;/html&amp;gt;

&#39;;

print $spte&#92;-&amp;gt;format($template, array(

  &#39;@heading&#39; &#92;=&#92;&amp;gt; &#39;SPTE&#39;,

  &#39;@hello-world&#39; &#92;=&#92;&amp;gt; &#39;Hello World!&#39;,

  &#39;@date&#39; &#92;=&#92;&amp;gt; date(&#39;l&#39;),

  &#39;!fourth-line&#39; &#92;=&#92;&amp;gt; &#39;This line is unconverted &amp;quot;&#39;,

  &#39;@fifth-line&#39; &#92;=&#92;&amp;gt; &#39;This line is converted &amp;quot;&#39;

));
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see we have included SPTE at the first lines and then created:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$template &#92;= &#39;

@example

!example

&#39;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which has all our HTML code. In that variable we are using the following variable spaces:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@example &#92;- which converts special characters to HTML entities.

!example &#92;- which just gives plain output from PHP.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The difference between the two can be seen at the &lt;a href=&quot;https://www.lennu.net/demo/spte/&quot;&gt;demo page&lt;/a&gt; where you need to check out the souce code of lines four and five.&lt;/p&gt;
&lt;p&gt;At the end we are using function of SPTE to format out HTML and give variable spaces the values we have assigned.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;print $spte&#92;-&amp;gt;format($template, array(

  &#39;@example&#39; &#92;=&#92;&amp;gt; &#39;[&#92;[email protected&#92;]](/cdn-cgi/l/email-protection)&#39;,

  &#39;!example&#39; &#92;=&#92;&amp;gt; &#39;example!&#39;

));
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can freely use SPTE for anything you want. I primarily made it for quick projects where I need PHP because I can get far better and more readable code with it.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>jQuery Mobile Slider Example with Swiper</title>
		<link href="https://www.lennu.net/2015/jquery-mobile-slider-example-with-swiper/"/>
		<updated>2015-05-14T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/jquery-mobile-slider-example-with-swiper/</id>
		<content type="html">&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/gxH-Xl9hv8-600.avif 600w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/gxH-Xl9hv8-600.webp 600w&quot;&gt;&lt;img alt=&quot;Swiper used by&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/gxH-Xl9hv8-600.jpeg&quot; width=&quot;600&quot; height=&quot;300&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Have you ever wondered how have some websites managed to create so well performing mobile slider? The answer is Swiper.&lt;/p&gt;
&lt;p&gt;jQuery Mobile Slider is something a lot of new mobile sites use these days to create horizontal sliding effects on their web pages. I have went through all of them to find the best one for my purposes. You can actually use even if you don’t have jQuery but you can surely use it as a plugin. This is the second post in my web slider post series and on this post I’m going to show you an very simple example of mobile optimized and well running slider.&lt;/p&gt;
&lt;p&gt;The JavaScript plugin I’m using is called Swiper, and I think a lot of websites use it these days even though they don’t mention it. It is simply great and it is being continuesly developed. It is used by Adobe, BMW, Disney etc. on their mobile websites, so it has quite good customer base. The greatest thing of course is that it’s completely free.&lt;/p&gt;
&lt;p&gt;In a mobile slider, I think, we are looking for some specially touch based logic. Like &lt;strong&gt;continuous sliding&lt;/strong&gt; after you release your finger from the screen, or in another words &lt;strong&gt;free rolling slider&lt;/strong&gt;. Swiper can manage to do that and it does it amazingly well. It is at its best on iPhones, but don’t choke it too much with events, on that side it has a lot to work on. I have found it to work on every machine and browser, so it is has great coding.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/JsfzTlTdGN-1464.avif 1464w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/JsfzTlTdGN-1464.webp 1464w&quot;&gt;&lt;img alt=&quot;Swiper&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/JsfzTlTdGN-1464.jpeg&quot; width=&quot;1464&quot; height=&quot;327&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Swiper is especially made for mobile browsers and has free rolling option.&lt;/p&gt;
&lt;h2 id=&quot;swiper-example&quot; tabindex=&quot;-1&quot;&gt;Swiper Example &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/jquery-mobile-slider-example-with-swiper/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have gathered here all the materials you need to create your own Swiper. First there is the HTML. The library includes are already in the template so you just need to download the plugin and place the dist folder to the same folder as you have your HTML file. You can download Swiper at &lt;a href=&quot;https://github.com/nolimits4web/Swiper/archive/v3.0.7.zip&quot;&gt;https://github.com/nolimits4web/Swiper/archive/v3.0.7.zip&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Remember you don’t actually have to use jQuery but there is jQuery and native plugins on the zip file. In this example we wont be using jQuery because we don’t need it.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt;

&amp;lt;html lang&#92;=&amp;quot;en&amp;quot;&#92;&amp;gt;

&amp;lt;head&amp;gt;

&amp;lt;title&amp;gt;Demo: jQuery Mobile Slider Example with Swiper&amp;lt;/title&amp;gt;

&amp;lt;link rel&#92;=&amp;quot;stylesheet&amp;quot; href&#92;=&amp;quot;dist/css/swiper.min.css&amp;quot;&#92;&amp;gt;

&amp;lt;meta name&#92;=&amp;quot;viewport&amp;quot; content&#92;=&amp;quot;width=device-width, initial-scale=1&amp;quot;&#92;&amp;gt;

&amp;lt;style&amp;gt;

.swiper-container { width: 95%; height: 300px; }

.swiper-slide { width: 32%; background: red; text-align: center; padding-top: 50%; font-size: 24px; }

&amp;lt;/style&amp;gt;

&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;

&amp;lt;!-- Add Swiper slides here! --&amp;gt;

&amp;lt;script src&#92;=&amp;quot;dist/js/swiper.min.js&amp;quot; type&#92;=&amp;quot;text/javascript&amp;quot;&#92;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;!-- Add the initialization JavaScript code here! --&amp;gt;

&amp;lt;/body&amp;gt;

&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are two places we need to fill in. There first one is the Swiper slides. Add these silder, or any slides you want into the HTML. Just follow the syntax.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div class&#92;=&amp;quot;swiper-container&amp;quot;&#92;&amp;gt;

  &amp;lt;div class&#92;=&amp;quot;swiper-wrapper&amp;quot;&#92;&amp;gt;

    &amp;lt;div class&#92;=&amp;quot;swiper-slide&amp;quot;&#92;&amp;gt;Hello&amp;lt;/div&amp;gt;

    &amp;lt;div class&#92;=&amp;quot;swiper-slide&amp;quot;&#92;&amp;gt;To&amp;lt;/div&amp;gt;

    &amp;lt;div class&#92;=&amp;quot;swiper-slide&amp;quot;&#92;&amp;gt;All&amp;lt;/div&amp;gt;

    &amp;lt;div class&#92;=&amp;quot;swiper-slide&amp;quot;&#92;&amp;gt;The&amp;lt;/div&amp;gt;

    &amp;lt;div class&#92;=&amp;quot;swiper-slide&amp;quot;&#92;&amp;gt;Readers&amp;lt;/div&amp;gt;

    &amp;lt;div class&#92;=&amp;quot;swiper-slide&amp;quot;&#92;&amp;gt;!!&amp;lt;/div&amp;gt;

    &amp;lt;div class&#92;=&amp;quot;swiper-slide&amp;quot;&#92;&amp;gt;Lennu.net&amp;lt;/div&amp;gt;

    &amp;lt;div class&#92;=&amp;quot;swiper-slide&amp;quot;&#92;&amp;gt;Swiper&amp;lt;/div&amp;gt;

  &amp;lt;/div&amp;gt;

&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At the end we only need to initialize Swiper with our favourite options. I like to use free rolling and looping on my example, but you can find a ton of options from &lt;a href=&quot;http://www.idangero.us/swiper/api/&quot;&gt;Swiper API&lt;/a&gt;. Add this JavaScript to your HTML page.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;

  var swiper &#92;= new Swiper(&#39;.swiper-container&#39;, { // HTML element selector

    slidesPerView: &#39;auto&#39;, // How many slides do we want per view? You can specify a number

    spaceBetween: 10, // Space between the slides

    freeMode: true, // Free rolling slider

    loop: true, // Swiper loops your slides, and there is no ending point

    loopedSlides: 8 // Safe option which needs to be set if you use slidesPerView: &#39;auto&#39;

  });

&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We have now created ourselves a multi device and multi browser working mobile optimized jQuery Slider! This tutorial has been about how create a very basic slider. There are a lot of work after this to place this to real application or website and style it very well. But with this template you have a very good starting point.&lt;/p&gt;
&lt;p&gt;Swiper is truly the best choice at the moment when building a new mobile website or mobile app with HTML5, if you need a well working slider. Please try it, use it, debug it and check out its website at &lt;a href=&quot;http://www.idangero.us/swiper/&quot;&gt;http://www.idangero.us/swiper/&lt;/a&gt;.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Responsive jQuery Slider Example with Owl Carousel</title>
		<link href="https://www.lennu.net/2015/responsive-jquery-slider-example-with-owl-carousel/"/>
		<updated>2015-05-13T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/responsive-jquery-slider-example-with-owl-carousel/</id>
		<content type="html">&lt;p&gt;Responsive jQuery Slider is something I have worked with for some time now. I have found some good plugins to create this and Owl Carousel is one of those jQuery plugins. Basically it is a plugin you need to create a slideshow to your website. This carousel is especially developed having responsive design in mind. Owl Carousel has two version but I recommend you all use the second version which is basically a rewrite of the first and has everything running smoother.&lt;/p&gt;
&lt;p&gt;Owl Carousel has plenty of modes and options to choose from but I’ve the plugin to be best at simple three images side by side image slider type of slideshow. The transitions are super smooth and the workflow is really simple. Owl Carousel doesn’t have free rolling so it is not very good when developing large sliders for mobile devices, but for small slideshows it works very well. The responsive options are very easily created.&lt;/p&gt;
&lt;p&gt;I have tested it on most of the major mobile devices and it works on all of them very nicely. And of course modern desktop browsers are supported too.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/pTlZim72LD-746.avif 746w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/pTlZim72LD-746.webp 746w&quot;&gt;&lt;img alt=&quot;Owl Carousel&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/pTlZim72LD-746.jpeg&quot; width=&quot;746&quot; height=&quot;153&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;With Owl Carousel you can make many kinds of slideshows, especially responsive.&lt;/p&gt;
&lt;h2 id=&quot;owl-carousel-example&quot; tabindex=&quot;-1&quot;&gt;Owl Carousel Example &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/responsive-jquery-slider-example-with-owl-carousel/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In order to initialize Owl Carousel, we need to include some files to our HTML code. There are JavaScript and CSS file to be included. As this is a jQuery plugin make sure you include jQuery before Owl Carousel. If you don’t, Owl Carousel can’t find jQuery and you will end up with JavaScript errors.&lt;/p&gt;
&lt;p&gt;Here is the HTML template we will be needing for this example. I also added some styling to make the example more clear.&lt;/p&gt;
&lt;p&gt;You can download Owl Carousel assets at &lt;a href=&quot;http://www.owlcarousel.owlgraphic.com/download/owl.carousel.zip&quot;&gt;http://www.owlcarousel.owlgraphic.com/download/owl.carousel.zip&lt;/a&gt;. Make sure to unzip them to the same location you have your web page on.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt;

&amp;lt;html lang&#92;=&amp;quot;en&amp;quot;&#92;&amp;gt;

&amp;lt;head&amp;gt;

&amp;lt;title&amp;gt;Demo: Responsive jQuery Slider Example with Owl Carousel&amp;lt;/title&amp;gt;

&amp;lt;link rel&#92;=&amp;quot;stylesheet&amp;quot; href&#92;=&amp;quot;assets/owl.carousel.css&amp;quot;&#92;&amp;gt;

&amp;lt;meta name&#92;=&amp;quot;viewport&amp;quot; content&#92;=&amp;quot;width=device-width, initial-scale=1&amp;quot;&#92;&amp;gt;

&amp;lt;style&amp;gt;

.owl-carousel { max-width: 900px; min-height: 300px; overflow: hidden; }

.owl-item { float: left; background: red; text-align:center; height: 100px; }

&amp;lt;/style&amp;gt;

&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;

&amp;lt;!-- Add Owl Carousel items here! --&amp;gt;

&amp;lt;script src&#92;=&amp;quot;//ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js&amp;quot; type&#92;=&amp;quot;text/javascript&amp;quot;&#92;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;script src&#92;=&amp;quot;owl.carousel.min.js&amp;quot; type&#92;=&amp;quot;text/javascript&amp;quot;&#92;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;!-- Add the initialization JavaScript code here! --&amp;gt;

&amp;lt;/body&amp;gt;

&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we need to add Owl Carousel HTML and its items to create our slideshow.&lt;br&gt;
Add the following HTML to the template.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div class&#92;=&amp;quot;owl-carousel&amp;quot;&#92;&amp;gt;

  &amp;lt;div class&#92;=&amp;quot;item&amp;quot;&#92;&amp;gt;1&amp;lt;/div&amp;gt;

  &amp;lt;div class&#92;=&amp;quot;item&amp;quot;&#92;&amp;gt;2&amp;lt;/div&amp;gt;

  &amp;lt;div class&#92;=&amp;quot;item&amp;quot;&#92;&amp;gt;3&amp;lt;/div&amp;gt;

  &amp;lt;div class&#92;=&amp;quot;item&amp;quot;&#92;&amp;gt;4&amp;lt;/div&amp;gt;

  &amp;lt;div class&#92;=&amp;quot;item&amp;quot;&#92;&amp;gt;5&amp;lt;/div&amp;gt;

&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we have the basic layout done, now we need to initialize it with some JavaScript code. There is a “responsive” section on the JavaScript, that creates the breakpoints where slide item count is changed. If you resize your browser, you can see that Owl Carousel changes its behaviour depending on the size of the window. Now add the following initialization script to the template and we are done.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script type&#92;=&amp;quot;text/javascript&amp;quot;&#92;&amp;gt;

$(&#39;.owl-carousel&#39;).owlCarousel({ // .owl-carousel is the element selector

  margin: 10, // gives space between carousel items

  stagePadding: 20, // shows a bit of the next item, which is still not visible

  responsive:{ // responsive behaviour

    0:{

      items:1

    },

    768:{ // for example at 768 screen width, owl carousel will only show two items

      items:2

    },

    970:{

      items:3

    }

  }

})

&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Thats it! You can find a lot more about Owl Carousel from its own &lt;a href=&quot;http://www.owlcarousel.owlgraphic.com/&quot;&gt;website&lt;/a&gt; there are many demos and all the options you can use with it.  This was only a little tutorial into the subject. Next I will be covering the mobile optimized slider called &lt;a href=&quot;http://www.lennu.net/jquery-mobile-slider-example-with-swiper/&quot;&gt;Swiper&lt;/a&gt; which is really good at doing free rolling slideshows.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Cloud Brokers to Marketize the Cloud</title>
		<link href="https://www.lennu.net/2015/cloud-brokers-to-marketize-the-cloud/"/>
		<updated>2015-05-12T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/cloud-brokers-to-marketize-the-cloud/</id>
		<content type="html">&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/H2keqfjzA1-600.avif 600w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/H2keqfjzA1-600.webp 600w&quot;&gt;&lt;img alt=&quot;Cloud Brokers&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/H2keqfjzA1-600.jpeg&quot; width=&quot;600&quot; height=&quot;300&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;At the moment cloud computing is somewhat scattered over various big players. All of them have their own standards and ways to implement their cloud. But they all have one thing in common. All of the cloud service providers basically want your app to be ran from their cloud, and they all have an automatic system to deploy your app into their cloud. I don’t know if this is already common knowledge out there, but I think there is a huge opportunity for a completely new market to be born.&lt;/p&gt;
&lt;h2 id=&quot;cloud-broker-service&quot; tabindex=&quot;-1&quot;&gt;Cloud Broker Service &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/cloud-brokers-to-marketize-the-cloud/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Cloud Service Broker is still a concept (in my opinion) and it means that a third party is set to be between the customer and the cloud service provider. This is because dealing with all the specifications can be timeconsuming and kinda hassle if you just want to release your great new application or website to the internet.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/rvdgyhgPfL-300.avif 300w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/rvdgyhgPfL-300.webp 300w&quot;&gt;&lt;img alt=&quot;House&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/rvdgyhgPfL-300.jpeg&quot; width=&quot;300&quot; height=&quot;225&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Cloud Brokering is a bit different than house brokering.&lt;/p&gt;
&lt;p&gt;Let’s say Bob wants to buy a house. He searches a bit and finds a great new home. Bob then contacts the housing broker (real estate agent) and buys the house. The great part is that the seller doesn’t need to communicate with the buyer, he or she can outsource the work to the broker.&lt;/p&gt;
&lt;p&gt;Cloud brokering is a bit different. In cloud broker service the customer goes directly to the broker and tells his or hers requirements for the cloud. Cloud broker finds the right cloud for him or her and deploys the application.&lt;/p&gt;
&lt;h3 id=&quot;advanced-service&quot; tabindex=&quot;-1&quot;&gt;Advanced Service &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/cloud-brokers-to-marketize-the-cloud/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This is really what gave the inspiration to write this post. Sure there are consultants doing all kind of recommendations for certain clouds and deploying services.&lt;/p&gt;
&lt;p&gt;But what if there would be a web application which would automate all of this. I can really see this happening since all the major cloud service providers have APIs for their service.&lt;/p&gt;
&lt;p&gt;Bob has just finished his great new app. He goes to a Cloud Broker website, signs up and chooses some variants for the cloud he would be needing. Bob then uploads his app to the web application which deploys it into the cheapest and the best matching cloud depending on Bobs choices. Bob has just deployed his app to the cloud. He doesn’t need to know where his app is, he just have to pay to the cloud broker for the service.&lt;/p&gt;
&lt;p&gt;Bob wakes up the next day and checks his emails. Cloud Broker had found better choice at night and had deployed Bobs app into this cloud. Bob saved money.&lt;/p&gt;
&lt;h3 id=&quot;techical-details&quot; tabindex=&quot;-1&quot;&gt;Techical Details &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/cloud-brokers-to-marketize-the-cloud/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The main technical tool required for this is the new container technology where platforms like &lt;a href=&quot;http://www.docker.com/&quot;&gt;Docker&lt;/a&gt; will play big part in the deployance of the web. Cloud Broker web application can create a container where the deployed application rests. This container can then be transferred and moved to where ever Cloud Broker finds the most suitable.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/SqGn4rn4Bo-640.avif 640w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/SqGn4rn4Bo-640.webp 640w&quot;&gt;&lt;img alt=&quot;Cloud Containers&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/SqGn4rn4Bo-640.jpeg&quot; width=&quot;640&quot; height=&quot;423&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Even at the middle of the night, your application could be moved into a better, more powerful or cheaper cloud.&lt;/p&gt;
&lt;h2 id=&quot;cloud-market&quot; tabindex=&quot;-1&quot;&gt;Cloud Market &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/cloud-brokers-to-marketize-the-cloud/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;What this all means is that the web application which matches customers requirements and chooses the best and the cheapest option can truly marketize the cloud. The service providers would have to compete against each other and not just rule by having best marketing program.&lt;/p&gt;
&lt;p&gt;Cloud computing is becoming the most used processing power there is. Cloud has all the necessarities this kind of market needs because cloud, basically lives in the cloud.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>jQuery Lazy Loading Images with Simple Example</title>
		<link href="https://www.lennu.net/2015/jquery-lazy-loading-images-simple-example/"/>
		<updated>2015-02-13T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/jquery-lazy-loading-images-simple-example/</id>
		<content type="html">&lt;p&gt;This week I stumbled upon a great mystery of Lazy Loading. I have seen this effect on multiple websites but never an example of how to do it.&lt;/p&gt;
&lt;p&gt;The basic idea is that when you have many images on a website, they tend to take a lot of time to load when user connects to your website. With lazy load we can prevent the loading of these images until user should see them.&lt;/p&gt;
&lt;h2 id=&quot;lazy-loading&quot; tabindex=&quot;-1&quot;&gt;Lazy Loading &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/jquery-lazy-loading-images-simple-example/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are variety of plugins and addons made to do this but I found them quite complicated and maybe too little of a function to come from a separate plugin. So why not do it ourselves if we could find a direction to the right path? Lazy loading can sound big project but it really isn’t, and really doesn’t need a plugin to do the work for you.&lt;/p&gt;
&lt;p&gt;So I searched and searched, and finally found this great site: &lt;a href=&quot;http://upshots.org/javascript/jquery-test-if-element-is-in-viewport-visible-on-screen&quot;&gt;http://upshots.org/javascript/jquery-test-if-element-is-in-viewport-visible-on-screen&lt;/a&gt;. This was exactly what I needed and credits goes to them. This is infact a jQuery plugin but the way it is presented gives a great value for using it in your own production.&lt;/p&gt;
&lt;h3 id=&quot;example&quot; tabindex=&quot;-1&quot;&gt;Example &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/jquery-lazy-loading-images-simple-example/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here’s the JavaScript code where is the isOnScreen function, which I linked earlier. It basically searches for the elements visibility on viewport or in other words does the use see the element.&lt;/p&gt;
&lt;p&gt;I have also made function called lazyload, which goes through all lazyload classed elements on the page and shows them by setting data-src to the elements src. By doing this the browser knows to load the received source data and that way shows the image to the user. I have attached also a event listener to scrolling so that when user scrolls the function is loaded.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script type&#92;=&amp;quot;text/javascript&amp;quot;&#92;&amp;gt;

window.onload &#92;= function() {

  $.fn.isOnScreen &#92;= function(){

    var win &#92;= $(window)

    var viewport &#92;= {

      top : win.scrollTop(),

      left : win.scrollLeft()

    }

    viewport.right &#92;= viewport.left + win.width()

    viewport.bottom &#92;= viewport.top + win.height()

    var bounds &#92;= this.offset()

    bounds.right &#92;= bounds.left + this.outerWidth()

    bounds.bottom &#92;= bounds.top + this.outerHeight()

    return (!(viewport.right &amp;lt; bounds.left || viewport.left &#92;&amp;gt; bounds.right || viewport.bottom &amp;lt; bounds.top || viewport.top &#92;&amp;gt; bounds.bottom))

  }

  function lazyload() {

    $(&#39;.lazyload&#39;).each(function() {

      var element &#92;= $(this)

      if (element.isOnScreen()) {

        element.attr(&#39;src&#39;, element.data(&#39;src&#39;))

        element.removeClass(&#39;lazyload&#39;)

      }

    })

  }

  lazyload()

  $(window).scroll(function() {

    lazyload()

  })

}

&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The elements which you want to lazy load, in this case the images, need to have &lt;strong&gt;lazyload class&lt;/strong&gt; attached into their HTML code. Also remember to &lt;strong&gt;insert the original image src to data-src&lt;/strong&gt; attribute.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;img class&#92;=&amp;quot;lazyload&amp;quot; data&#92;-src&#92;=&amp;quot;golden-star.png&amp;quot; alt&#92;=&amp;quot;Golden Star&amp;quot; /&#92;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can attach that JavaScript into your webpage where you have jQuery enabled and the images configured properly, and it should work okay for you. Remember in this example we only have scrolling event which might not always be enough.&lt;/p&gt;
&lt;p&gt;This example is simple and powerful and please study the JavaScript out to learn more of it. Here is finally some images which should give you idea how lazy loading really should work. I have attached lazy loading on this page by using the code that is in the example. If you go quicly through them you will see that they appear while browsing. Or if you can set Chrome browser to low internet connection speed, then you will surely see the effect. Or just take a look at your developer tools and see the images loading while scrolling down on the network tab.&lt;/p&gt;
&lt;p&gt;That was it! I hope you enjoyed the example. Please post a comment if you have something in mind about this!&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Sleep Function Examples of Popular Programming Languages</title>
		<link href="https://www.lennu.net/2015/sleep-function-examples-popular-programming-languages/"/>
		<updated>2015-01-23T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/sleep-function-examples-popular-programming-languages/</id>
		<content type="html">&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/foCR68eEAv-600.avif 600w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/foCR68eEAv-600.webp 600w&quot;&gt;&lt;img alt=&quot;Sleep function&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/foCR68eEAv-600.png&quot; width=&quot;600&quot; height=&quot;150&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;One of the most used functions of all time in programming is the sleep function. This widely spread function has come across at some point for us all. Usually at the beginning of learning how to program, we get the need to know how to processing of our finely tuned software. Most of the times this due to programming something in a funny way or just debugging and finding out what is going on.&lt;/p&gt;
&lt;p&gt;Sleep function is part of every modern and not so modern programming language. It is used on many tasks but usually the main task of it is to wait something to happen. It usually works by suspending the execution of currently processing thread, but I think there are some solutions which just causes the program to “wait” until the time specified in the Sleep Function has passed.&lt;/p&gt;
&lt;p&gt;The use cases where you have to use sleep function are quite minimal. I can only figure out one. If you have a job running on multiple web servers and the job updates on a regular basis. You apply a sleep function to the process and update them on a different interval so that at least one server has the information available all the time. Do you have any good examples of the sleep function?&lt;/p&gt;
&lt;h2 id=&quot;sleep-function-examples&quot; tabindex=&quot;-1&quot;&gt;Sleep Function Examples &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/sleep-function-examples-popular-programming-languages/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here I have gathered example code for the most used programming languages. If you think something is missing from the list, please post a comment and let me know.&lt;/p&gt;
&lt;p&gt;Remember using programming languages sleep function is usually not the best way to do waiting. In my opinion you should always use function callbacks  which occur after something has happened and not sleep the program until it has.&lt;/p&gt;
&lt;h3 id=&quot;abap&quot; tabindex=&quot;-1&quot;&gt;ABAP &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/sleep-function-examples-popular-programming-languages/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Releases the work process to the listener and does an implicit database commit.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;WAIT UP TO 10 SECONDS.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Does not release the process and does not do an implicit database commit.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CALL FUNCTION &#39;ENQUE&#92;_SLEEP&#39;

  EXPORTING

  seconds  &#92;= 10.
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;assembly&quot; tabindex=&quot;-1&quot;&gt;Assembly &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/sleep-function-examples-popular-programming-languages/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There ain’t no actual Assembly sleep function. Most of the times the best result is achieved by &lt;a href=&quot;http://www.tek-tips.com/viewthread.cfm?qid=701937&quot;&gt;using nested loops&lt;/a&gt; where every time the inner loop gets down to zero the mother loop decreases. This is a very complicated thing to do and in order to get perfect timing you need to test it out a lot.&lt;/p&gt;
&lt;h3 id=&quot;c&quot; tabindex=&quot;-1&quot;&gt;C &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/sleep-function-examples-popular-programming-languages/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;C sleep function is a very simple one.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sleep(10);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;c-1&quot; tabindex=&quot;-1&quot;&gt;C# &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/sleep-function-examples-popular-programming-languages/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;C# sleep function is literally stopping the processing thread from continuing.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Thread.Sleep(10000);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;c-2&quot; tabindex=&quot;-1&quot;&gt;C++ &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/sleep-function-examples-popular-programming-languages/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;C++ sleep function is the same as C.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sleep(10);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;cobol&quot; tabindex=&quot;-1&quot;&gt;COBOL &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/sleep-function-examples-popular-programming-languages/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There is no COBOL sleep function. Sleep state is achieved by &lt;a href=&quot;http://stackoverflow.com/questions/11786621/how-to-sleep-in-mainframe-cobol&quot;&gt;contacting the running environment&lt;/a&gt; and using the sleep function of system.&lt;/p&gt;
&lt;h3 id=&quot;delphi-object-pascal&quot; tabindex=&quot;-1&quot;&gt;Delphi/Object Pascal &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/sleep-function-examples-popular-programming-languages/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There is no Delphi/Object Pascal sleep function as the language requires you to do this &lt;a href=&quot;http://prestwood.com/ASPSuite/eBoard/Thread.asp?MBID=3033&quot;&gt;by using a function callback&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;java&quot; tabindex=&quot;-1&quot;&gt;Java &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/sleep-function-examples-popular-programming-languages/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Java sleep function is almost the same as in C#. This stops the thread processing for specified period of time.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Thread.sleep(1000);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;javascript&quot; tabindex=&quot;-1&quot;&gt;JavaScript &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/sleep-function-examples-popular-programming-languages/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There is no way to stop execution with JavaScript sleep function, but it certainly has a good way to achieve timing. So remember, this does not stop the processing of JavaScript, but it gets something done after the specified time.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;setTimeout(function(){ alert(&amp;quot;Lennu.net&amp;quot;); }, 10000);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;matlab&quot; tabindex=&quot;-1&quot;&gt;MATLAB &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/sleep-function-examples-popular-programming-languages/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;MATLAB sleep function is called pause, and it can be used in two ways. If you don’t give the time parameter it will pause the processing and wait for a key press. This is based on the system you are running so it shouldn’t be trusted to very accurate.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pause(10)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;objective-c&quot; tabindex=&quot;-1&quot;&gt;Objective-C &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/sleep-function-examples-popular-programming-languages/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;With Objective-C sleep function you can pause the great applications of iPhone, but remember once again that this is very bad practice in application development.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NSThread sleepForTimeInterval:10.0f&#92;];
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;perl&quot; tabindex=&quot;-1&quot;&gt;Perl &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/sleep-function-examples-popular-programming-languages/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Perl sleep function follows the same simple command which you can rely to stop the program for a specified amount of time.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sleep(10);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;php&quot; tabindex=&quot;-1&quot;&gt;PHP &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/sleep-function-examples-popular-programming-languages/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As PHP has a lot of functions from Perl and the PHP sleep function is very similar.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sleep(10);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;pl-sql&quot; tabindex=&quot;-1&quot;&gt;PL/SQL &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/sleep-function-examples-popular-programming-languages/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;PL/SQL sleep function is a procedure which suspends active session for the specified time.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;DBMS&#92;_LOCK.Sleep(10);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;python&quot; tabindex=&quot;-1&quot;&gt;Python &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/sleep-function-examples-popular-programming-languages/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In Python sleep function is located into time object which contains sleep that stop the execution for the time given to the function.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;time.sleep(10)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;r&quot; tabindex=&quot;-1&quot;&gt;R &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/sleep-function-examples-popular-programming-languages/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;R sleep function is from the Sys object.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Sys.sleep(10)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;ruby&quot; tabindex=&quot;-1&quot;&gt;Ruby &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/sleep-function-examples-popular-programming-languages/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Ruby sleep function follow the same simple syntax on sleep. This suspends the program from continuing.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sleep(10)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;transact-sql&quot; tabindex=&quot;-1&quot;&gt;Transact-SQL &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/sleep-function-examples-popular-programming-languages/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Transact-SQL is a bit more advanced and can do great stuff if you need specific sleep times. It is not very accurate though.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;WAITFOR DELAY &#39;00:00:10&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;visual-basic&quot; tabindex=&quot;-1&quot;&gt;Visual Basic &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/sleep-function-examples-popular-programming-languages/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Visual Basic sleep function is the shortest and quickest way to write program to suspend computing.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Sleep 10000
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;visual-basic-net&quot; tabindex=&quot;-1&quot;&gt;Visual Basic .NET &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/sleep-function-examples-popular-programming-languages/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Visual Basic sleep function is achieved from System which stops the current thread for specified amount of time.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;System.Threading.Thread.CurrentThread.Sleep(10000)
&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Windows, Mac, Linux</title>
		<link href="https://www.lennu.net/2015/window-mac-linux/windows-mac-linux/"/>
		<updated>2015-01-22T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/window-mac-linux/windows-mac-linux/</id>
		<content type="html">&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/YvMS5LRHgx-640.avif 640w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/YvMS5LRHgx-640.webp 640w&quot;&gt;&lt;img alt=&quot;Windows, Mac, Linux&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/YvMS5LRHgx-640.png&quot; width=&quot;640&quot; height=&quot;250&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;As long as I have lived we have had Windows, Mac and Linux operating systems. Windows is at it’s version of 8, Mac which operating system goes by the name of OS X is at its’ tenth version and Linux has a lot of different variations but the most used distribution is Ubuntu which is at version 14.10.&lt;/p&gt;
&lt;p&gt;This post based on my personal opinions of these operating systems and should be read that way. I have used Windows, Mac and Linux for considerably good time. I have based my thoughts on these moments and here I will give you a little tour of their strengths and weaknesses as Windows, Mac and Linux are ultimately the choices you have as a operting system. The idea for this post came at me when I was offered a brand new MacBook Pro at my workplace.&lt;/p&gt;
&lt;h2 id=&quot;windows-mac-and-linux-comparison&quot; tabindex=&quot;-1&quot;&gt;Windows, Mac and Linux comparison &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/window-mac-linux/windows-mac-linux/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As I said I have used Windows, Mac and Linux for a good time to know them well. Most of my time with computers I have spent with Windows. I have always had it home where I use it daily for media and gaming. I started to use Linux while I was at high school and where I got to install a web server for the first time. From that point I have used Linux on a weekly basis for operating my websites and did some cool project where I used Linux as a back end. I have also used its’ desktop utilities for many years on my laptop. Mac I haven’t used as much a the other two. I had a MacBook couple of years ago which worked very well and I used while studying.&lt;/p&gt;
&lt;h3 id=&quot;windows&quot; tabindex=&quot;-1&quot;&gt;Windows &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/window-mac-linux/windows-mac-linux/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Windows has always been my favourite operating system from the grand group of Windows, Mac and Linux. The easiness of it is the greatest thing, but as far as my knowledge has risen on Windows, you can do also the most advanced things with it.&lt;/p&gt;
&lt;p&gt;It is at its’ best when you just need a operating system which has great web browsing experience, gaming and working with a lot of files. Web browsers on Windows works great and the user interface of them combined to Windows is usually a very smooth experience.&lt;/p&gt;
&lt;p&gt;Windows is the most used and most supported operating system of Windows, Mac and Linux. Everything you need works on it and especially if you like gaming, you don’t have to fear that something wouldn’t work. The great hardware support on Windows is really effective matter, as most of the graphic cards are generally made especially for Windows.&lt;/p&gt;
&lt;p&gt;The user interface of Windows is by far the best of Windows, Mac and Linux. The ease of usage in all areas of Windows are the well cared to make the process as good as it can get. The combination of windows in Windows and your physical mouse can get anything done on fast pace. The file management is the grand jewel of Windows because it is brilliantly simple and you can navigate through them and find anything you need in no time.&lt;/p&gt;
&lt;h3 id=&quot;mac&quot; tabindex=&quot;-1&quot;&gt;Mac &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/window-mac-linux/windows-mac-linux/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Operating system of Mac is OS X, which is probably most modern system of Windows, Mac and Linux. It is very application based and has some of the best features there can be. The best thing about Mac is the grand ease of usage for people with very little computer skills. OS X guides you through everything and shows you the way if you are lost. So it is a safe choice for new people entering the world of computers.&lt;/p&gt;
&lt;p&gt;OS X is the second most used operating system used in desktop and laptop computer behind Windows. There are some things you can’t do with a Mac but usually those things that you can do are very well catered especially for Mac. The installation process of new applications is very straight forward compared to Windows. The user interface is very beautiful and gives a lot of inspiration to enthusiasts.&lt;/p&gt;
&lt;p&gt;As OS X is very similar to Linux deep down, it has a lot of its’ good sides, for example the command line interface. But if you are very experienced computer user and have been playing around with Windows and Linux for you entire life jumping into Mac can be a bit of a hassle. The file management is a mess and doesn’t feel like a good tool while using it. I can’t really tell what is the matter with it, but compared to Windows the file and window management feels very clumsy and complicated.&lt;/p&gt;
&lt;p&gt;One bad thing that bugs me every time I intend to start using Mac is the pressure of registering yourself an account to Apple services. OS X is the only platform that doesn’t give you the full properties of the operating system, if you are not registered to Apple.&lt;/p&gt;
&lt;h3 id=&quot;linux&quot; tabindex=&quot;-1&quot;&gt;Linux &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/window-mac-linux/windows-mac-linux/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Linux has been along very long time and mostly today it is used as a base for servers and phones because of its’ great features of customization. You can do anything with Linux. I have been using for many years Ubuntu Linux distribution on a server and on my laptop. Many think that using Linux on a laptop is weird and very hard. Actually &lt;a href=&quot;http://www.ubuntu.com/&quot;&gt;Ubuntu&lt;/a&gt; has been made to be very easy even for the most inexperienced users. The best part of Linux is application installation system which in Ubuntu is called apt-get. It is a command line based application, and I call it the best package manager computer can have.&lt;/p&gt;
&lt;p&gt;If I were to start using one of Windows, Mac and Linux as a beginner I would be happy if someone gave me direction towards Linux systems. The moment you start using command line and get to know it gives you great power and helps you do daily tasks with such ease that cannot be found from other operating systems. For example updating the operating system and its’ application is done by two little commands: update and upgrade.&lt;/p&gt;
&lt;p&gt;The graphical user interface of Linux is usually the worst of Windows, Mac and Linux. There just ain’t such resources in the Linux development community to create as good user interface as commercialized Windows and Mac has. You can do pretty much anything you want as in other operating systems, but most of the functions feel a bit unfinished.&lt;/p&gt;
&lt;p&gt;So why would you choose Linux from the group of Windows, Mac and Linux? Well one thing that amazes me on a regular basis is that people doesn’t care that it is free. But it certainly is. You can download and install Linux to your computer any day. All the updates are free and you will have hard time looking for a Linux software that ain’t free. Linux is also the root system and can be customized to what ever you want. There are all the same things that are in Macs but lacks also the same things as Mac do from Windows. It is the best operating system out of Windows, Mac and Linux for people who want to know how to do tasks and not just do them.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/window-mac-linux/windows-mac-linux/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Windows is the best operating system of the three, if you are looking for solid and very well supported operating system. The vast time spent to make the user interface as good as it is, is very impressive. Everything works and you can do anything you want with it.&lt;/p&gt;
&lt;p&gt;Mac is made to endure the user. If you want a cookie cutter system which does what you tell it to do, OS X does that the best of Windows, Mac and Linux. The experience will surely be the best and the most beautiful and you will become good friends with the operating system. There are some flaws like pressure for registering the system with Apple, and the lack of support for certain areas. The system can be customized but it is not intended. Personally I don’t like it at all because it closes you into its’ borders.&lt;/p&gt;
&lt;p&gt;Linux is the jack of all trades if you get to know it. The major thing about it the customization and how much you can do it. Linux can be the best operating system if you learn it well, but for even the most inexperienced users can found pure joy because nowadays Linux can also be the operating system for the first timers.&lt;/p&gt;
&lt;p&gt;Of Windows, Mac and Linux, Windows and Linux have been the greatest. Windows works always and is a speedy solution. Linux gives me abilities that Windows can’t achieve in a good way, and the great feeling of customization. Mac doesn’t do me anything since, its’ operating system OS X tries to bind me into it and make me forget everything else about computers.&lt;/p&gt;
&lt;p&gt;If you have a view which of the grand three is the best, let me know! Post a comment and share your thoughts.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>CSS Shadow</title>
		<link href="https://www.lennu.net/2015/css-shadow/"/>
		<updated>2015-01-19T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/css-shadow/</id>
		<content type="html">&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/qbRGeOUXw3-640.avif 640w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/qbRGeOUXw3-640.webp 640w&quot;&gt;&lt;img alt=&quot;CSS Shadow&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/qbRGeOUXw3-640.jpeg&quot; width=&quot;640&quot; height=&quot;400&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;With the latest CSS version CSS3 we were introduced on a major scale to the world of CSS Shadow. On January 13th 2015 Firefox officially enabled full support for CSS filters which allows developers to abandon old methods and conquer the new. In celebration of this I have concluded a post which contains examples of great CSS Shadow effects and how to use them.&lt;/p&gt;
&lt;p&gt;There are thousands of usage points with filters and one of the best is CSS Shadow. In order to achieve the effects of shadows in web design we may use text shadow, drop shadow or box shadow. The best case is if you can make a plain image and apply CSS Shadow to that and not create the picture with the shadow. This creates amazing effects on differently scaled and sized devices.&lt;/p&gt;
&lt;h2 id=&quot;css-shadow-examples&quot; tabindex=&quot;-1&quot;&gt;CSS Shadow Examples &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/css-shadow/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have gathered some great examples of the usage of CSS Shadow in a form of Text Shadow, Drop Shadow and Box Shadow. These all create the fantastic effects which we are looking for.&lt;/p&gt;
&lt;p&gt;I have commented a description of the attributes and how tou use the styling. By using CSS Shadow you enter yourself into the new world of web design. If you have questions or would like get a good example of some different CSS Shadow on this page, please make a comment.&lt;/p&gt;
&lt;h3 id=&quot;text-shadow&quot; tabindex=&quot;-1&quot;&gt;Text Shadow &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/css-shadow/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Text Shadow Example&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;text-shadow: 1px 2px 4px #000; // horizontal vertical blur color
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Text Shadow is a CSS Shadow which gives the text a proper shadow effect. This does not work on IE9 but IE10 does support it. Here is an example.&lt;/p&gt;
&lt;p&gt;Multiple Text Shadow Example&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;text-shadow: 2px 1px 2px #000, 0px 0px 1px #000; //horizontal vertical blur color
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Multiple shadows are created by applying multiple rules into the CSS line. This can give the text a more 3D feeling or a very nice color effect.&lt;/p&gt;
&lt;h3 id=&quot;drop-shadow&quot; tabindex=&quot;-1&quot;&gt;Drop Shadow &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/css-shadow/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;With drop shadow you can achieve great effects like taking a logo or a symbol out of a background and bringing it to life.  Drop shadows can be done by a special filter. Box shadow can be a backup for &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ie/gg589484%28v=vs.85%29.aspx&quot;&gt;IE9&lt;/a&gt; users but the truly great drop shadows for modern browsers are done by using the filter tag. This filter tag will create an amazing drop shadow which will follow all the lines of the targeted element.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/uf3K3Sd-tC-300.avif 300w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/uf3K3Sd-tC-300.webp 300w&quot;&gt;&lt;img alt=&quot;Golden Star&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/uf3K3Sd-tC-300.png&quot; width=&quot;300&quot; height=&quot;300&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-webkit-filter: drop-shadow(12px 12px 4px rgba(0,0,0,0.5));

filter: drop-shadow(12px 12px 4px rgba(0,0,0,0.5)); // horizontal vertical blur color
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;If you are using Firefox and don’t see the CSS Shadow effect&lt;/strong&gt;, then you are using an outdated version. Because on the version 35.0 Firefox added the support for drop shadow filter. An outdated version of Firefox drop shadow is created by using filter which makes an SVG Shadow outlining the target.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;filter: url(&amp;quot;data:image/svg+xml;utf8,&amp;lt;svg height=&#92;&#92;&#39;0&#92;&#92;&#39; xmlns=&#92;&#92;&#39;http://www.w3.org/2000/svg&#92;&#92;&#39;&amp;gt;&amp;lt;filter id=&#92;&#92;&#39;drop-shadow&#92;&#92;&#39;&amp;gt;&amp;lt;feGaussianBlur in=&#92;&#92;&#39;SourceAlpha&#92;&#92;&#39; stdDeviation=&#92;&#92;&#39;4&#92;&#92;&#39;/&amp;gt;&amp;lt;feOffset dx=&#92;&#92;&#39;12&#92;&#92;&#39; dy=&#92;&#92;&#39;12&#92;&#92;&#39; result=&#92;&#92;&#39;offsetblur&#92;&#92;&#39;/&amp;gt;&amp;lt;feFlood flood-color=&#92;&#92;&#39;rgba(0,0,0,0.5)&#92;&#92;&#39;/&amp;gt;&amp;lt;feComposite in2=&#92;&#92;&#39;offsetblur&#92;&#92;&#39; operator=&#92;&#92;&#39;in&#92;&#92;&#39;/&amp;gt;&amp;lt;feMerge&amp;gt;&amp;lt;feMergeNode/&amp;gt;&amp;lt;feMergeNode in=&#92;&#92;&#39;SourceGraphic&#92;&#92;&#39;/&amp;gt;&amp;lt;/feMerge&amp;gt;&amp;lt;/filter&amp;gt;&amp;lt;/svg&amp;gt;#drop-shadow&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This was a very good way to create drop shadows but since Firefox now also supports filters by default, it is a bit unnecessary. Please update your browser in order to enable the latest technologies.&lt;/p&gt;
&lt;h3 id=&quot;box-shadow&quot; tabindex=&quot;-1&quot;&gt;Box Shadow &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/css-shadow/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;With box shadow you can create boxy styled CSS Shadow. So it is perfect for rectangle like object, and not so good for rounded or oddly shaped objects. But it also supports more than one shadows, so you can create amazing effects like this glowy call to action button. This is created with two different shadows separated by a comma in CSS code.&lt;/p&gt;
&lt;p&gt;Call to action&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;box-shadow: 0 0 5px #108000, 0 0 8px #109600; // horizontal vertiucal blur color
&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Best Blogging Platform is WordPress</title>
		<link href="https://www.lennu.net/2015/best-blogging-platform-is-wordpress/"/>
		<updated>2015-01-16T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/best-blogging-platform-is-wordpress/</id>
		<content type="html">&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/AEbACLL6IA-680.avif 680w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/AEbACLL6IA-680.webp 680w&quot;&gt;&lt;img alt=&quot;Wordpress Logo&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/AEbACLL6IA-680.png&quot; width=&quot;680&quot; height=&quot;400&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;I have tried many many different blogging platform, and I have finally come to an conclusion that which one is the best blogging platform. It is WordPress. There are tens of very good blogging platforms out there, but there just aint as good as WordPress. My last blogging platform here on Lennu.net was Octopress, and it served me very well for last few years. It was a new technology when it was released and I was excited about it. But after using WordPress on some other websites, I knew that I had to change. There just are not as simple tool as WordPress and that makes it the best blogging platform.&lt;/p&gt;
&lt;h2 id=&quot;why-is-wordpress-the-best-blogging-platform&quot; tabindex=&quot;-1&quot;&gt;Why is WordPress the best blogging platform? &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/best-blogging-platform-is-wordpress/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are multiple reasons, but the reason number one is the fact that it is the simplest tool for blogging with thousands of features. The catch here is that those features are optional. Everyone will want to use some of these great features at some point. Why would you choose any other blogging framework as there might be a point where you want to do something special. In WordPress almost everything has been done and put into a plugin. Just install them and you are good to go. That is simple.&lt;/p&gt;
&lt;p&gt;If you want to write a new blog post. Click on Add New and write it, no hassle. Want to add some images into the post? Click Add Media and upload the picture, thats it. The ease of use in the interface of WordPress Admin has been done with great passion. There are nothing too much or too little.&lt;/p&gt;
&lt;p&gt;Did I mention the templates? There are hundreds of free magnificent templates for you to grab and have a great new look and feel on your blog.&lt;/p&gt;
&lt;p&gt;The comments on posts are easily managed and you can avoid spam by filtering everything by your command. Or you can use Disqus to have third party commenting platform. How ever you want to achieve the thing you want to do in WordPress, the main point is that probably there is a solution already.&lt;/p&gt;
&lt;p&gt;If you are looking for a great blogging platform, then WordPress it is. It is the best. The settings are easy to set and you shouldn’t have any think through moments with them. Just make the best blogging platform do what you want. Add a new post and write anything you want. Need a new feature like contact form? Install it from the plugins section.&lt;/p&gt;
&lt;p&gt;I have been trying to find the best blogging platform since 2006, and I have truly found it. It is at the same time the easiest to use and the most feature rich blogging platform there is. And that makes WordPress the best blogging platform and if you disagree, please leave a comment.&lt;/p&gt;
&lt;p&gt;You can have a free WordPress blogging platform at &lt;a href=&quot;http://wordpress.com/&quot;&gt;WordPress.com&lt;/a&gt;. And if you need any more details of the best blogging platform, please look at &lt;a href=&quot;http://wordpress.org/&quot;&gt;WordPress.org&lt;/a&gt;, which maintains the project.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Web Testing Tutorial Using DalekJS</title>
		<link href="https://www.lennu.net/2015/web-testing-tutorial-using-dalekjs/"/>
		<updated>2015-01-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/web-testing-tutorial-using-dalekjs/</id>
		<content type="html">&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/RT5J8hvEeu-325.avif 325w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/RT5J8hvEeu-325.webp 325w&quot;&gt;&lt;img alt=&quot;DalekJS Logo&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/RT5J8hvEeu-325.png&quot; width=&quot;325&quot; height=&quot;490&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Have you ever wondered how to easily test the web pages you were creating? Or just want to test some issues multiple times between development phases? I have tried some testing tools including the widely used Selenium. These tools tend to be quite heavy and hard to start doing the actual testing.&lt;/p&gt;
&lt;p&gt;Now there is a new guy in the room which in my opinion offers a quite new experience. Dalek.js provides simple and very fast way to do automated web testing which scales from very small projects to large ones. It supports all the major browsers and can script them, take screenshots and create reports about the tests.&lt;/p&gt;
&lt;h2 id=&quot;automated-web-testing&quot; tabindex=&quot;-1&quot;&gt;Automated web testing &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/web-testing-tutorial-using-dalekjs/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Web testing is something you would do to ensure everything is working correctly in a website. For example if you are developing a new website and you are still doing the development, you may want to make sure everything keeps working while doing changes to the source code. Or maybe you would want to test if your website is cross browser compatible?&lt;/p&gt;
&lt;p&gt;All of these can be quite time consuming to do if you start doing them by hand. And even if you would finish them fast there are always a chance that you can make human mistakes during the testing. What if you want to do the same tests later?&lt;/p&gt;
&lt;p&gt;For all of these cases there have been made software to help testing the web. One of the latest to enter this area is &lt;a href=&quot;http://dalekjs.com/&quot;&gt;DalekJS&lt;/a&gt; which comes with a powerful feature of beign very easy to deploy and write and run the tests.&lt;/p&gt;
&lt;h3 id=&quot;dalek-js-installation&quot; tabindex=&quot;-1&quot;&gt;Dalek.js installation &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/web-testing-tutorial-using-dalekjs/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We need to install node.js and npm in order to install Dalek.js.&lt;/p&gt;
&lt;h4 id=&quot;node-js&quot; tabindex=&quot;-1&quot;&gt;node.js &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/web-testing-tutorial-using-dalekjs/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;If you are using Ubuntu or similar modern Linux you can fetch it with the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install nodejs
sudo apt-get install npm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If your Linux can’t find the packages you can compile them yourself by downloading the source from: &lt;a href=&quot;http://nodejs.org/download/&quot;&gt;http://nodejs.org/download/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;From the same location you can also download the Windows installer.&lt;/p&gt;
&lt;h4 id=&quot;dalek-js&quot; tabindex=&quot;-1&quot;&gt;dalek.js &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/web-testing-tutorial-using-dalekjs/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Once we have installed node.js we can fetch dalek.js from npm repository.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install dalek-cli -g
npm install dalekjs --save-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Thats it! You can verify that the installation is completed with &lt;code&gt;dalek -v&lt;/code&gt;. Now we can write our first test.&lt;/p&gt;
&lt;h3 id=&quot;running-dalekjs&quot; tabindex=&quot;-1&quot;&gt;Running DalekJS &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/web-testing-tutorial-using-dalekjs/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Lets create a directory and open up a file for our test:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir dalekJStest
cd dalekJStest
nano test1.js
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we will write our test code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;module.exports = {
	&#39;Hacker News Testing&#39;: function (test) {
	test
		.open(&#39;https://news.ycombinator.com/news&#39;)
		.assert.title().is(&#39;Hacker News&#39;, &#39;Hacker News has the correc title!&#39;)
		.click(&#39;a[href=&amp;quot;newest&amp;quot;]&#39;)
		.waitForElement(&#39;body&#39;)
		.assert.title().is(&#39;New Links | Hacker News&#39;, &#39;New Links section has the correc title!&#39;)
		.done();
	}
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run the file with the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dalek test1.js
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The test opens Hacker News website and checks if the page title is correct. After that the test opens a link, waits for the site to load and check the title of that page.&lt;br&gt;
After running the tests if everything went well we should see passed test results.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;RUNNING TEST - &amp;quot;Page title is correct&amp;quot;
&amp;gt; OPEN https://news.ycombinator.com/news
* TITLE Hacker News has the correc title!
&amp;gt; CLICK a[href=&amp;quot;newest&amp;quot;]
&amp;gt; WAITFORELEMENT
* TITLE New Links section has the correc title!
* 2 Assertions run
* TEST - &amp;quot;Page title is correct&amp;quot; SUCCEEDED
 
 2/2 assertions passed. Elapsed Time: 2.26 sec
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;real-browser-automated-testing&quot; tabindex=&quot;-1&quot;&gt;Real Browser Automated Testing &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/web-testing-tutorial-using-dalekjs/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;If you want to use real browser to run the test just use these commands and a Chrome browser will fireup and run your test as you witnessing everything.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install dalek-browser-chrome --save-dev
dalek test/my_first_test.js -b chrome
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;more-testing&quot; tabindex=&quot;-1&quot;&gt;More testing &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/web-testing-tutorial-using-dalekjs/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you want to learn more, go check DalekJS website and their &lt;a href=&quot;http://dalekjs.com/pages/documentation.html&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As this tutorial shows the setup of testing component is not hard and with DalekJS you can be testing your websites of application withing 10 minutes. I hope you have learned web testing from this tutorial and use DalekJS to do something in the future!&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Ubuntu Command-Line Torrent Clients</title>
		<link href="https://www.lennu.net/2015/ubuntu-command-line-torrent-clients/"/>
		<updated>2015-01-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/ubuntu-command-line-torrent-clients/</id>
		<content type="html">&lt;p&gt;There are not so many good torrent clients made for command-line usage in Ubuntu 12.04. Here are small review of some of them.&lt;/p&gt;
&lt;h3 id=&quot;rtorrent&quot; tabindex=&quot;-1&quot;&gt;rtorrent &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/ubuntu-command-line-torrent-clients/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/nSNhv-luEp-1119.avif 1119w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/nSNhv-luEp-1119.webp 1119w&quot;&gt;&lt;img alt=&quot;rTorrent Screenshot&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/nSNhv-luEp-1119.png&quot; width=&quot;1119&quot; height=&quot;801&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;rtorrent is a very good and very configurable software. But because it is so configurable it can also be quite messy and overkill for normal user since it also uses alot of quick keys. You can only use it from the client and not as a service.&lt;/p&gt;
&lt;p&gt;You can install it using &lt;code&gt;sudo apt-get install rtorrent&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;More information: &lt;a href=&quot;http://libtorrent.rakshasa.no/&quot;&gt;libTorrent and rTorrent Project&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;deluge-console&quot; tabindex=&quot;-1&quot;&gt;Deluge-console &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/ubuntu-command-line-torrent-clients/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/fuBBaWTMQL-660.avif 660w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/fuBBaWTMQL-660.webp 660w&quot;&gt;&lt;img alt=&quot;Deluge Screenshot&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/fuBBaWTMQL-660.png&quot; width=&quot;660&quot; height=&quot;469&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Deluge is propably the easiest to use of all command-line torrent softwares. It has good manuals and easy command syntaxes which helps you to get going fast on the torrenting. It also supports working as a service but offers limited possibilites for controlling torrents then it is running as a service.&lt;/p&gt;
&lt;p&gt;You can install it using &lt;code&gt;sudo apt-get install deluge-console&lt;/code&gt; and service &lt;code&gt;sudo apt-get install deluged&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;More information: &lt;a href=&quot;http://deluge-torrent.org/&quot;&gt;Deluge&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;transmission&quot; tabindex=&quot;-1&quot;&gt;Transmission &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/ubuntu-command-line-torrent-clients/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/p2BD31lebK-1032.avif 1032w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/p2BD31lebK-1032.webp 1032w&quot;&gt;&lt;img alt=&quot;Transmission Screenshot&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/p2BD31lebK-1032.png&quot; width=&quot;1032&quot; height=&quot;452&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;For my needs Transmission is all I need. It offers simple usage syntax and has all the options I need. It’s not so great as Deluge when it comes to console UI. Transmission is the only command-line torrent client for Ubuntu which I have found that has very large option list for working as a service. For example you can set it to follow some directory where you just drop .torrent-files and it automaticly loads them from there. My choice is Transmission.&lt;/p&gt;
&lt;p&gt;You can install it using &lt;code&gt;sudo apt-get install transmission&lt;/code&gt; and service &lt;code&gt;sudo apt-get install transmission-daemon&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;More information: &lt;a href=&quot;http://www.transmissionbt.com/&quot;&gt;Transmission&lt;/a&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Swifty on Mobile with PhoneGap</title>
		<link href="https://www.lennu.net/2015/swifty-on-mobile-with-phonegap/"/>
		<updated>2015-01-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/swifty-on-mobile-with-phonegap/</id>
		<content type="html">&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/YXz_09a6Iy-128.avif 128w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/YXz_09a6Iy-128.webp 128w&quot;&gt;&lt;img alt=&quot;Swifty on Mobile&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/YXz_09a6Iy-128.jpeg&quot; width=&quot;128&quot; height=&quot;128&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;I have just published my first PhoneGap app at the Google Play!&lt;/p&gt;
&lt;p&gt;The app is made for YouTube personality &lt;a href=&quot;https://www.youtube.com/johnsju&quot;&gt;Swifty&lt;/a&gt; and it basically shows you the latest videos from his YouTube channels.&lt;/p&gt;
&lt;p&gt;I made it using PhoneGap, HTML5, Javascript and YouTube API.&lt;/p&gt;
&lt;h3 id=&quot;technology&quot; tabindex=&quot;-1&quot;&gt;Technology &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/swifty-on-mobile-with-phonegap/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I followed basic PhoneGap &lt;a href=&quot;http://docs.phonegap.com/en/2.0.0/guide_getting-started_index.md.html&quot;&gt;Getting Started Guides&lt;/a&gt; to deploy my PhoneGap and I made a nice HTML5 webpage getting Swiftys videos with the YouTube API.&lt;/p&gt;
&lt;p&gt;There is a very good example on &lt;a href=&quot;https://developers.google.com/youtube/2.0/developers_guide_json&quot;&gt;Google Developer’s Guide&lt;/a&gt; on the topic how to use the API.&lt;/p&gt;
&lt;p&gt;So I used YouTube API to gather the videos with Javascript to PhoneGap and repeated this with four channels of his.&lt;/p&gt;
&lt;p&gt;Example of one of the queries&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script
  type=&amp;quot;text/javascript&amp;quot;
  src=&amp;quot;http://gdata.youtube.com/feeds/users/swiftyirl/uploads?alt=json-in-script&amp;amp;callback=showMyVideos&amp;amp;max-results&amp;quot;
&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;YouTube API passed me all the information you could ever want of a video and that way I managed to do some nice links to the actual videos on the YouTube service.&lt;/p&gt;
&lt;p&gt;So you actually can do something with PhoneGap!&lt;/p&gt;
&lt;h3 id=&quot;app&quot; tabindex=&quot;-1&quot;&gt;App &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/swifty-on-mobile-with-phonegap/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can install the app from the &lt;a href=&quot;https://play.google.com/store/apps/details?id=lennu.swifty&quot;&gt;Google Play&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I hope you enjoy it and let me know if there’s something missing from the app 🙂&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Richard Stallman Visited Our School</title>
		<link href="https://www.lennu.net/2015/richard-stallman-visited-our-school/"/>
		<updated>2015-01-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/richard-stallman-visited-our-school/</id>
		<content type="html">&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/aejEoWtLrR-207.avif 207w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/aejEoWtLrR-207.webp 207w&quot;&gt;&lt;img alt=&quot;Richard Stallman&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/aejEoWtLrR-207.jpeg&quot; width=&quot;207&quot; height=&quot;150&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Yesterday famous Free Software movement launcher Richard Stallman visited our school HAAGA-HELIA University of Applied Sciences and gave two speeches about Trends in Programming.&lt;/p&gt;
&lt;p&gt;Stallman started the development of GNU operating system in 1984 which lead to the release of most used operating system on server side technology nowadays most often referred as Linux. Despite the fact that mr. Stallman in his speech made sure everybody now knows who really did all the hard work and why the operating system should be known as GNU/Linux or GNU+Linux.&lt;/p&gt;
&lt;h3 id=&quot;speech-number-one&quot; tabindex=&quot;-1&quot;&gt;Speech number one &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/richard-stallman-visited-our-school/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The first speech was more about the history of GNU operating system and why every human soul should respect the original values of the project. The speech started explaining what Free Software movement is and how it is used. It was very good knowledge and I think many in the audience agreed with the theories and gave some support for them.&lt;/p&gt;
&lt;p&gt;He also explained with examples why free software should be all around us. For example if I heard corrent Richard Stallman does not have a portable telephone because that machine can be traced and is not open. When the speech went on, it came more and more clear that Richard had been offended in alot of ways by alot of people breaking the original idea behind GNU operating system. I think in the speech he said some bad things first about Microsoft, Apple, Google, Amazon and after all this he started the usual rant against Linus Torvalds who is the number one devil ruining GNU.&lt;/p&gt;
&lt;p&gt;At the end of his speech he wore a cloak and a hat and blessed the audience with the style of church Emacs. That was kinda funny and everybody laughed alot so it ended well!&lt;/p&gt;
&lt;h3 id=&quot;speech-number-two&quot; tabindex=&quot;-1&quot;&gt;Speech number two &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/richard-stallman-visited-our-school/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;On the second speech Richard Stallman talked a little bit the same of GNU and trash talk about certain big companies.&lt;/p&gt;
&lt;p&gt;But he also made some comments about programming. He talked about some really good tricks in debugging and how you should use break points to narrow down the error in the software. He also gave some good tips if you’d like to join the free software movement and help it’s cause by doing some actual coding.&lt;/p&gt;
&lt;p&gt;On his second speech he gave alot of time for questions from the audience and one man made a huge mistake by trying to overtalk him in free software arguments. You should know better.&lt;/p&gt;
&lt;h3 id=&quot;summary&quot; tabindex=&quot;-1&quot;&gt;Summary &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/richard-stallman-visited-our-school/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;His speeches had some truly amazing points about free software and how world should be. But I think they are alot drawn away from reality. But after all it is a movement which tries to get things better in a long run which he reminded us that real software development has existed only 20-30 years.&lt;/p&gt;
&lt;p&gt;I personally didn’t like his trash talk about big companies and mr. Torvalds but maybe someone has to say these things out loud.&lt;/p&gt;
&lt;p&gt;He is a great public speaker and has very important things to say but maybe some things could be said in another way. But anyway, he gave two great speeches about his work in the development of GNU/Linux and you should respect atleat some of his views if you use something which have risen from his GNU operating system project. Thanks mr. Stallman!&lt;/p&gt;
&lt;p&gt;Btw. I also gave a speech on the event after Richard Stallman but I guess that is not so interesting. (smiley)&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Puppet Templates and Parameterized Classes and Defined Types</title>
		<link href="https://www.lennu.net/2015/puppet-templates-and-paremeterized-classes-and-defined-types/"/>
		<updated>2015-01-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/puppet-templates-and-paremeterized-classes-and-defined-types/</id>
		<content type="html">&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/2Ubq826ViN-300.avif 300w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/2Ubq826ViN-300.webp 300w&quot;&gt;&lt;img alt=&quot;Puppet Logo&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/2Ubq826ViN-300.png&quot; width=&quot;300&quot; height=&quot;269&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;This post continues our Puppet example series. On this post I will show you example for Templates, Parameterized Classes and Defined Types. All examples were made on Ubuntu 12.04 and you can find all the rest of the example articles from the archive section of this website.&lt;/p&gt;
&lt;h3 id=&quot;templates&quot; tabindex=&quot;-1&quot;&gt;Templates &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-templates-and-paremeterized-classes-and-defined-types/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Template are way to make different choices on different Puppet clients. For example not all of your clients operating systems are always the same so there might be some differences on them. And especially on the hardware site where most of the computers usually differ somehow from each other.&lt;/p&gt;
&lt;p&gt;Here is a simple example for getting the operating system out from your client. I’ll make a module templatetesti and define there a class which will make file which contains our template. The template itself contains some ruby code and is the next code section after the class.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class templatetesti {
        file {&#39;/tmp/templatetesti&#39;:
                ensure=&amp;gt;file,
                content=&amp;gt;template(&#39;templatetesti/templatetesti.erb&#39;),
        }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;%= @operatingsystem %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;parameterized-classes&quot; tabindex=&quot;-1&quot;&gt;Parameterized Classes &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-templates-and-paremeterized-classes-and-defined-types/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;These classes are like any other programming language classes. You can give them parameters to get some specific result. Remember that you can’t use include with these classes. The right way is just to &lt;code&gt;puppet apply testclass.pp&lt;/code&gt;. First create a module and then the parameter class.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class testpara ($value1) {
        notify {&amp;quot;${value1}&amp;quot;:}
        package {&amp;quot;${value1}&amp;quot;:
                provider=&amp;gt;apt,
                ensure=&amp;gt;installed,
        }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;class {&#39;testpara&#39;:
        value1=&amp;gt;&#39;apache2&#39;,
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;defined-types&quot; tabindex=&quot;-1&quot;&gt;Defined Types &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-templates-and-paremeterized-classes-and-defined-types/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;With defined types you can give definitions to certain resources. This is a straight copy from Puppets documentation.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;define planfile ($user = $title, $content) {
	file {&amp;quot;/home/${user}/.plan&amp;quot;:
		ensure  =&amp;gt; file,
		content =&amp;gt; $content,
		mode    =&amp;gt; 0644,
		owner   =&amp;gt; $user,
		require =&amp;gt; User[$user],
		}
	}
 
user {&#39;nick&#39;:
	ensure     =&amp;gt; present,
	managehome =&amp;gt; true,
	uid        =&amp;gt; 517,
}
planfile {&#39;nick&#39;:
	content =&amp;gt; &amp;quot;Working on new Learning Puppet chapters. Tomorrow: upgrading the LP virtual machine.&amp;quot;,
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;change-wlan-password&quot; tabindex=&quot;-1&quot;&gt;Change WLAN Password &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-templates-and-paremeterized-classes-and-defined-types/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As bonus today I made nice module to change the password of your wlan if you choose to change it. You need to have your wlan config file in your module files section.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class changewlanpassword {
        file { &amp;quot;/etc/NetworkManager/system-connections/lennu.net&amp;quot;:
                source =&amp;gt; &#39;puppet:///modules/changewlanpassword/lennu.net&#39;,
                owner =&amp;gt; root,
        }
 
        service { &#39;network-manager&#39;:
                ensure =&amp;gt; running,
                subscribe =&amp;gt; File[&#39;/etc/NetworkManager/system-connections/lennu.net&#39;],
        }
}
&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Puppet Resource Ordering Examples</title>
		<link href="https://www.lennu.net/2015/puppet-resource-ordering-examples/"/>
		<updated>2015-01-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/puppet-resource-ordering-examples/</id>
		<content type="html">&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/2Ubq826ViN-300.avif 300w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/2Ubq826ViN-300.webp 300w&quot;&gt;&lt;img alt=&quot;Puppet Logo&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/2Ubq826ViN-300.png&quot; width=&quot;300&quot; height=&quot;269&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Today on Ubuntu 12.04 we will be looking into Puppet’s Resource Ordering! As you may know Puppet runs files in such a random way you can’t control it by writing the code in order. You have to use Puppet’s own resource ordering Metaparameters.&lt;/p&gt;
&lt;h3 id=&quot;metaparameters&quot; tabindex=&quot;-1&quot;&gt;Metaparameters &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-resource-ordering-examples/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Puppet has four different metaparameters you can use to order the running case. &lt;code&gt;before&lt;/code&gt;, &lt;code&gt;require&lt;/code&gt; and &lt;code&gt;subscribe&lt;/code&gt;. Here are the examples for all of them.&lt;/p&gt;
&lt;h4 id=&quot;before&quot; tabindex=&quot;-1&quot;&gt;before &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-resource-ordering-examples/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;before lists resources that depends on it, for example right now Notify required Package to be ran.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;package { &#39;apache2&#39;:
        provider=&amp;gt;&#39;apt&#39;,
        ensure=&amp;gt;&#39;installed&#39;,
	before=&amp;gt;Notify[&#39;Apache2 is installed.&#39;],
}
 
notify { &#39;Apache2 is installed.&#39;:
}
 
service { &#39;apache2&#39;:
        ensure=&amp;gt;&#39;running&#39;
}
 
notify { &#39;Apache2 is running.&#39;:
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;require&quot; tabindex=&quot;-1&quot;&gt;require &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-resource-ordering-examples/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;require is as it says a requirement, now we can put Package under Notify since we need Package to be ran in order to send the notify.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;package { &#39;apache2&#39;:
        provider=&amp;gt;&#39;apt&#39;,
        ensure=&amp;gt;&#39;installed&#39;,
}
 
notify { &#39;Apache2 is installed.&#39;:
	require=&amp;gt;Package[&#39;apache2&#39;]
}
 
service { &#39;apache2&#39;:
        ensure=&amp;gt;&#39;running&#39;
}
 
notify { &#39;Apache2 is running.&#39;:
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;subscribe&quot; tabindex=&quot;-1&quot;&gt;subscribe &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-resource-ordering-examples/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;subscribe make a resource subscribe to another resource. This means that everytime Puppet makes some actual changes to the subscribed resource it will trigger also the subscriber to do changes. On this example every time /tmp/apache -file contents change and we run this file there will be a trigger to refresh apache2 service.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;file {&#39;/tmp/apache&#39;:
        ensure=&amp;gt;file,
        content=&amp;gt;&#39;Subscribe testing!&#39;
}
 
package { &#39;apache2&#39;:
        provider=&amp;gt;&#39;apt&#39;,
        ensure=&amp;gt;&#39;installed&#39;,
}
 
notify { &#39;Apache2 is installed.&#39;:
}
 
service { &#39;apache2&#39;:
        ensure=&amp;gt;&#39;running&#39;,
        subscribe=&amp;gt;File[&#39;/tmp/apache&#39;],
}
 
notify { &#39;Apache2 is running.&#39;:
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;chaining&quot; tabindex=&quot;-1&quot;&gt;Chaining &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-resource-ordering-examples/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Chaining is setting resources in the ordering you’d like them to be. &lt;code&gt;-&amp;gt; or &amp;lt;-&lt;/code&gt; goes for ordering and &lt;code&gt;~&amp;gt; or &amp;lt;~&lt;/code&gt; goes for subscribing. You should always think the arrows like time. Right going arrow means the target is synced after the shooter. In this example I have made Notifications to be ran on the wrong time just to show the effectiveness.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;package { &#39;apache2&#39;:
        provider=&amp;gt;&#39;apt&#39;,
        ensure=&amp;gt;&#39;installed&#39;,
}
 
notify { &#39;Apache2 is installed.&#39;:
}
 
service { &#39;apache2&#39;:
        ensure=&amp;gt;&#39;running&#39;,
}
 
notify { &#39;Apache2 is running.&#39;:
}
 
Package[&#39;apache2&#39;] -&amp;gt; Notify[&#39;Apache2 is running.&#39;] -&amp;gt; Service[&#39;apache2&#39;] -&amp;gt; Notify[&#39;Apache2 is installed.&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That’s it for metaparameters, on the next one there will be modules!&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Puppet Resource Examples</title>
		<link href="https://www.lennu.net/2015/puppet-resource-examples/"/>
		<updated>2015-01-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/puppet-resource-examples/</id>
		<content type="html">&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/2Ubq826ViN-300.avif 300w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/2Ubq826ViN-300.webp 300w&quot;&gt;&lt;img alt=&quot;Puppet Logo&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/2Ubq826ViN-300.png&quot; width=&quot;300&quot; height=&quot;269&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;This post starts Puppet series on Ubuntu 12.04 where we will look into &lt;a href=&quot;http://puppetlabs.com/&quot;&gt;Puppet&lt;/a&gt; in detail.&lt;/p&gt;
&lt;p&gt;The first post will be about resources in Puppet and how they work. I will give you examples of every core resource type there is by default on Puppet.&lt;/p&gt;
&lt;p&gt;This post will include all the core resource types found on Puppet. Notify, file, package, service, exec, cron, user and group.&lt;/p&gt;
&lt;h2 id=&quot;usage&quot; tabindex=&quot;-1&quot;&gt;Usage &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-resource-examples/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can use these by writing a file with the resource text and using &lt;code&gt;puppet apply FILENAME&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;notify&quot; tabindex=&quot;-1&quot;&gt;Notify &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-resource-examples/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Notify sends a message to the clients and will be saved to Puppet logs. Example sends “Notification to the clients”-text to the logs.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;notify { &#39;Notification to the clients&#39;:
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;file&quot; tabindex=&quot;-1&quot;&gt;File &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-resource-examples/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;With File resource you can control everything about files. This example writes some data into /tmp/helloPuppet -file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;file { &#39;/tmp/helloPuppet&#39;:
        content =&amp;gt; &#39;See you at Lennu.net!&#92;n&#39;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;package&quot; tabindex=&quot;-1&quot;&gt;Package &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-resource-examples/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Package resource gives you management over installable packages. On the example I’m installing package via apt-get. Remember you have to use &lt;code&gt;sudo&lt;/code&gt; to do installation of packages.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;package { &#39;nethack-spoilers&#39;:
        provider=&amp;gt;&#39;apt&#39;,
        ensure=&amp;gt;&#39;installed&#39;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;service&quot; tabindex=&quot;-1&quot;&gt;Service &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-resource-examples/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Service resource manages services running on the client for example Apache2. The following example checks that Apache2 is running, if it’s not it will be started.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service { &#39;apache2&#39;:
        ensure=&amp;gt;&#39;running&#39;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;exec&quot; tabindex=&quot;-1&quot;&gt;Exec &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-resource-examples/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Exec resource as it’s name says executes something. For example the following will &lt;code&gt;apt-get update&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;exec { &#39;apt-get update&#39;:
        path=&amp;gt;&#39;/usr/bin/&#39;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;cron&quot; tabindex=&quot;-1&quot;&gt;Cron &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-resource-examples/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Cron creates and controls cron jobs in the system. For example we can run &lt;code&gt;logrotate&lt;/code&gt; every day at 05:00.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cron { logrotate:
        command=&amp;gt;&#39;/usr/sbin/logrotate&#39;,
        user=&amp;gt;lennu,
        hour=&amp;gt;5,
        minute=&amp;gt;0
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;user&quot; tabindex=&quot;-1&quot;&gt;User &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-resource-examples/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;With User resource we can control users and mostly system users. On the example we set users full name as comment to user lennu.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;user { &#39;lennu&#39;:
	comment=&amp;gt;&amp;quot;Juha-Matti Laaksonen&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;group&quot; tabindex=&quot;-1&quot;&gt;Group &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-resource-examples/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Group resource is made for managing groups and mostly creating them. Example ensures the lennu.net -group exists. If it doesn’t, it will be created.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;group { &#39;lennu.net&#39;:
	ensure=&amp;gt;&#39;present&#39;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;documentation&quot; tabindex=&quot;-1&quot;&gt;Documentation &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-resource-examples/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;That’s for core resource types, you can find all the details and rest of the attributes used by Puppet from their &lt;a href=&quot;http://docs.puppetlabs.com/&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I hope you found this page useful! If you have any questions about the examples, please post a comment and we’ll see if I can help you out.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Puppet Module and Class Examples</title>
		<link href="https://www.lennu.net/2015/puppet-module-and-class-examples/"/>
		<updated>2015-01-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/puppet-module-and-class-examples/</id>
		<content type="html">&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/2Ubq826ViN-300.avif 300w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/2Ubq826ViN-300.webp 300w&quot;&gt;&lt;img alt=&quot;Puppet Logo&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/2Ubq826ViN-300.png&quot; width=&quot;300&quot; height=&quot;269&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;On this post I will present couple of examples about Puppet’s Class and Module sections. This is all tested on Ubuntu 12.04 and continues my Puppet series where I am going through all the necessary and important aspects of Linux’s Puppet software.&lt;/p&gt;
&lt;h3 id=&quot;class&quot; tabindex=&quot;-1&quot;&gt;Class &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-module-and-class-examples/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I will continue using the same example of Apache2 I have used during my last posts about Puppet.&lt;/p&gt;
&lt;p&gt;In order to make classes work we need to apply them a little bit differently than normal manifests. With &lt;code&gt;puppet apply --verbose apacheclassname.pp&lt;/code&gt; you can use the class written below.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class apacheclassname {
	package { &#39;apache2&#39;:
		provider=&amp;gt;&#39;apt&#39;,
		ensure=&amp;gt;&#39;installed&#39;
	}
 
	notify { &#39;Apache2 is installed.&#39;:
	}
 
	service { &#39;apache2&#39;:
		ensure=&amp;gt;&#39;running&#39;
	}
 
	notify { &#39;Apache2 is running.&#39;:
	}
}
#Remember to declare the class below
class {&#39;apacheclassname&#39;: }
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;module&quot; tabindex=&quot;-1&quot;&gt;Module &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-module-and-class-examples/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Modules are used by Puppet to autoload manifests, so you can use classes stored in a module from anywhere. Now we need to take our just created class into a module. Modules file and folder structure is at its simplest like this: &lt;code&gt;modules/modulename/manifests&lt;/code&gt; in this folder you have init.pp which will be ran everytime you do something with the module.&lt;/p&gt;
&lt;p&gt;Place the code below to this init.pp file in modules/apache/manifests/ and run it with &lt;code&gt;puppet apply --modulepath PATHtoMODULeDIRECTORY -e &amp;quot;include apacheclassname&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class apacheclassname {
        package { &#39;apache2&#39;:
                provider=&amp;gt;&#39;apt&#39;,
                ensure=&amp;gt;&#39;installed&#39;
        }
 
        notify { &#39;Apache2 is installed.&#39;:
        }
 
        service { &#39;apache2&#39;:
                ensure=&amp;gt;&#39;running&#39;
        }
 
        notify { &#39;Apache2 is running.&#39;:
        }
}
#Remember NOT to declare the class in here
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here is another module about file permissions which changes the default www-directory to be used www-data user. This should go to &lt;code&gt;modules/wwwdir/init.pp&lt;/code&gt; and you can run it with &lt;code&gt;puppet apply --modulepath PATHtoMODULeDIRECTORY -e &amp;quot;include wwwdir&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class wwwdir {
        file{ &#39;/var/www&#39;:
		ensure=&amp;gt;&#39;directory&#39;,
		owner=&amp;gt;&#39;www-data&#39;,
		group=&amp;gt;&#39;www-data&#39;,
		mode=&amp;gt;&#39;664&#39;,
	}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There was some example classes and modules. I hope they helped you out!&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Puppet Manifest Examples</title>
		<link href="https://www.lennu.net/2015/puppet-manifest-examples/"/>
		<updated>2015-01-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/puppet-manifest-examples/</id>
		<content type="html">&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/2Ubq826ViN-300.avif 300w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/2Ubq826ViN-300.webp 300w&quot;&gt;&lt;img alt=&quot;Puppet Logo&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/2Ubq826ViN-300.png&quot; width=&quot;300&quot; height=&quot;269&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;This post continues Puppet series on Ubuntu 12.04 where we will look into &lt;a href=&quot;http://puppetlabs.com/&quot;&gt;Puppet&lt;/a&gt; in detail.&lt;/p&gt;
&lt;p&gt;This post will be about manifests in Puppet and how they work.&lt;/p&gt;
&lt;p&gt;Manifests are Puppet specific programs which is mostly based on resource declarations but there can also be made some statements and functions which will be covered on another post since this will be focused on resource declarations.&lt;/p&gt;
&lt;h2 id=&quot;usage&quot; tabindex=&quot;-1&quot;&gt;Usage &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-manifest-examples/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Manifests are used from written files which have &lt;code&gt;.pp&lt;/code&gt; file extension.&lt;/p&gt;
&lt;p&gt;Like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;puppet apply testManifest.pp
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;example-manifest&quot; tabindex=&quot;-1&quot;&gt;Example Manifest &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-manifest-examples/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This example will install Apache2 and check that it is started on the client. Notification are fired on each step to the clients Puppet log.&lt;/p&gt;
&lt;p&gt;You need to use &lt;code&gt;sudo&lt;/code&gt; to run the command, since the manifest is installing packages and activating services which need system user rights.&lt;/p&gt;
&lt;p&gt;As I stated before most of this is resource declaration and alot of these examples of the core types can be found from my previous &lt;a href=&quot;https://www.lennu.net/2012/11/01/puppet-resource-examples/&quot;&gt;post&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;package { &#39;apache2&#39;:
        provider=&amp;gt;&#39;apt&#39;,
        ensure=&amp;gt;&#39;installed&#39;
}
 
notify { &#39;Apache2 is installed.&#39;:
}
 
service { &#39;apache2&#39;:
        ensure=&amp;gt;&#39;running&#39;
}
 
notify { &#39;Apache2 is running.&#39;:
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This was the basic manifest example. If you want to learn more check out the &lt;a href=&quot;http://docs.puppetlabs.com/&quot;&gt;documentation&lt;/a&gt; at the official Puppet website.&lt;/p&gt;
&lt;p&gt;Check out also my other &lt;a href=&quot;https://www.lennu.net/categories/puppet/&quot;&gt;posts&lt;/a&gt; considering Puppet.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Puppet Forge and Cookbook</title>
		<link href="https://www.lennu.net/2015/puppet-forge-and-cookbook/"/>
		<updated>2015-01-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/puppet-forge-and-cookbook/</id>
		<content type="html">&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/2Ubq826ViN-300.avif 300w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/2Ubq826ViN-300.webp 300w&quot;&gt;&lt;img alt=&quot;Puppet Logo&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/2Ubq826ViN-300.png&quot; width=&quot;300&quot; height=&quot;269&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Puppet continues! On todays post I will review one Puppet Forge module and see how many similar are there. On this post I will also show some examples based on the official Puppet Cookbook.&lt;/p&gt;
&lt;h3 id=&quot;puppet-forge-camptocamp-apt&quot; tabindex=&quot;-1&quot;&gt;Puppet Forge camptocamp/apt &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-forge-and-cookbook/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://forge.puppetlabs.com/&quot;&gt;Puppet Forge&lt;/a&gt; is a website where you can find modules already made by some contributors. I chose &lt;a href=&quot;http://forge.puppetlabs.com/camptocamp/apt&quot;&gt;camptocamp/apt&lt;/a&gt; as my example module. I tested this module on my Ubuntu 12.04.&lt;/p&gt;
&lt;h4 id=&quot;what-it-does&quot; tabindex=&quot;-1&quot;&gt;What it does? &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-forge-and-cookbook/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;1. First of all it requires you to have apt in your system.&lt;br&gt;
2. It updates your repositories.&lt;br&gt;
3. It sets some config to apt, which includes periodic Update-Package-Lists=1, Download-Upgradeable-Package=0, AutoCleanInterval=1.&lt;br&gt;
4. The most important: It sets a directory watch from its files to control /etc/apt/sources.list.d directory.&lt;/p&gt;
&lt;p&gt;So with this module you can control apt sources with your Puppet on all the clients.&lt;/p&gt;
&lt;h4 id=&quot;other-similar-modules&quot; tabindex=&quot;-1&quot;&gt;Other similar modules? &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-forge-and-cookbook/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;There are Puppet Labs own &lt;a href=&quot;http://forge.puppetlabs.com/puppetlabs/apt&quot;&gt;apt module&lt;/a&gt; which is very wide and has all the most used apt modules available. One very similar to this is &lt;a href=&quot;http://forge.puppetlabs.com/DavidSchmitt/apt&quot;&gt;David Schmitt’s apt module&lt;/a&gt; which also controls sources list but also apt’s caches.&lt;/p&gt;
&lt;h3 id=&quot;puppet-cookbook&quot; tabindex=&quot;-1&quot;&gt;Puppet Cookbook &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-forge-and-cookbook/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&quot;override-a-facter-fact&quot; tabindex=&quot;-1&quot;&gt;Override a Facter fact &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-forge-and-cookbook/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;I found interesting example of how to override one Facter’s facts and here is an example for it. The example shows a way to change uptime for the instance.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ FACTER_uptime=&#39;5:00 hours&#39; puppet -e &#39;notify {&amp;quot;Our system have ran for: $uptime.&amp;quot;: }&#39;
notice: Our system have ran for: 0:53 hours hours.
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;$ FACTER_uptime=&#39;5:00 hours&#39; puppet -e &#39;notify {&amp;quot;Our system have ran for: $uptime.&amp;quot;: }&#39;
notice: Our system have ran for: 5:00 hours.
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;managing-symlinks&quot; tabindex=&quot;-1&quot;&gt;Managing Symlinks &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/puppet-forge-and-cookbook/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Here is an example module for managing symlink for motd. The module makes sure you have the right setup for your motd symlink. You can run the module with &lt;code&gt;sudo puppet apply --modulepath puppet/modules/ -e &amp;quot;include motd&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.
└── manifests
    ├── init.pp
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;class motd {
	file { &#39;/etc/motd&#39;:
		ensure =&amp;gt; &#39;link&#39;,
		target =&amp;gt; &#39;/var/run/motd&#39;,
		owner =&amp;gt; &#39;root&#39;,
		group =&amp;gt; &#39;root&#39;,
	}
}
&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Over 37000 student files crawled from a finnish university website</title>
		<link href="https://www.lennu.net/2015/over-37000-student-files-crawled-from-a-finnish-university-website/"/>
		<updated>2015-01-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/over-37000-student-files-crawled-from-a-finnish-university-website/</id>
		<content type="html">&lt;p&gt;My friend made a script that crawls websites and for testing he chose our university: &lt;a href=&quot;http://www.haaga-helia.fi&quot;&gt;Haaga-Helia University of Applied Sciences&lt;/a&gt;. Believe it or not, he actually got over 37000 files in publicly available folders from our universitys’ file server myy.haaga-helia.fi. The records are available at &lt;a href=&quot;http://tradenomi.noob.fi&quot;&gt;tradenomi.noob.fi&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;so-what-kind-of-files-was-found&quot; tabindex=&quot;-1&quot;&gt;So what kind of files was found? &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/over-37000-student-files-crawled-from-a-finnish-university-website/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Well most of the files are documents, powerpoints and excels containing student work. Nothing really important I guess (I haven’t browsed all of the 37000 files).&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/Kn-Yunwwqw-240.avif 240w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/Kn-Yunwwqw-240.webp 240w&quot;&gt;&lt;img alt=&quot;Like a Sir&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/Kn-Yunwwqw-240.jpeg&quot; width=&quot;240&quot; height=&quot;186&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;How ever what I found the most interesting were the CVs or curriculum vitaes also known as list of achievements of a person. With search &lt;code&gt;CV&lt;/code&gt; you can find three pages of different CVs.&lt;/p&gt;
&lt;h3 id=&quot;code-files&quot; tabindex=&quot;-1&quot;&gt;Code files &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/over-37000-student-files-crawled-from-a-finnish-university-website/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There are very much files of code. If you search for &lt;code&gt;java&lt;/code&gt; you will get 4000 files with java code, so it is kind of database of code examples. Of course alot of the files are in finnish.&lt;/p&gt;
&lt;h2 id=&quot;security&quot; tabindex=&quot;-1&quot;&gt;Security &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/over-37000-student-files-crawled-from-a-finnish-university-website/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Since there are CVs and alot of documents containing personal information, this raises question: is this a security issue? And whos’ is it?&lt;/p&gt;
&lt;p&gt;University offers a place for saving documents in public Internet, known as public_html within students personal data folder. When you save a file in there, the file will be in the Internet. I guess university should make some clarifications for some students that their files truly are publicly available when they save a file in their public folder.&lt;/p&gt;
&lt;h3 id=&quot;experiment&quot; tabindex=&quot;-1&quot;&gt;Experiment &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/over-37000-student-files-crawled-from-a-finnish-university-website/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;After being online for quite some time, my friend released some statistics &lt;a href=&quot;http://tradenomi.noob.fi/tophaut.php&quot;&gt;tradenomi.noob.fi/tophaut.php&lt;/a&gt;. These are the top 20 searches done lately. I’ll translate some of them here: cv, programming, mathematics, pictures, businessprocesses and of course porn and sex.&lt;/p&gt;
&lt;p&gt;So there have been some proper searches and I guess some good results too.&lt;/p&gt;
&lt;p&gt;The site is elegantly build and serves its’ purpose nicely. It caused a lot of discussion in our university and as far as I know it has already been reported to the ICT-security team of the university. The best thing about this site is of course the fact that you can go and search for a file that contains your next deadline homework.&lt;/p&gt;
&lt;p&gt;Go check it out at &lt;a href=&quot;http://tradenomi.noob.fi&quot;&gt;tradenomi.noob.fi&lt;/a&gt;.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Octopress installation in Ubuntu 12.04 with rsync</title>
		<link href="https://www.lennu.net/2015/octopress-installation/"/>
		<updated>2015-01-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/octopress-installation/</id>
		<content type="html">&lt;p&gt;Octopress is a blogging framework which generates your enire blog in static files. Octopress has integrated Twitter, Google Analytics, Google Plus, Facebook and some other webservices. There are also good plugins for adding images, code, videos and other content into your blog posts. The framework is made for hackers and people who know something about Linux and shell.&lt;/p&gt;
&lt;p&gt;Requirements for this tutorial&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux knowledge&lt;/li&gt;
&lt;li&gt;Preconfigured webserver using Apache and home directories&lt;/li&gt;
&lt;li&gt;Ubuntu 12.04 installation on your PC&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This tutorial will be about the installation of blogging framework &lt;a href=&quot;http://www.octopress.org&quot;&gt;Octopress&lt;/a&gt;. As I have tested the installation process is not so simple for beginners as it is described in the official website.&lt;/p&gt;
&lt;p&gt;There are three official ways to deploy Octopress&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Github Pages&lt;/li&gt;
&lt;li&gt;Heroku&lt;/li&gt;
&lt;li&gt;Rsync&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this tutorial I will be focusing to basic installation of Octopress and the Rsync deployement.&lt;/p&gt;
&lt;p&gt;Here are the installation steps:&lt;/p&gt;
&lt;h2 id=&quot;octopress-installation&quot; tabindex=&quot;-1&quot;&gt;Octopress installation &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/octopress-installation/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;ubuntu-12-04&quot; tabindex=&quot;-1&quot;&gt;Ubuntu 12.04 &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/octopress-installation/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Fresh Ubuntu installation will need the following packages to be installed.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt&#92;-get install bash curl git&#92;-core &#92;-y
sudo apt&#92;-get install build&#92;-essential bison openssl libreadline6 libreadline6&#92;-dev zlib1g zlib1g&#92;-dev libssl&#92;-dev libyaml&#92;-dev libsqlite3&#92;-0 libsqlite3&#92;-dev sqlite3 libxml2&#92;-dev libxslt&#92;-dev autoconf libc6&#92;-dev ncurses&#92;-dev automake &#92;-y
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;rvm&quot; tabindex=&quot;-1&quot;&gt;RVM &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/octopress-installation/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We will be using RVM for controlling installation of Ruby and dependencies required by Octopress. Install RVM to your user profile with next command.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl &#92;-L https://get.rvm.io | bash -s stable --ruby
source .bashrc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As we now have enabled Ruby environment on our system, we will need to install some packages to prepare it for Octopress.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rvm install 1.9.3
rvm use 1.9.3 &#92;--default
rvm reload
rvm rubygems latest
gem install bundler
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;cloning-octopress-from-github&quot; tabindex=&quot;-1&quot;&gt;Cloning Octopress from Github &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/octopress-installation/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now it’s time to clone Octopress to our home directory.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone git://github.com/imathis/octopress.git octopress
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After the clone is complete move to Octopress folder&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd octopress/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You will get a notification from RVM asking do you trust new .rvmc file. Answer yes.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===
&#92;= NOTICE                                                                     &#92;=
&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===
&#92;= RVM has encountered a new or modified .rvmrc file in the current directory &#92;=
&#92;= This is a shell script and therefore may contain any shell commands.       &#92;=
&#92;=                                                                            &#92;=
&#92;= Examine the contents of this file carefully to be sure the contents are    &#92;=
&#92;= safe before trusting it! ( Choose v&#92;[iew&#92;] below to view the contents )      &#92;=
&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===&#92;===
Do you wish to trust this .rvmrc file? (/home/lennu/octopress/.rvmrc)
y&#92;[es&#92;], n&#92;[o&#92;], v&#92;[iew&#92;], c&#92;[ancel&#92;]&#92;&amp;gt; yes
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;installation-of-octopress-rvm-packages&quot; tabindex=&quot;-1&quot;&gt;Installation of Octopress RVM Packages &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/octopress-installation/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Insert the following commands in Octopress folder to install it.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bundle install
bundle update
rake install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you get the following error:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rake aborted!
You have already activated rake 0.9.2.2, but your Gemfile requires rake 0.9.2. Using bundle exec may solve this.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Solution to this is to update bundle version.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bundle update
rake install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Congratulations! You have succesfully installed Octopress to your Ubuntu.&lt;/p&gt;
&lt;h2 id=&quot;rsync-deployement&quot; tabindex=&quot;-1&quot;&gt;Rsync deployement &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/octopress-installation/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In order to publish your Octopress blog into your own webserver, you have to send the public files to the server. In this tutorial I assume you have setup the normal user account web publishing configurations.&lt;/p&gt;
&lt;p&gt;Here are the steps how to use Rsync to publish your website:&lt;/p&gt;
&lt;h3 id=&quot;server-modifications&quot; tabindex=&quot;-1&quot;&gt;Server modifications &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/octopress-installation/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We will start by creating an account to the server.&lt;/p&gt;
&lt;p&gt;Login to your server and use &lt;code&gt;sudo adduser&lt;/code&gt; command to add the user.&lt;/p&gt;
&lt;p&gt;We also need to install rsync with the following command.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt&#92;-get install rsync
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After this you can logout from your server.&lt;/p&gt;
&lt;h3 id=&quot;setting-up-public-key-authorization-between-ubuntu-and-server&quot; tabindex=&quot;-1&quot;&gt;Setting up public key authorization between Ubuntu and Server &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/octopress-installation/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;First we create a public key with the following commands.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssh&#92;-keygen
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You will be asked where to save the key. Save the key to the default directory by pressing Enter.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Generating public/private rsa key pair.
Enter file in which to save the key (/home/lennu/.ssh/id&#92;_rsa):
Insert a passphrase for two times and the key will be created.
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Created directory &#39;/home/lennu/.ssh&#39;.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/lennu/.ssh/id&#92;_rsa.
Your public key has been saved in /home/lennu/.ssh/id&#92;_rsa.pub.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we need to send the public key to the server, specifically in your just created users’ home directory.&lt;br&gt;
We can use ssh to send the file to your server.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat .ssh/id&#92;_rsa.pub | ssh username@server &amp;quot;mkdir .ssh;cat &amp;gt;&amp;gt; .ssh/authorized&#92;_keys&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;configuring-rsync&quot; tabindex=&quot;-1&quot;&gt;Configuring rsync &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/octopress-installation/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Edit Rakefile in your octopress directory. Modify the following values.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssh&#92;_user       &#92;= &amp;quot;[&#92;[email protected&#92;]](/cdn-cgi/l/email-protection)&amp;quot;
document&#92;_root  &#92;= &amp;quot;~/public&#92;_html/&amp;quot;
rsync&#92;_delete   &#92;= true
deploy&#92;_default &#92;= &amp;quot;rsync&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;publishing-the-website&quot; tabindex=&quot;-1&quot;&gt;Publishing the website &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/octopress-installation/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If the configurations are set, you can run the following commands and publish the website. Enter your Ubuntu password on prompt.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rake generate &#92;# Generates the static website files
rake deploy &#92;# Uses rsync to send the files to the server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You should now get something like this at your public website.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/4DKd0svvHZ-640.avif 640w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/4DKd0svvHZ-640.webp 640w&quot;&gt;&lt;img alt=&quot;Default installation of Octopress&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/4DKd0svvHZ-640.jpeg&quot; width=&quot;640&quot; height=&quot;493&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h2 id=&quot;blogging&quot; tabindex=&quot;-1&quot;&gt;Blogging &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/octopress-installation/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now you are ready to start blogging with Octopress.&lt;/p&gt;
&lt;h3 id=&quot;configurations&quot; tabindex=&quot;-1&quot;&gt;Configurations &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/octopress-installation/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Most important configurations can be found from the &lt;code&gt;_config.yml&lt;/code&gt;. Just edit that and you can change all the default values like title and author to your own.&lt;/p&gt;
&lt;p&gt;After changes just type the following commands and the site will be published.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rake generate &#92;# Generates the static website files
rake deploy &#92;# Uses rsync to send the files to the server
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;posting-with-octopress&quot; tabindex=&quot;-1&quot;&gt;Posting with Octopress &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/octopress-installation/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Create a new blog post with the following command. You need to be in the octopress directory to do this.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rake new&#92;_post&#92;[&amp;quot;Name of your post&amp;quot;&#92;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then you may go and edit it in &lt;code&gt;source/_posts/&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;Again after you have written your post and want to publish it to the website, use these commands.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rake generate &#92;# Generates the static website files
rake deploy &#92;# Uses rsync to send the files to the server
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;preview-posts&quot; tabindex=&quot;-1&quot;&gt;Preview posts &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/octopress-installation/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;If you want to preview your posts before publishing, use only the &lt;code&gt;rake generate&lt;/code&gt; and see the changes yourself with the command &lt;code&gt;rake preview&lt;/code&gt; and head on to web browser and type in localhost:4000.&lt;/p&gt;
&lt;h2 id=&quot;documentation&quot; tabindex=&quot;-1&quot;&gt;Documentation &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/octopress-installation/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The official Octopress &lt;a href=&quot;http://www.octopress.org/docs/&quot;&gt;Documentation&lt;/a&gt; is a good place to find more information about posting and using different kind of plugins and code blocks in your blog.&lt;/p&gt;
&lt;p&gt;If you need more information about Octopress, be sure to check it out for answers!&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Lennu.net Changes</title>
		<link href="https://www.lennu.net/2015/lennu-dot-net-changes/"/>
		<updated>2015-01-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/lennu-dot-net-changes/</id>
		<content type="html">&lt;h2 id=&quot;haaga-helia-student-party-gallery-2010-2012&quot; tabindex=&quot;-1&quot;&gt;HAAGA-HELIA Student Party Gallery 2010-2012 &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/lennu-dot-net-changes/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/sD0LlwS-Th-179.avif 179w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/sD0LlwS-Th-179.webp 179w&quot;&gt;&lt;img alt=&quot;HAAGA-HELIA Student Party Gallery&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/sD0LlwS-Th-179.jpeg&quot; width=&quot;179&quot; height=&quot;134&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;I have hosted HAAGA-HELIA Student Party Gallery for two years now and it is time to move one. In these two years I have taken and published over 10 000 photos from various student events. My studies are ending in one year and I would like to see someone start a similar gallery and continue saving the memories from student parties in pictures.&lt;/p&gt;
&lt;p&gt;Last two galleries from Vappu (Mayday) are released in my Flickr-profile with the rest of the galleries. Flickr will also be the final resting place for the photos
I would like to thank Salla, everybody named Laura, Aku, Teemu, Samuli, Arttu, Raikku, Joonatan, Minna, Markus, Niklas, Juhani, Antti and Patrick for being the most photographed students.&lt;/p&gt;
&lt;p&gt;Thanks also to Hanski, Tapio and HELGA for publishing some of their photos in Lennu.net.&lt;/p&gt;
&lt;p&gt;Special thanks goes to Jevgeni Särki who photographed nearly 20 galleries.&lt;/p&gt;
&lt;h2 id=&quot;new-lennu-net&quot; tabindex=&quot;-1&quot;&gt;New Lennu.net &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/lennu-dot-net-changes/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I’m changing Lennu.net to programming and technology blog.&lt;/p&gt;
&lt;p&gt;I will write here news, tutorials, examples, experiences and something even out-of-the-category. I will be posting about cool subjects to keep the Blog interesting. For example my first post will be about Octopress, the blog engine Lennu.net is now running on.&lt;/p&gt;
&lt;p&gt;I hope you have enjoyed the pictures over these two years and that you will enjoy the new content.&lt;/p&gt;
&lt;p&gt;Follow this site on Facebook and Twitter, so you will know when the articles get published! Or just visit this site weekly!&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>JavaEE and Tomcat Basic Tutorial in Ubuntu 12.04</title>
		<link href="https://www.lennu.net/2015/javaee-and-tomcat-basic-tutorial-in-ubuntu-12-dot-04/"/>
		<updated>2015-01-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/javaee-and-tomcat-basic-tutorial-in-ubuntu-12-dot-04/</id>
		<content type="html">&lt;p&gt;If you are interested in developing JavaEE with Linux and don’t want to use any IDE, or you are just looking around how JavaEE and Tomcat works with Ubuntu 12.04, well here is a fast and simple tutorial for you. Our object is to create a weight index calculator!&lt;/p&gt;
&lt;h3 id=&quot;javaee-and-tomcat-environment&quot; tabindex=&quot;-1&quot;&gt;JavaEE and Tomcat Environment &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/javaee-and-tomcat-basic-tutorial-in-ubuntu-12-dot-04/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;First we will create the JavaEE development environment by installing JDK and Tomcat.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get update
sudo apt-get upgrade
sudo apt-get install openjdk-7-jdk
sudo apt-get install tomcat7
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next we will edit Tomcat configurations.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudoedit /etc/tomcat7/server.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add the following lines inside and edit your own USERNAME to the lines.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;Context docBase=&amp;quot;/home/USERNAME/jsp&amp;quot; path=&amp;quot;/jsp&amp;quot;&amp;gt;
&amp;lt;/Context&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;javaee-file-structure-in-tomcat&quot; tabindex=&quot;-1&quot;&gt;JavaEE File Structure in Tomcat &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/javaee-and-tomcat-basic-tutorial-in-ubuntu-12-dot-04/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Create the &lt;code&gt;jsp/&lt;/code&gt; folder into your home folder.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd
mkdir jsp
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Move inside the folder and create the basic file structure.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd jsp/
mkdir WEB-INF
mkdir WEB-INF/classes
mkdir META-INF
touch WEB-INF/web.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;minimal-web-xml&quot; tabindex=&quot;-1&quot;&gt;Minimal web.xml &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/javaee-and-tomcat-basic-tutorial-in-ubuntu-12-dot-04/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Move to WEB-INF folder and edit configuration file for our JavaEE web application.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd WEB-INF
nano web.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here is the minimal web.xml file you can have, except I have included one servlet in here which we are going to use later. Paste this into the opened file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;ISO-8859-1&amp;quot;?&amp;gt;
&amp;lt;web-app xmlns=&amp;quot;http://java.sun.com/xml/ns/j2ee&amp;quot;
     xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
     xsi:schemaLocation=&amp;quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&amp;quot;
     version=&amp;quot;2.5&amp;quot;&amp;gt;
	&amp;lt;servlet&amp;gt;
		&amp;lt;servlet-name&amp;gt;index&amp;lt;/servlet-name&amp;gt;
		&amp;lt;servlet-class&amp;gt;index.index&amp;lt;/servlet-class&amp;gt;
	&amp;lt;/servlet&amp;gt;
 
&amp;lt;/web-app&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;javaee-classes-in-tomcat&quot; tabindex=&quot;-1&quot;&gt;JavaEE classes in Tomcat &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/javaee-and-tomcat-basic-tutorial-in-ubuntu-12-dot-04/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We are going to create one class to help our application, these classes are also called beans.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd classes
mkdir index
cd index
nano index.java
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We will create simple Java class.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;package index;
 
public class index {
	float height;
	float weight;
	float index;
 
	public void setWeight(float weight) {
		this.weight=weight;
	}
	public float getWeight() {
		return weight;
	}
	public void setHeight(float height) {
		this.height=height;
	}
	public float getHeight() {
		return height;
	}
	public float getIndex() {
		index=weight/(height*height);
		return index;
	}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we need to compile this file with &lt;code&gt;javac&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;javac index.java
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Important note here! This is not a good style to compile the classes, you should have the &lt;code&gt;.java&lt;/code&gt; files somewhere else and then just import the &lt;code&gt;.class&lt;/code&gt; files here, because it is not secure to have original files here on the web interface. But since this is only a tutorial and we are learning here, this will do.&lt;/p&gt;
&lt;h3 id=&quot;jsp-files&quot; tabindex=&quot;-1&quot;&gt;JSP files &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/javaee-and-tomcat-basic-tutorial-in-ubuntu-12-dot-04/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now we will create the &lt;code&gt;.jsp&lt;/code&gt; files which will be shown to user as they browse our web application.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd
cd jsp/
nano weight.jsp
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add this code into the file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;%@ page info=&amp;quot;Weight index with JSP&amp;quot; %&amp;gt;
&amp;lt;jsp:useBean id=&amp;quot;indexbean&amp;quot; scope=&amp;quot;page&amp;quot; class=&amp;quot;index.index&amp;quot;/&amp;gt;
&amp;lt;jsp:setProperty name=&amp;quot;indexbean&amp;quot; property=&amp;quot;*&amp;quot;/&amp;gt;
 
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;title&amp;gt;Weight Index with JSP&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h2&amp;gt;Please give your weight in kg and height in meters.&amp;lt;/h2&amp;gt;
&amp;lt;form action=&amp;quot;calculator.jsp&amp;quot; method=&amp;quot;GET&amp;quot;&amp;gt;
&amp;lt;table&amp;gt;
	&amp;lt;tr&amp;gt;
		&amp;lt;td&amp;gt;Your weight&amp;lt;/td&amp;gt;
		&amp;lt;td&amp;gt;&amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;weight&amp;quot;/&amp;gt;&amp;lt;/td&amp;gt;
		&amp;lt;br/&amp;gt;
	&amp;lt;/tr&amp;gt;
	&amp;lt;tr&amp;gt;
		&amp;lt;td&amp;gt;Your height&amp;lt;/td&amp;gt;
		&amp;lt;td&amp;gt;&amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;height&amp;quot;/&amp;gt;&amp;lt;/td&amp;gt;
		&amp;lt;br/&amp;gt;
	&amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&amp;lt;input type=&amp;quot;submit&amp;quot; value=&amp;quot;Calculate&amp;quot;/&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And add another file&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nano calculator.jsp
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;%@ page info=&amp;quot;Showing the result&amp;quot; %&amp;gt;
 
&amp;lt;jsp:useBean id=&amp;quot;indexbean&amp;quot; scope=&amp;quot;page&amp;quot; class=&amp;quot;index.index&amp;quot; /&amp;gt;
&amp;lt;jsp:setProperty name=&amp;quot;indexbean&amp;quot; property=&amp;quot;*&amp;quot; /&amp;gt;
 
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;title&amp;gt;Weight Index with JSP&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h2&amp;gt;Your weight index is &amp;lt;jsp:getProperty name=&amp;quot;indexbean&amp;quot; property=&amp;quot;index&amp;quot; /&amp;gt;&amp;lt;/h2&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;starting-tomcat-and-testing-the-application&quot; tabindex=&quot;-1&quot;&gt;Starting Tomcat and testing the application &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/javaee-and-tomcat-basic-tutorial-in-ubuntu-12-dot-04/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now we have created all of our files and want to start our server and see the webpages. Type in the following command and restart the Tomcat server.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo service tomcat7 restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Open up web browser and go to &lt;code&gt;http://localhost:8080/jsp/weight.jsp&lt;/code&gt; and you will see our application.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/rmmsqRt_6d-723.avif 723w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/rmmsqRt_6d-723.webp 723w&quot;&gt;&lt;img alt=&quot;Tomcat Form&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/rmmsqRt_6d-723.png&quot; width=&quot;723&quot; height=&quot;443&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Give it your info and continue to the next page which will make use of our java class.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/cXlKSc04_d-723.avif 723w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/cXlKSc04_d-723.webp 723w&quot;&gt;&lt;img alt=&quot;Tomcat Result&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/cXlKSc04_d-723.png&quot; width=&quot;723&quot; height=&quot;443&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;There are alot more in the world of JavaEE but this is was just a simple crash course into the subject using Ubuntu 12.04.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Innovate a new learning product in a 5 day workshop: ProQuiz</title>
		<link href="https://www.lennu.net/2015/innovate-a-new-learning-product-in-a-5-day-workshop-proquiz/"/>
		<updated>2015-01-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/innovate-a-new-learning-product-in-a-5-day-workshop-proquiz/</id>
		<content type="html">&lt;p&gt;Innovate a new learning product in a 5 day workshop. Work in a small, diverse group of students from (Haaga-Helia) Finland and Bilkent (Turkey).&lt;br&gt;
&lt;a href=&quot;http://terokarvinen.com/turkey&quot;&gt;terokarvinen.com/turkey&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;proquiz-mobile-contest-about-math-and-programming&quot; tabindex=&quot;-1&quot;&gt;ProQuiz – Mobile contest about math and programming! &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/innovate-a-new-learning-product-in-a-5-day-workshop-proquiz/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/b49KgT7Phh-180.avif 180w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/b49KgT7Phh-180.webp 180w&quot;&gt;&lt;img alt=&quot;ProQuiz&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/b49KgT7Phh-180.png&quot; width=&quot;180&quot; height=&quot;120&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Users installs the software to their mobile phones which will get hard questions about math or programming to the users to solve. The user is notified when a question arrives and he or she can submit a solution to that question in a specific time frame.&lt;/p&gt;
&lt;p&gt;Users get more points the faster they submit the answer. This will produce a ranking around the users, which the competition is about.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.lennu.net/files/proquiz_ppt.ppt&quot;&gt;Presentation about the topic&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;prototype&quot; tabindex=&quot;-1&quot;&gt;Prototype &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/innovate-a-new-learning-product-in-a-5-day-workshop-proquiz/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We made a working prototype of the project by using Android on the client side and Mosquitto on the server side.&lt;/p&gt;
&lt;p&gt;Big thanks goes to &lt;a href=&quot;http://tokudu.com/2010/how-to-implement-push-notifications-for-android/&quot;&gt;Anton Lopyrev&lt;/a&gt; for creating this great post about the subject.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/UgGsS6HIZH-200.avif 200w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/UgGsS6HIZH-200.webp 200w&quot;&gt;&lt;img alt=&quot;ProQuiz Form&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/UgGsS6HIZH-200.png&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;You can test our application by downloading the app from the Google Play.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.bilkenthaaga.proquiz&quot;&gt;ProQuiz on Google Play&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Just install it to your phone and fire it up!&lt;/p&gt;
&lt;p&gt;Then just activate the push service and wait for questions to arrive!&lt;/p&gt;
&lt;p&gt;When a question arrives there is a notification and it will take you to the application where you can submit an answer.&lt;/p&gt;
&lt;h3 id=&quot;testing-the-prototype&quot; tabindex=&quot;-1&quot;&gt;Testing the prototype &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/innovate-a-new-learning-product-in-a-5-day-workshop-proquiz/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can send questions here: &lt;a href=&quot;http://139.179.139.112/cay/&quot;&gt;ProQuiz Questions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And you can see the answers here: &lt;a href=&quot;http://178.79.148.195/proquiz/&quot;&gt;ProQuiz Answers&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;team&quot; tabindex=&quot;-1&quot;&gt;Team &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/innovate-a-new-learning-product-in-a-5-day-workshop-proquiz/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&quot;osman-unalan-bilkent-ueniversitesi&quot; tabindex=&quot;-1&quot;&gt;Osman Unalan – Bilkent Üniversitesi &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/innovate-a-new-learning-product-in-a-5-day-workshop-proquiz/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/-V3VmginrD-180.avif 180w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/-V3VmginrD-180.webp 180w&quot;&gt;&lt;img alt=&quot;Osman Unalan&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/-V3VmginrD-180.jpeg&quot; width=&quot;180&quot; height=&quot;239&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h4 id=&quot;oguzalp-ertunc-bilkent-ueniversitesi&quot; tabindex=&quot;-1&quot;&gt;Oguzalp Ertunc – Bilkent Üniversitesi &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/innovate-a-new-learning-product-in-a-5-day-workshop-proquiz/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/BIVXGdbd2t-180.avif 180w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/BIVXGdbd2t-180.webp 180w&quot;&gt;&lt;img alt=&quot;Oguzalp Ertunc&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/BIVXGdbd2t-180.jpeg&quot; width=&quot;180&quot; height=&quot;119&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h4 id=&quot;tugba-zemheri-bilkent-ueniversitesi&quot; tabindex=&quot;-1&quot;&gt;Tugba Zemheri – Bilkent Üniversitesi &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/innovate-a-new-learning-product-in-a-5-day-workshop-proquiz/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/0fmrBEzPmk-125.avif 125w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/0fmrBEzPmk-125.webp 125w&quot;&gt;&lt;img alt=&quot;Tugba Zemheri&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/0fmrBEzPmk-125.jpeg&quot; width=&quot;125&quot; height=&quot;166&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h4 id=&quot;juha-matti-laaksonen-haaga-helia-university-of-applied-sciences&quot; tabindex=&quot;-1&quot;&gt;Juha-Matti Laaksonen – Haaga-Helia University of Applied Sciences &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/innovate-a-new-learning-product-in-a-5-day-workshop-proquiz/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/j15Ftn4Iox-180.avif 180w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/j15Ftn4Iox-180.webp 180w&quot;&gt;&lt;img alt=&quot;Lennu&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/j15Ftn4Iox-180.jpeg&quot; width=&quot;180&quot; height=&quot;270&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Import Git Project into Eclipse</title>
		<link href="https://www.lennu.net/2015/import-git-project-into-eclipse/"/>
		<updated>2015-01-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/import-git-project-into-eclipse/</id>
		<content type="html">&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/zN1ImYnpD6-150.avif 150w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/zN1ImYnpD6-150.webp 150w&quot;&gt;&lt;img alt=&quot;EGit&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/zN1ImYnpD6-150.jpeg&quot; width=&quot;150&quot; height=&quot;150&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Third article of Eclipse IDE Plugins is about importing a Git project into Eclipse using EGit. This is useful when working with such project that are placed in public places such as GitHub or if you are working on project which has many developers.&lt;/p&gt;
&lt;p&gt;To follow this tutorial you have to have Eclipse installed on your operating system and EGit. If you haven’t installed EGit, you can follow the first Eclipse &lt;a href=&quot;https://www.lennu.net/2012/08/21/eclipse-ide-plugin-installation/&quot;&gt;tutorial&lt;/a&gt; which shows how to install an Eclipse Plugin.&lt;/p&gt;
&lt;p&gt;You also have to have configured EGit which I have shown on the second Eclipse &lt;a href=&quot;https://www.lennu.net/2015/egit-configuration-and-creating-a-git-repository-with-eclipse-ide/&quot;&gt;tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;importing-a-git-project-into-eclipse&quot; tabindex=&quot;-1&quot;&gt;Importing a Git Project into Eclipse &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/import-git-project-into-eclipse/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Start Eclipse and go to the File menu and choose Import.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/MlKxRfyVLn-377.avif 377w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/MlKxRfyVLn-377.webp 377w&quot;&gt;&lt;img alt=&quot;EGit Menu&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/MlKxRfyVLn-377.png&quot; width=&quot;377&quot; height=&quot;425&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;git-project&quot; tabindex=&quot;-1&quot;&gt;Git Project &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/import-git-project-into-eclipse/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Surf in the Import menu to Git and select Projects from Git&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/3TSKWlb650-487.avif 487w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/3TSKWlb650-487.webp 487w&quot;&gt;&lt;img alt=&quot;EGit Projects From Git&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/3TSKWlb650-487.png&quot; width=&quot;487&quot; height=&quot;276&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;uri&quot; tabindex=&quot;-1&quot;&gt;URI &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/import-git-project-into-eclipse/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Depending on the situation, but on this tutorial I will show you the way for URI. So choose URI at this point.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/U-46MeCUUo-501.avif 501w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/U-46MeCUUo-501.webp 501w&quot;&gt;&lt;img alt=&quot;EGit URI&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/U-46MeCUUo-501.png&quot; width=&quot;501&quot; height=&quot;190&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;configurations&quot; tabindex=&quot;-1&quot;&gt;Configurations &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/import-git-project-into-eclipse/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here you see example data how to write the configurations, I’m using ssh as a protocol as it is most widely used. Click next when you are done editing and Eclipse will try to connect and fetch for Git repository.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/84mervgISa-525.avif 525w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/84mervgISa-525.webp 525w&quot;&gt;&lt;img alt=&quot;EGit Configurations&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/84mervgISa-525.png&quot; width=&quot;525&quot; height=&quot;550&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;repositories&quot; tabindex=&quot;-1&quot;&gt;Repositories &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/import-git-project-into-eclipse/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Depending on the found Git repositories, you will see the repositories here.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/FfFOMqd44g-497.avif 497w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/FfFOMqd44g-497.webp 497w&quot;&gt;&lt;img alt=&quot;EGit Repositories&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/FfFOMqd44g-497.png&quot; width=&quot;497&quot; height=&quot;177&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;directory&quot; tabindex=&quot;-1&quot;&gt;Directory &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/import-git-project-into-eclipse/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Next we choose the directory where to place our local Git repository. I use the default one.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/IwKaRtZFbz-496.avif 496w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/IwKaRtZFbz-496.webp 496w&quot;&gt;&lt;img alt=&quot;EGit Directory&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/IwKaRtZFbz-496.png&quot; width=&quot;496&quot; height=&quot;217&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;importing-to-eclipse&quot; tabindex=&quot;-1&quot;&gt;Importing to Eclipse &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/import-git-project-into-eclipse/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Eclipse asks how would you like to import the project. The usual way for Eclipse projects is to import it as an existing project.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/9wUrDbhzvU-495.avif 495w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/9wUrDbhzvU-495.webp 495w&quot;&gt;&lt;img alt=&quot;EGit Import&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/9wUrDbhzvU-495.png&quot; width=&quot;495&quot; height=&quot;341&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Just select here the project you are importing and Eclipse imports the project.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/WIozqgm5uD-496.avif 496w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/WIozqgm5uD-496.webp 496w&quot;&gt;&lt;img alt=&quot;EGit Import&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/WIozqgm5uD-496.png&quot; width=&quot;496&quot; height=&quot;220&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h2 id=&quot;importing-finished&quot; tabindex=&quot;-1&quot;&gt;Importing Finished &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/import-git-project-into-eclipse/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now if we go right click our imported project and go to Team we will see all the important Git functions.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/wLyRxQ11e0-607.avif 607w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/wLyRxQ11e0-607.webp 607w&quot;&gt;&lt;img alt=&quot;EGit Finished&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/wLyRxQ11e0-607.png&quot; width=&quot;607&quot; height=&quot;562&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h2 id=&quot;using-egit&quot; tabindex=&quot;-1&quot;&gt;Using EGit &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/import-git-project-into-eclipse/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Commit – When you want to make a commit, select Commit and window will popup which asks for files to commit.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Push to Upstream – When you have made a commit, you can Push those changes to the server with this command. Username and Password are needed to use this command.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fetch from Upstream – When you want to update your project with the latest commits someone else have made to the Git repository, you have to use this command. Usename and Password are needed for this command. Remember to use Pull after this.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pull – If you have fetched some changes from the Upstream, you have to Pull these changes to Eclipses working project. Usename and Password are needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Show in History – This one shows you the history and made changes in the project on its lifetime.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can get around with these commands in the world of Git and Eclipse, if you get some special needs, I’m sure you will find answers pretty fast with some Googling.&lt;/p&gt;
&lt;p&gt;I hope these Eclipse Plugins tutorials have been helpful and maybe you have learnt how to use Git, it’s a very good tool in version controlling and preventing disasters in software development. Of course there are some bad things but you will eventually find those yourself.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>HTML5 Responsive Design Guide and Skeleton</title>
		<link href="https://www.lennu.net/2015/html5-responsive-design-guide-and-skeleton/"/>
		<updated>2015-01-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/html5-responsive-design-guide-and-skeleton/</id>
		<content type="html">&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/TjGJQoyS2U-290.avif 290w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/TjGJQoyS2U-290.webp 290w&quot;&gt;&lt;img alt=&quot;Responsive Design&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/TjGJQoyS2U-290.png&quot; width=&quot;290&quot; height=&quot;191&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Have you ever wondered how to do these websites which work on desktop computer, tablet and even on mobile phone.&lt;/p&gt;
&lt;p&gt;This guide is all about Responsive Web Design in HTML5 which allows this extremely powerful design since you only do one website instead of three platform specific ones.&lt;/p&gt;
&lt;h3 id=&quot;responsive-design&quot; tabindex=&quot;-1&quot;&gt;Responsive Design &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/html5-responsive-design-guide-and-skeleton/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Have a look at this web page. If you use your mouse to resize the window you’ll notice that the page changes according to the size of your window.&lt;/p&gt;
&lt;p&gt;Maximum resize.&lt;br&gt;
&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/Ztt82UYywI-623.avif 623w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/Ztt82UYywI-623.webp 623w&quot;&gt;&lt;img alt=&quot;Responsive Design Desktop&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/Ztt82UYywI-623.png&quot; width=&quot;623&quot; height=&quot;595&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Average resize.&lt;br&gt;
&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/Ztt82UYywI-623.avif 623w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/Ztt82UYywI-623.webp 623w&quot;&gt;&lt;img alt=&quot;Responsive Design Desktop&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/Ztt82UYywI-623.png&quot; width=&quot;623&quot; height=&quot;595&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Minimum resize.&lt;br&gt;
&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/MMBa9nXLbW-319.avif 319w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/MMBa9nXLbW-319.webp 319w&quot;&gt;&lt;img alt=&quot;Responsive Design Mobile&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/MMBa9nXLbW-319.png&quot; width=&quot;319&quot; height=&quot;595&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;magic-in-the-css&quot; tabindex=&quot;-1&quot;&gt;Magic in the CSS &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/html5-responsive-design-guide-and-skeleton/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The answer how to do this is in the CSS code of the web page. If you dig to the code you’ll find these statements:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@media handheld and (max-width: 480px), screen and (max-device-width: 480px), screen and (max-width: 767px) { }&lt;/code&gt;&lt;br&gt;
and&lt;br&gt;
&lt;code&gt;@media handheld and (max-width: 479px), screen and (max-device-width: 479px), screen and (max-width: 479px) { }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;So what these basicly do are optimization for different handheld devices. And it works just by giving these statements in the CSS code and writing special code in them which will be used when the window size is in the required region.&lt;/p&gt;
&lt;p&gt;The magic is that these statements override the normal CSS settings when window size is small enough. So you them with that logic.&lt;/p&gt;
&lt;h4 id=&quot;tablet-structure&quot; tabindex=&quot;-1&quot;&gt;Tablet structure &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/html5-responsive-design-guide-and-skeleton/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;@media handheld and (max-width: 480px), screen and (max-device-width: 480px), screen and (max-width: 767px)  {
	body{
		padding:0 20px;
	}
	header .main-nav {
		margin-left:4%;
	}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On this example code we give tablet version of the page some padding and give main-navigation margin. Which does the effect that page works better on tablets.&lt;/p&gt;
&lt;h4 id=&quot;mobile-phone-structure&quot; tabindex=&quot;-1&quot;&gt;Mobile Phone structure &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/html5-responsive-design-guide-and-skeleton/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;@media handheld and (max-width: 479px), screen and (max-device-width: 479px), screen and (max-width: 479px)  {
	body{
	
	}
 
	header #logo {
		text-indent:-99999999px;
		width:244px;
		height:75px;
		float:none;
		margin:0 auto 40px; auto;
	}
	header #logo a {
		background:url(../images/logo.png) no-repeat;
		display:block;
		width:244px;
		height:75px;
	}
	header {
		border-bottom:none;
	}
 
	header .main-nav{
		width:100%;
		margin-left:0;
	}
	header .main-nav ul {
		width:100%;
	}
	header .main-nav ul li, header .main-nav ul &amp;gt; li.last{
		display:block;
		float:none;
		text-align:center;
		width:100%;
	}
	header .main-nav ul li a{
		padding:4px 0;
		background:#e4e4e4;
		display:block;
		margin-bottom:4px;
	}
	div.columns{
		width:100%;
	}
	div.one{
		margin-left:0;
		width:100%;
	}
 
	header #searchform {
		float:right;
		margin-top:10px;
		width:100%;
		margin-bottom:20px;
	} 
	header #searchform #s {
		border:1px solid #cecece;
		width:16px;
		-webkit-border-radius:40px;
		-moz-border-radius:40px;
		-o-border-radius:40px;
		border-radius:40px;
		padding:10px;
		background:#e2e2e2 url(../images/magnify.png) no-repeat  50% 50%;
		-webkit-transition-duration: 400ms; 
    -webkit-transition-property: width, background; 
    -webkit-transition-timing-function: ease; 
    -moz-transition-duration: 400ms; 
    -moz-transition-property: width, background;	
    -moz-transition-timing-function: ease; 
    -o-transition-duration: 400ms; 
    -o-transition-property: width, background; 
    -o-transition-timing-function: ease;
		cursor:pointer;
		color:#4b4b4b;
		text-indent:-999999px;
	}
	header #searchform #s:focus {
		outline:none;
		background:#e2e2e2 url(../images/magnify.png) no-repeat 4% 50%;
		padding-left:34px;
		width:90%;
		text-indent:0px;
		
	}
 
	.copyright, .footer-nav{
		width:100%;
		float:none;
	}
	.copyright,	.footer-nav {
		text-align:center;
	}
 
	#main-content .text-intro h2 {
		font-size:30px;
	}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On this example we do alot of stuff to the optimization for the mobile phone. Largest change is the navigation which we give a whole new life with with completely new CSS codes. We also change alot of the heights and widths to go with phones screens.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Finnish Education System</title>
		<link href="https://www.lennu.net/2015/finnish-education-system/"/>
		<updated>2015-01-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/finnish-education-system/</id>
		<content type="html">&lt;p&gt;Finland started the process of educating me when I was six years old. Usually they start this when the citizen is seven but they took me in because I was born in January and was pretty close being seven. So I was six and the government had enough of looking me just running around without purpose. They launched me to the many times cited the best education system in the world.&lt;/p&gt;
&lt;p&gt;What would the Finnish Education System teach me? What would I become and where the would the system take me after the process which for me lasted 16 years?&lt;/p&gt;
&lt;h2 id=&quot;comprehensive-school&quot; tabindex=&quot;-1&quot;&gt;Comprehensive School &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/finnish-education-system/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I was six years old and government wanted me start studying. In Finland the primary school is divided into two parts. First part is for the citizens aged 7-13 and the second is for the citizens aged 13-16.&lt;/p&gt;
&lt;h3 id=&quot;primary-education&quot; tabindex=&quot;-1&quot;&gt;Primary Education &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/finnish-education-system/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I don’t really remember my first day in school but I remember that my father showed me the way. I had to take a bus to reach my destination and that it was funny to try outrun the bus after hopping off of it. The first two years was mainly learning to read and write properly and we also had mathematics to teach us the multiplication table. I also took part in some speech courses where I learned to pronounce letter R the right way, it was some kind of bonus course but really worth the time. These first two years formed mostly from four hours per day of education and there were a lot of sports also involved in the experience.&lt;/p&gt;
&lt;p&gt;After the first two years, areas of nature sciences and foreign languages were added into the picture. The 10 year old citizens also were taught about handwork which included workshops with items made of wood. This is where the first choices had to be made about the education areas. Each student (parents) could choose from woodwork or sewing, you also had to choose if you wanted to learn Swedish or English as a second language, I went for English.&lt;/p&gt;
&lt;p&gt;The last four years of Primary Education went fast because in those years we saw a computer for the first time in the education process, this was about the year of 2000. We rushed to play RuneScape which was a hugely popular game at the time. Computers came into the picture and some even had own computers at their homes. Everyday we went to someone and played RuneScape for a long time.&lt;/p&gt;
&lt;p&gt;I started in school at the age of six and I had been in school for six years. Mother tongue and mathematics were generally the most important areas in Primary Education and they prepared us for the Lower Secondary Education very well. So I had learned these areas well. Of course we had biology, geography, arts, history and all these things but they weren’t nearly as important as it was to teach us how to multiply correctly. I was 12 years old and I knew how to read and write finnish, speak, read and write some english and multiply correctly. All the other things that were not so important had located in brain into the area of common knowledge. I was playing football a lot at the time and I was pretty good at it because I had been training for six years, but as we know government doesn’t really care about that. So I was going to step on the next step and I was ready to conquer to world!&lt;/p&gt;
&lt;h3 id=&quot;lower-secondary-education&quot; tabindex=&quot;-1&quot;&gt;Lower Secondary Education &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/finnish-education-system/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;And we started to learn mother tongue, mathematics and foreign languages. Of course the difficulty rose a lot but we still mainly focused for the last years of Comprehensive School to these elements.&lt;/p&gt;
&lt;p&gt;At this stage of life when you are about 12-15 year old, you start to realize that there are something else out there than just school and you go through a huge mental growth. I wasn’t really interested or focused to the mission of education at the time because I thought it was boring and stupid. I played a lot of video games and tried out new things, none of these mattered to the Education System, they still wanted us to learn about the subjects we had studied over half of our lives. These are important topics but they just didn’t interest me at the time. Well I learned them somehow anyway.&lt;/p&gt;
&lt;p&gt;Lower Secondary Education lasts for three years and you need to succeed on everything in order to graduate from Primary Education, if you don’t, you have a chance to be facing a another year in the Lower Secondary Education and that was a huge motivation for everyone. At this point Finnish Education System pushes the students to learn everything and well because of this and for another reason. The next study place you get is solely chosen by the results of your studies, if you are bad enough the government might think that the education for you is over.&lt;/p&gt;
&lt;p&gt;So the main three areas were still the most important and we all learned them very well. We also had mandatory classes about the language of Sweden and general subjects such as biology, history or chemistry.&lt;/p&gt;
&lt;p&gt;Lower Secondary Education ended about at the age of 15. This is the last mandary step the government required you to do. If you don’t want to continue, you don’t have to. Most of us of course continued to Upper Secondary General School or Upper Secondary Vocational School, I went for both. Suddenly there is a huge decision to be made after nine years of Primary School, how to continue your education and where to focus? You could choose a more professionally developed path or continue with the general subjects.&lt;/p&gt;
&lt;p&gt;At this point I had learned a lot how the world works but I really didn’t know at all why I knew these things and why I had been studying them. Because I had always liked computers and spend a lot of time with them, I went for double degree to study general subjects and computer science.&lt;/p&gt;
&lt;h2 id=&quot;upper-secondary-general-vocational-school&quot; tabindex=&quot;-1&quot;&gt;Upper secondary general/vocational school &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/finnish-education-system/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I applied to this school and went even through psychological tests to qualify. This was a huge game changer and changed everything for me in terms of education. The first day of this school started in a computer classroom. I was sold at the very moment.&lt;/p&gt;
&lt;p&gt;I started to really focus on school and got great results on the subjects that I had interest in. I met with a lot of same minded people and collaborated with them to projects and studies.&lt;/p&gt;
&lt;p&gt;For three years we studied programming with Java, relational databases with SQL, websites and computer science in general. They interested me so much that I bought this domain and started to do something in the internet. You can check archive.org of this site if you are interested.&lt;/p&gt;
&lt;p&gt;As I had chosen double degree, I had some general topics also about math, mother tongue and english. This was a good option for me since they were not the main subjects anymore, but they were the extra studies, that somehow got me interested more about them.&lt;/p&gt;
&lt;p&gt;So finally the education system had found my interest in life and where I could make myself a living one day. I managed to do the double degree in three years which was kind of achievement considering that the path is made for four and a half years. The last episode was training where I did websites for six months and the final matriculation examination of the other side of the double degree. Everything went fine.&lt;/p&gt;
&lt;p&gt;At this point it was 2009 and I was 18 years old. For many who hasn’t done double degree, this is the hardest part, because this is the last stage where you can decide what you are going to do for the rest of your life, or at least some time. It was the time to apply for universities. As I had made my choice of career three years ago, I decided to apply to University of Applied Sciences. Thats the more professionally valued university option in the education of Finland.&lt;/p&gt;
&lt;h2 id=&quot;university&quot; tabindex=&quot;-1&quot;&gt;University &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/finnish-education-system/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I got right in on the application process which were due to my good success in computer sciences and the fact that I had a double degree. I was on computer science study path and I suddendly realized that the stuff they are teaching is the same stuff I had learned over the last three years. So, the subjects were very familiar for me and I got great grades of all the computer science related classes. We also had mathematics, mother tongue and foreign languages, as we had had over the last twelve years. Well it didn’t matter so much as I had my interest in other areas, and these subjects carried on with me.&lt;/p&gt;
&lt;p&gt;I chose the innovation path as a deepening subject and found out great new things how to do programming and how to make robots and such things. I went active on the student union and had quite great times with them, but I always had in mind that I’m here to learn.&lt;/p&gt;
&lt;p&gt;The years went on and I gathered as much information as I could, but at the end I think the hardest things I had to do were as hard as the things I had done already on my double degree. So there were no challenge as I had hoped. I had good papers graduating, and I though now is the time to use my skills.&lt;/p&gt;
&lt;p&gt;After the university I went right into army and did my six months of service for the country. I applied for jobs and got to pretty good one where I code daily, doing websites with HTML, CSS, PHP and Javascript.&lt;/p&gt;
&lt;h2 id=&quot;finnish-education-system&quot; tabindex=&quot;-1&quot;&gt;Finnish Education System &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/finnish-education-system/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;So after the university, I had studied for sixteen years in Finland and I was 22 years old. Remember? I was six years old when I started. I could have applied for masters degree if I wanted but I had had enough.&lt;/p&gt;
&lt;p&gt;As a conclusion I could say it was a great ride and the last seven years were the best. The Education system of Finland was done for me. It gave me a career, friends, love and most importantly: a future.&lt;/p&gt;
&lt;p&gt;I’m working now full time and may return some day to do the masters degree, who knows. At this point Finland has taught me how to read, write, foreign languages, mathematics and other general subjects. And most importantly I have learned how to use the skills by creating something amazing with computer sciences. That was the catch I think of all the learning of those general subjects.&lt;/p&gt;
&lt;p&gt;How I would rate the education in Finland? 5/5&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>EGit Configuration &amp; Creating a Git Repository With Eclipse IDE</title>
		<link href="https://www.lennu.net/2015/egit-configuration-and-creating-a-git-repository-with-eclipse-ide/"/>
		<updated>2015-01-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/egit-configuration-and-creating-a-git-repository-with-eclipse-ide/</id>
		<content type="html">&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/zN1ImYnpD6-150.avif 150w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/zN1ImYnpD6-150.webp 150w&quot;&gt;&lt;img alt=&quot;EGit&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/zN1ImYnpD6-150.jpeg&quot; width=&quot;150&quot; height=&quot;150&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;This is the second article of Eclipse IDE Plugins and it is about EGit. It is a plugin which allows to run Git commands inside Eclipse. You can do all the necessary things with this plugin regarding to the use of Git as a software developer.&lt;/p&gt;
&lt;p&gt;There is a very large website of the things around EGit at their &lt;a href=&quot;https://www.eclipse.org/egit/&quot;&gt;homepage&lt;/a&gt;, but I think it’s too much if you just want to use to program.&lt;/p&gt;
&lt;p&gt;To follow this tutorial you have to have Eclipse installed on your operating system and EGit. If you haven’t installed EGit, you can follow my previous &lt;a href=&quot;https://www.lennu.net/2015/eclipse-ide-plugin-installation/&quot;&gt;tutorial&lt;/a&gt; which shows how to install an Eclipse Plugin.&lt;/p&gt;
&lt;h2 id=&quot;configuration-of-egit&quot; tabindex=&quot;-1&quot;&gt;Configuration of EGit &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/egit-configuration-and-creating-a-git-repository-with-eclipse-ide/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Start Eclipse and go to the Window menu and choose Preferences.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/fIPLqBnoK--220.avif 220w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/fIPLqBnoK--220.webp 220w&quot;&gt;&lt;img alt=&quot;EGit Preferences&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/fIPLqBnoK--220.png&quot; width=&quot;220&quot; height=&quot;364&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;configuration&quot; tabindex=&quot;-1&quot;&gt;Configuration &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/egit-configuration-and-creating-a-git-repository-with-eclipse-ide/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Surf in the Preferences menu to Team-&amp;gt;Git-&amp;gt;Configuration and click Add Entry&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/ol41ZDkIsZ-778.avif 778w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/ol41ZDkIsZ-778.webp 778w&quot;&gt;&lt;img alt=&quot;EGit Configuration&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/ol41ZDkIsZ-778.png&quot; width=&quot;778&quot; height=&quot;626&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;add-entry&quot; tabindex=&quot;-1&quot;&gt;Add Entry &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/egit-configuration-and-creating-a-git-repository-with-eclipse-ide/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here we add the first entry to the Git configurations. Key: user.email and Value: your own email address. Click OK when finished.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/lsG6ABBzf8-535.avif 535w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/lsG6ABBzf8-535.webp 535w&quot;&gt;&lt;img alt=&quot;EGit Add Entry&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/lsG6ABBzf8-535.png&quot; width=&quot;535&quot; height=&quot;291&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Click Add Entry again and this time Key: user.name and Value: your own name. Click OK when finished&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/MaSTFFTN1p-535.avif 535w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/MaSTFFTN1p-535.webp 535w&quot;&gt;&lt;img alt=&quot;EGit Add Entry Second&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/MaSTFFTN1p-535.png&quot; width=&quot;535&quot; height=&quot;291&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;configurations-done&quot; tabindex=&quot;-1&quot;&gt;Configurations Done &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/egit-configuration-and-creating-a-git-repository-with-eclipse-ide/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now you have succesfully configured EGit to work. CLick OK to save the configurations.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/hhr4xzYVVj-548.avif 548w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/hhr4xzYVVj-548.webp 548w&quot;&gt;&lt;img alt=&quot;EGit Done&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/hhr4xzYVVj-548.png&quot; width=&quot;548&quot; height=&quot;386&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h2 id=&quot;creating-a-git-repository&quot; tabindex=&quot;-1&quot;&gt;Creating a Git repository &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/egit-configuration-and-creating-a-git-repository-with-eclipse-ide/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Next we will create our first Git repository straight from Eclipse by using EGit. You have to have one Eclipse Project created already. Click right mouse button on the project and select Team-&amp;gt;Share Project&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/EVInEJvb6S-561.avif 561w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/EVInEJvb6S-561.webp 561w&quot;&gt;&lt;img alt=&quot;EGit Team&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/EVInEJvb6S-561.png&quot; width=&quot;561&quot; height=&quot;633&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;share-project&quot; tabindex=&quot;-1&quot;&gt;Share Project &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/egit-configuration-and-creating-a-git-repository-with-eclipse-ide/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here we will select Git.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/2CPRLwFUTw-525.avif 525w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/2CPRLwFUTw-525.webp 525w&quot;&gt;&lt;img alt=&quot;EGit Share Project&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/2CPRLwFUTw-525.png&quot; width=&quot;525&quot; height=&quot;433&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;If you get this error, you can select “Do not show again” and click OK.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/VYxKLWGhkd-532.avif 532w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/VYxKLWGhkd-532.webp 532w&quot;&gt;&lt;img alt=&quot;EGit Home&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/VYxKLWGhkd-532.png&quot; width=&quot;532&quot; height=&quot;186&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;configure&quot; tabindex=&quot;-1&quot;&gt;Configure &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/egit-configuration-and-creating-a-git-repository-with-eclipse-ide/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Choose your project if not selected and click Create.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/wxqEbWfkBI-735.avif 735w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/wxqEbWfkBI-735.webp 735w&quot;&gt;&lt;img alt=&quot;EGit Configure&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/wxqEbWfkBI-735.png&quot; width=&quot;735&quot; height=&quot;345&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;new-git-repository&quot; tabindex=&quot;-1&quot;&gt;New Git Repository &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/egit-configuration-and-creating-a-git-repository-with-eclipse-ide/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can here choose directory for your repository, but I prefer the default location, since all the user data is also in there. Also give your repository a name. Click Finish after giving the name.&lt;br&gt;
&lt;a href=&quot;https://www.lennu.net/wp-content/uploads/2015/01/egit-new-git.png&quot;&gt;&lt;img src=&quot;https://www.lennu.net/wp-content/uploads/2015/01/egit-new-git.png&quot; alt=&quot;EGit New Git&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/egit-configuration-and-creating-a-git-repository-with-eclipse-ide/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here we wee our conclusion what we are going to do. Click Finish to continue.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/3ZneHfrmei-732.avif 732w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/3ZneHfrmei-732.webp 732w&quot;&gt;&lt;img alt=&quot;EGit Conclusion&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/3ZneHfrmei-732.png&quot; width=&quot;732&quot; height=&quot;445&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;done-installation&quot; tabindex=&quot;-1&quot;&gt;Done Installation &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/egit-configuration-and-creating-a-git-repository-with-eclipse-ide/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now you have succesfully created a Git repository. Right click a project and go to Team and you will see all the necessary Git functions available. Click on the Commit.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/IaVZfguGdq-587.avif 587w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/IaVZfguGdq-587.webp 587w&quot;&gt;&lt;img alt=&quot;EGit Done&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/IaVZfguGdq-587.png&quot; width=&quot;587&quot; height=&quot;558&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;commit&quot; tabindex=&quot;-1&quot;&gt;Commit &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/egit-configuration-and-creating-a-git-repository-with-eclipse-ide/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here you can make your first commit, just select all the files you’d like to commit and click Commit. Now your first saves are done to the version history.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/yhsFMxYNRp-663.avif 663w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/yhsFMxYNRp-663.webp 663w&quot;&gt;&lt;img alt=&quot;EGit Commit&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/yhsFMxYNRp-663.png&quot; width=&quot;663&quot; height=&quot;630&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;On the next tutorial I will show how to import a Git project into Eclipse and what are the basic commands you need to use Git in other ways than just Commit.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Eclipse IDE Plugin Installation</title>
		<link href="https://www.lennu.net/2015/eclipse-ide-plugin-installation/"/>
		<updated>2015-01-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/eclipse-ide-plugin-installation/</id>
		<content type="html">&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/ZEE8gG3_ZC-150.avif 150w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/ZEE8gG3_ZC-150.webp 150w&quot;&gt;&lt;img alt=&quot;Eclipse IDE Logo&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/ZEE8gG3_ZC-150.jpeg&quot; width=&quot;150&quot; height=&quot;150&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;This article starts a three posts long serie of Eclipse IDE Plugins where I’m going to show how to install plugins and how to use one specific. This post will be about installation of the plugins to the great Eclipse IDE. There are tons of plugins, but not so much tutorials how install them. This will be a general tutorial to all of them. To follow this tutorial you have to have Eclipse installed on your operating system. You can download it from here: &lt;a href=&quot;http://www.eclipse.org/downloads/&quot;&gt;http://www.eclipse.org/downloads/&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;installation-of-a-plugins&quot; tabindex=&quot;-1&quot;&gt;Installation of a Plugins &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/eclipse-ide-plugin-installation/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Start Eclipse and go to the Help menu and Choose Install New Software.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/N-Cmm22vke-313.avif 313w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/N-Cmm22vke-313.webp 313w&quot;&gt;&lt;img alt=&quot;Install New Software in Eclipse&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/N-Cmm22vke-313.png&quot; width=&quot;313&quot; height=&quot;319&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;url&quot; tabindex=&quot;-1&quot;&gt;URL &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/eclipse-ide-plugin-installation/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;At this point we need an URL for the software, this URL is usually found from the Plugins website. Give the URL and click Enter.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/0MHeP6-VTK-820.avif 820w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/0MHeP6-VTK-820.webp 820w&quot;&gt;&lt;img alt=&quot;Eclipse Addon URL&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/0MHeP6-VTK-820.png&quot; width=&quot;820&quot; height=&quot;132&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;load&quot; tabindex=&quot;-1&quot;&gt;Load &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/eclipse-ide-plugin-installation/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Eclipse will load the Plugins found from this URL, select the one you want to install.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/G5_6EMO0Ku-843.avif 843w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/G5_6EMO0Ku-843.webp 843w&quot;&gt;&lt;img alt=&quot;Eclipse Load Addon&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/G5_6EMO0Ku-843.png&quot; width=&quot;843&quot; height=&quot;120&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;If you get an error like this “Cannot complete the install because one or more required items could not be found.”, it usually means that your Eclipse IDE version is incorrect for this plugin.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/bx7HXe2Y1P-818.avif 818w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/bx7HXe2Y1P-818.webp 818w&quot;&gt;&lt;img alt=&quot;Eclipse Error&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/bx7HXe2Y1P-818.png&quot; width=&quot;818&quot; height=&quot;145&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;terms&quot; tabindex=&quot;-1&quot;&gt;Terms &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/eclipse-ide-plugin-installation/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Allow the terms of installation.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/YfnL7ehxxQ-394.avif 394w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/YfnL7ehxxQ-394.webp 394w&quot;&gt;&lt;img alt=&quot;Eclipse Terms&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/YfnL7ehxxQ-394.png&quot; width=&quot;394&quot; height=&quot;149&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;restart&quot; tabindex=&quot;-1&quot;&gt;Restart &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/eclipse-ide-plugin-installation/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Next up Eclipse will install the software and asks for restart permission. You should restart Eclipse, so that everything goes smoothly for succesful installation.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/i5PIQ8Cr4R-532.avif 532w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/i5PIQ8Cr4R-532.webp 532w&quot;&gt;&lt;img alt=&quot;Eclipse Restart&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/i5PIQ8Cr4R-532.png&quot; width=&quot;532&quot; height=&quot;152&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;finished&quot; tabindex=&quot;-1&quot;&gt;Finished &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/eclipse-ide-plugin-installation/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now you have succesfully installed a plugin to Eclipse! Hopefully it will speed up some of your development.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Django deployment installation to Ubuntu 12.04 server</title>
		<link href="https://www.lennu.net/2015/django-deployment-installation-to-ubuntu-12-dot-04-server/"/>
		<updated>2015-01-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/django-deployment-installation-to-ubuntu-12-dot-04-server/</id>
		<content type="html">&lt;p&gt;Django is a web framework written in Python and as you may guess everything in Django is also done in Python. Django was developed to simplify the creation of database driven sites and principle of it is “don’t repeat yourself”. Best feature in Django is the fact that it propably is the fastest website framework to create a fully functioning website.&lt;/p&gt;
&lt;p&gt;When I developed a website with Django I stumbled upon one step, and that step was the deployment and publishing of Django driven website. There are a good tutorial about deploying Django on the official website and I followed it. Anyway there are alot of things in that tutorial that are not explained and you just need to know.&lt;/p&gt;
&lt;p&gt;So here is a full step by step tutorial for deploying Django 1.6 web framework. I have tested this tutorial with Ubuntu 12.04.&lt;/p&gt;
&lt;p&gt;Requirements for this tutorial&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux knowledge&lt;/li&gt;
&lt;li&gt;Fresh Ubuntu 12.04 installation on a server&lt;/li&gt;
&lt;li&gt;Root access to that server&lt;/li&gt;
&lt;li&gt;Domain&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;environment&quot; tabindex=&quot;-1&quot;&gt;Environment &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/django-deployment-installation-to-ubuntu-12-dot-04-server/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In this tutorial the user we are using is &lt;code&gt;root&lt;/code&gt; and we will install Django in /srv/ folder. Of course you may use another user and sudo everything, and install in some other directory, but this tutorial does not scale to that. This Django installation is safe and secure and we are going to create a new system user to run mod_WSGI with Apache. Python will be handled by VirtualEnv.&lt;/p&gt;
&lt;h2 id=&quot;django-1-6-deployment-on-ubuntu-12-04&quot; tabindex=&quot;-1&quot;&gt;Django 1.6 deployment on Ubuntu 12.04 &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/django-deployment-installation-to-ubuntu-12-dot-04-server/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;So we start of with updating the system.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get update
apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;hostname&quot; tabindex=&quot;-1&quot;&gt;Hostname &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/django-deployment-installation-to-ubuntu-12-dot-04-server/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Choose here name for your server. Modify SERVERNAME.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo &amp;quot;SERVERNAME&amp;quot; &#92;&amp;gt; /etc/hostname
hostname &#92;-F /etc/hostname
echo &#92;-e &amp;quot;&#92;&#92;n127.0.0.1 SERVERNAME.local SERVERNAME&#92;&#92;n&amp;quot; &#92;&amp;gt;&amp;gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;install-software-and-dependencies&quot; tabindex=&quot;-1&quot;&gt;Install software and dependencies &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/django-deployment-installation-to-ubuntu-12-dot-04-server/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Type in the next three lines to install Apache2, Python, VirtualEnv and PIP.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt&#92;-get &#92;-y install apache2&#92;-mpm&#92;-worker apache2&#92;-dev
apt&#92;-get &#92;-y install python python&#92;-dev python&#92;-setuptools
easy&#92;_install virtualenv virtualenvwrapper pip
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;install-and-enable-mod-wsgi&quot; tabindex=&quot;-1&quot;&gt;Install and enable mod_WSGI &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/django-deployment-installation-to-ubuntu-12-dot-04-server/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We will &lt;code&gt;wget&lt;/code&gt; the latest mod_wsgi, since the time I checked Ubuntu only offered outdated version. Last commands here will add the mod to Apache2 and disable Apaches default site.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget http://modwsgi.googlecode.com/files/mod&#92;_wsgi-3.4.tar.gz
tar xvfz mod&#92;_wsgi&#92;-3.4.tar.gz
cd mod&#92;_wsgi&#92;-3.4
./configure
make
make install
echo &amp;quot;LoadModule wsgi&#92;_module /usr/lib/apache2/modules/mod&#92;_wsgi.so&amp;quot; &#92;&amp;gt; /etc/apache2/mods&#92;-available/wsgi.load
a2enmod wsgi
a2dissite default
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;install-and-configure-mysql&quot; tabindex=&quot;-1&quot;&gt;Install and configure MySQL &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/django-deployment-installation-to-ubuntu-12-dot-04-server/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here we will install MySQL and create database, database user and give privileges for that user to the database. Be sure to modify DATABASENAME with the database name of your choice, DATABASEUSER with the database username of your choice and of course PASSWORD with the password for that database user.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt&#92;-get &#92;-y install mysql&#92;-server mysql&#92;-client
echo &amp;quot;CREATE DATABASE DATABASENAME;&amp;quot; | mysql &#92;-u root &#92;-p
echo &amp;quot;CREATE USER &#39;DATABASEUSER&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;PASSWORD&#39;;&amp;quot; | mysql &#92;-u root &#92;-p
echo &amp;quot;GRANT ALL PRIVILEGES ON DATABASENAME.&#92;* TO &#39;DATABASEUSER&#39;@&#39;localhost&#39;;&amp;quot; | mysql &#92;-u root &#92;-p
echo &amp;quot;FLUSH PRIVILEGES;&amp;quot; | mysql &#92;-u root &#92;-p
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;install-python-environment-and-django&quot; tabindex=&quot;-1&quot;&gt;Install Python environment and Django &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/django-deployment-installation-to-ubuntu-12-dot-04-server/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;First we create couple of folders for Django and then we will create virtual Python environment with VirtualEnv. Finally we get Django from PIP.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /srv/
mkdir &#92;-p my&#92;_project/app my&#92;_project/app/conf/apache
mkdir &#92;-p my&#92;_project/logs my&#92;_project/run/eggs
virtualenv my&#92;_project/venv
/srv/my&#92;_project/venv/bin/pip install django
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;start-django-project&quot; tabindex=&quot;-1&quot;&gt;Start Django project &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/django-deployment-installation-to-ubuntu-12-dot-04-server/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Next we’ll start an example Django project. Basically Django is now fully installed but we have to start some project to show all of the complicated steps of deployment. Follow the commands strictly so you will end up in the right directories.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pushd my&#92;_project/app/
/srv/my&#92;_project/venv/bin/python /srv/my&#92;_project/venv/bin/django&#92;-admin.py startproject webapp
popd
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;mod-wsgi-configuration-file&quot; tabindex=&quot;-1&quot;&gt;mod_WSGI Configuration File &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/django-deployment-installation-to-ubuntu-12-dot-04-server/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We need to make a configuration file for mod_WSGI which will be used by Apache2. First create some folders for Django and move into configuration folder.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir &#92;-p my&#92;_project/app/webapp/site&#92;_media
mkdir &#92;-p my&#92;_project/app/templates
cd my&#92;_project/app/conf/apache/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Open nano to create a configuration file&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nano django.wsgi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Paste the following code into the editor and save it.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import os
import sys
root&#92;_path &#92;= os.path.abspath(os.path.join(os.path.dirname(&#92;_&#92;_file&#92;_&#92;_), &#39;..&#39;, &#39;..&#39;, &#39;..&#39;))
sys.path.insert(0, os.path.abspath(os.path.join(root&#92;_path, &#39;venv/lib/python2.7/site-packages/&#39;)))
sys.path.insert(0, os.path.abspath(os.path.join(root&#92;_path, &#39;app&#39;)))
sys.path.insert(0, os.path.abspath(os.path.join(root&#92;_path, &#39;app&#39;, &#39;webapp&#39;)))
os.environ&#92;[&#39;DJANGO&#92;_SETTINGS&#92;_MODULE&#39;&#92;] &#92;= &#39;webapp.settings&#39;
import django.core.handlers.wsgi
application &#92;= django.core.handlers.wsgi.WSGIHandler()
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;create-system-user&quot; tabindex=&quot;-1&quot;&gt;Create system user &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/django-deployment-installation-to-ubuntu-12-dot-04-server/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now we will create a system to run Apaches’ mod_WSGI process. Make sure to edit USERNAME. Last command will set a shell to that user.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;useradd &#92;--system &#92;--no&#92;-create&#92;-home &#92;--home&#92;-dir /srv/my&#92;_project/ &#92;--user&#92;-group USERNAME
chsh &#92;-s /bin/bash USERNAME
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;apache-site-configuration&quot; tabindex=&quot;-1&quot;&gt;Apache Site Configuration &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/django-deployment-installation-to-ubuntu-12-dot-04-server/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I have created an example site configuration which works on normal network environments. Open nano to the site file with the following command. Remember to edit DOMAIN with your own domain name.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nano /etc/apache2/sites&#92;-available/DOMAIN
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Paste the following to the editor and edit DOMAIN with your own domain name and USER with the username we just created a while ago.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ServerAdmin root@DOMAIN
ServerName DOMAIN
Alias /site&#92;_media/ /srv/my&#92;_project/app/webapp/site&#92;_media/
Alias /static/ /srv/my&#92;_project/venv/lib/python2.7/site&#92;-packages/django/contrib/admin/static/
Alias /robots.txt /srv/my&#92;_project/app/webapp/site&#92;_media/robots.txt
Alias /favicon.ico /srv/my&#92;_project/app/webapp/site&#92;_media/favicon.ico
CustomLog &amp;quot;|/usr/sbin/rotatelogs /srv/my&#92;_project/logs/access.log.%Y%m%d-%H%M%S 5M&amp;quot; combined
ErrorLog &amp;quot;|/usr/sbin/rotatelogs /srv/my&#92;_project/logs/error.log.%Y%m%d-%H%M%S 5M&amp;quot;
LogLevel warn
WSGIDaemonProcess DOMAIN user&#92;=USER group&#92;=USER processes&#92;=1 threads&#92;=15 maximum&#92;-requests&#92;=10000 python&#92;-path&#92;=/srv/my&#92;_project/venv/lib/python2.7/site&#92;-packages python&#92;-eggs&#92;=/srv/my&#92;_project/run/eggs
WSGIProcessGroup DOMAIN
WSGIScriptAlias / /srv/my&#92;_project/app/conf/apache/django.wsgi
Order deny,allow
Allow from all
Options &#92;-Indexes FollowSymLinks
Order deny,allow
Allow from all
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we just need to activate that configuration to Apache. Edit DOMAIN again to your own.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a2ensite DOMAIN
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;mysql-dependency-to-python&quot; tabindex=&quot;-1&quot;&gt;MySQL dependency to Python &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/django-deployment-installation-to-ubuntu-12-dot-04-server/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Next we need to install MySQL-module for our Python environment&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt&#92;-get build&#92;-dep python&#92;-mysqldb
/srv/my&#92;_project/venv/bin/pip install MySQL&#92;-python
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;configuration-of-django&quot; tabindex=&quot;-1&quot;&gt;Configuration of Django &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/django-deployment-installation-to-ubuntu-12-dot-04-server/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Move to project folder and edit settings.py file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ../../
cd webapp/webapp/
nano settings.py
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There you need to edit your own specific MySQL details.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;DATABASES &#92;= {
  &#39;default&#39;: {
    &#39;ENGINE&#39;: &#39;django.db.backends.mysql&#39;,
    &#39;NAME&#39;: &#39;DATABASENAME&#39;,
    &#39;USER&#39;: &#39;DATABASEUSER&#39;,
    &#39;PASSWORD&#39;: &#39;DATABASEPASSWORD&#39;,
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Also add these lines to the settings file &lt;code&gt;MEDIA_ROOT = &#39;/srv/my_project/app/webapp/site_media/&#39;&lt;/code&gt; and &lt;code&gt;TEMPLATE_DIRS = &#39;/srv/my_project/app/templates/&#39;,&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;set-permissions-and-restart-apache&quot; tabindex=&quot;-1&quot;&gt;Set permissions and restart Apache &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/django-deployment-installation-to-ubuntu-12-dot-04-server/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now we have to set permissions for the user we made while ago. Edit USERNAME to your own.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;chown &#92;-R USERNAME:USERNAME /srv/my&#92;_project/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We have done everything to deploy Django so, all we need to do in order to get Django working is to restart Apache webserver.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service apache2 restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You should see something like this on your domain website.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/MKMMmLoIVy-531.avif 531w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/MKMMmLoIVy-531.webp 531w&quot;&gt;&lt;img alt=&quot;Hello World Django&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/MKMMmLoIVy-531.jpeg&quot; width=&quot;531&quot; height=&quot;198&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Now you have completely installed Django framework on a working Ubuntu server installation. Deployment is done to the part where we need here an actual website.&lt;/p&gt;
&lt;p&gt;I hope this tutorial has helped and please leave a comment or contact me from the about page, if you have any questions.&lt;/p&gt;
&lt;h2 id=&quot;django-apps-and-actual-website&quot; tabindex=&quot;-1&quot;&gt;Django apps and actual website &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/django-deployment-installation-to-ubuntu-12-dot-04-server/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you are new to Django and want to build fully functional website. I suggest you start from the &lt;a href=&quot;https://docs.djangoproject.com/en/1.6/intro/tutorial01/&quot;&gt;official tutorial&lt;/a&gt; which I think is one the best learning tutorials around web frameworks.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Developing for Android: PhoneGap versus Native</title>
		<link href="https://www.lennu.net/2015/developing-for-android-phonegap-versus-native/"/>
		<updated>2015-01-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/developing-for-android-phonegap-versus-native/</id>
		<content type="html">&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/LnKx_f2kcQ-300.avif 300w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/LnKx_f2kcQ-300.webp 300w&quot;&gt;&lt;img alt=&quot;PhoneGap&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/LnKx_f2kcQ-300.png&quot; width=&quot;300&quot; height=&quot;300&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Android is a mobile operating system developed by Google, which originally was used mostly with mobile phones, but it has been developed afterwards to support also tablets. Application development to Android can be made in two different ways. The first and the most used way of these two is to produce applications with native development style, where the application’s source code is written in operating system’s default programming languages and style. The second approach is to use application development framework, where the application’s source code is written by the rules and programming languages needed for the application development framework.&lt;/p&gt;
&lt;p&gt;At the moment every popular mobile operating system uses different native development style, and if a developer wants to develop an applications for several different mobile operating system, he or she has to make the programming for each and every different mobile operating system he or she wishes the developed application would work on. PhoneGap which is made and marketed by Adobe is the most popular application development framework, and it is run by open source project Apache Cordova in its core, which gives developers different kind of approach to mobile application development. The reasons behind PhoneGap have been to bring programming style and languages of web development to the toolkit of every popular mobile operating system, and with this make it possible to use these same techniques on mobile application development across all these popular mobile operating systems. PhoneGap gives developers a chance to work on one source code and copy that to all mobile operating systems supported by the application development framework.&lt;/p&gt;
&lt;p&gt;When developing to Android, the basic structure of source code’s directories is always the same, and even if application development frameworks were used, there are certain Android specific configuration files that are always necessary to be included in the source code. If there is application development framework used in the development, there has to be some referral in these configuration files which makes it possible to use these application development frameworks.&lt;/p&gt;
&lt;p&gt;When developing to Android on native way the main programming language is Java and when programming the applications there are usually used some of the Android’s own Java libraries. With the help of the libraries developer can make a connection to the properties of the device which runs the operating system, but otherwise programming usually follows the basic structures of Java. Google has made a guide on the development of Android native applications, where it suggests to use so called activities when programming applications and follow the style of the guide when doing the applcation development. Native applications can still be made in a way the developer wants and that is the strength of native application development, because every way is possible. There is even chance to write under the native defined programming layer, when there is chance to use C-based languages to improve the performance of the applications.&lt;/p&gt;
&lt;p&gt;If PhoneGap is used, the application development framework has to be installed in the basic structure of Android application’s source code, and it has to be referred in the configuration files which will get it started at the beginning of the application’s start process. On the installation process of PhoneGap there will be made an own development folder, where the developer writes the source code of the application and from where the application is in the end ran. The programming languages used in PhoneGap are standardized in the web development field, which includes HTML, CSS and JavaScript. Usually Android applications made with PhoneGap use HTML and CSS to create the base and user interface for the application and the behaviour and interactivity with JavaScript. This is the basic structure of development with PhoneGap and it cannot be escaped, and shouldn’t have to, and it is the biggest difference between native development and PhoneGap. With PhoneGap there is a JavaScript library which enables the use of properties in the device which is running the mobile operating system, so that you can bring for example GPS-data from the device to your application. Native source code can be executed on the side of PhoneGap but it is not very supported since it breaks the base idea behind PhoneGap which is to make it possible to run the source code on different platforms. After applying PhoneGap to development process the development methods can be used exactly the same way as making a website but for the sake of interactivity with the user it is recommended to use JavaScript to give the application some actions and interactivity.&lt;/p&gt;
&lt;p&gt;There are some great differences between PhoneGap and native development and they both have a place in the development of applications for Android operating system. Native development is recommended to use in applications in favor for better user experience and for greater performance. PhoneGap mobile application framework gives the opportunity for simple approach to producing mobile applications with programming languages easy and well-known and the compatability with the most used mobile operating systems with once written source code. Native mobile applications can be described as more advanced because they are usually used to produce more difficult applications like Angry Birds, but native way has decreased in popularity after the launch of application development frameworks like PhoneGap. PhoneGap and other application development frameworks are developing all the time and with fast pace, and at the moment they win native development easily in the ease and speed of development.&lt;/p&gt;
&lt;p&gt;More information about PhoneGap and getting started guide can be found at their website: &lt;a href=&quot;http://www.phonegap.com/&quot;&gt;www.phonegap.com&lt;/a&gt;.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Data Encryption Standard Made With Key Sizes of 14 Bits</title>
		<link href="https://www.lennu.net/2015/data-encryption-standard-made-with-key-sizes-of-14-bits/"/>
		<updated>2015-01-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/data-encryption-standard-made-with-key-sizes-of-14-bits/</id>
		<content type="html">&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/3iNENlYjMb-360.avif 360w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/3iNENlYjMb-360.webp 360w&quot;&gt;&lt;img alt=&quot;Cipher&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/3iNENlYjMb-360.png&quot; width=&quot;360&quot; height=&quot;156&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Today I would like to share you the power of cryptography.&lt;/p&gt;
&lt;p&gt;I made this software 2011 in Eindhoven, Netherlands (country of cryptography) where I was having my exchange studies at the time.&lt;/p&gt;
&lt;p&gt;The software is about the Data Encryption Standard or DES, however you like to call it.&lt;/p&gt;
&lt;h2 id=&quot;des-with-14-bits&quot; tabindex=&quot;-1&quot;&gt;DES With 14 Bits &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/data-encryption-standard-made-with-key-sizes-of-14-bits/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Data Encryption Standard is the old queen of cryptography, which eventually got caught for being too easy to solve. There is a great article in &lt;a href=&quot;https://en.wikipedia.org/wiki/Data_Encryption_Standard&quot;&gt;Wikipedia&lt;/a&gt; about the topic and how it has influenced modern cryptography.&lt;/p&gt;
&lt;p&gt;What I did was kinda experiment if I could code this thing together with some tweaking to the original Standard. DES was created to encrypt with key sizes of 56 bits and block sizes of 64 bits doing 16 rounds of crypting in total.&lt;/p&gt;
&lt;p&gt;To learn the standard and the basics of cryptography, I chose to do it with key sizes of 14 bits and block sizes of 16 bits doing 2 rounds of crypting in total. I actually succeeded on this and did a little software with Python to prove it.&lt;/p&gt;
&lt;h2 id=&quot;mathematics&quot; tabindex=&quot;-1&quot;&gt;Mathematics &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/data-encryption-standard-made-with-key-sizes-of-14-bits/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here are the mathematics from my version of the Data Encryption Standard.&lt;/p&gt;
&lt;h3 id=&quot;permutations&quot; tabindex=&quot;-1&quot;&gt;Permutations &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/data-encryption-standard-made-with-key-sizes-of-14-bits/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;PC1 = [12,  5, 14,  1, 10,  2, 6,
	9, 15,  4, 13,  7, 11, 3]
 
PC2 = [  6, 11, 4,  8, 13, 3,
	12,  5, 1, 10,  2, 9]
 
IP = [   2, 14,  6, 10,
	12,  8, 16,  4,
	 5, 13,  3,  9,
	11,  1, 15,  7]
 
IP-1 = [ 14, 1, 11, 8,
	 9, 3, 16, 6,
	12, 4, 13, 5,
	10, 2, 15, 7]
 
E = [   8, 1, 2, 3, 4, 5,
	4, 5, 6, 7, 8, 1]
 
S = [
	[ 4, 11,  2, 14, 15, 0,  8, 13,  3, 12, 9,  7,  5, 10, 6,  1,
	 13,  0, 11,  7,  4, 9,  1, 10, 14,  3, 5, 12,  2, 15, 8,  6,
	  1,  4, 11, 13, 12, 3,  7, 14, 10, 15, 6,  8,  0,  5, 9,  2,
	  6, 11, 13,  8,  1, 4, 10,  7,  9,  5, 0, 15, 14,  2, 3, 12],
 
	[13,  2,  8, 4,  6, 15, 11,  1, 10,  9,  3, 14,  5,  0, 12,  7,
	  1, 15, 13, 8, 10,  3,  7,  4, 12,  5,  6, 11,  0, 14,  9,  2,
	  7, 11,  4, 1,  9, 12, 14,  2,  0,  6, 10, 13, 15,  3,  5,  8,
	  2,  1, 14, 7,  4, 10,  8, 13, 15, 12,  9,  0,  3,  5,  6, 11]
]
 
P = [   6, 4, 7, 3,
	5, 1, 8, 2]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;calculations&quot; tabindex=&quot;-1&quot;&gt;Calculations &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/data-encryption-standard-made-with-key-sizes-of-14-bits/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We choose a sub key K’ of 12 bits&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;000110 110000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Calculations of F(R, K’) as R = 1011 0110&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;E(R) = 010110 101101
K (+) E(R) = 010000 011101
S7(B1)S8(B2) = 0011 1001
F(R, K&#39;) = 0101 1010
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We choose a key K of 16 bits&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;0100 0110 0100 1001
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And calculate the two keys K1 and K2&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;K+ = 0000 1110 0011 00
C0 = 0000111
D0 = 0001100
C1 = 0111000
D1 = 1100000
C2 = 1000011
D2 = 0000110
K1 = 001101000011
K2 = 100010101000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We choose an input I of 15 bits (e.g. the ASCI-coding of the characters ‘v’ and ‘b’)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;0111 0110 0110 0001
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And encrypt I using the DESHI-algorithm where we use the given IP and the calculated K1, K2 and IP-1.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;IP = 1011 0001 0010 1011
L0 = 1011 0001
R0 = 0010 1011
R1 = L0 (+) F(R0, K1)
E(R0) = 100101 010110
K1 = 001101000011
K1 (+) E(R0) = 101000 010101
S7(B1) S8(B2) = 1100 0110
F(R, K’) = 1010 0101
R1 = L0 (+) F(R0, K1) = 0001 0100
L1 = R0 = 0010 1011
R2 = L0 (+) F(R1, K2)
E(R1) = 000010 101000
K2 = 1000010 101000
K2 (+) E(R1) = 100000 000000
S7(B1) S8(B2) = 0001 1101
F(R, K’) = 1100 1010
R2 = L1 (+) F(R1, K2) = 1110 0001
L2 = R0 = 0001 0100
R2L2 = 1110 0001 0001 0100
 
IP-1 = 1101 0100 1000 0100
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;software&quot; tabindex=&quot;-1&quot;&gt;Software &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/data-encryption-standard-made-with-key-sizes-of-14-bits/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Program is made with Python version 3.2. The program can probably be run if the system has 3.0 or newer version of Python, but only tested with 3.2. The latest version can be downloaded from: &lt;a href=&quot;https://www.python.org/download/&quot;&gt;http://www.python.org/download/&lt;/a&gt;. The program can be used in Linux or Windows as long as there is Python installed into the system.&lt;/p&gt;
&lt;p&gt;Here are some screenshots with the same examples as used in the earlier handwritten DES encryption.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/o3LaTsIXpO-360.avif 360w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/o3LaTsIXpO-360.webp 360w&quot;&gt;&lt;img alt=&quot;Key and Message&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/o3LaTsIXpO-360.png&quot; width=&quot;360&quot; height=&quot;156&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;After clicking the encrypt button.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/3iNENlYjMb-360.avif 360w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/3iNENlYjMb-360.webp 360w&quot;&gt;&lt;img alt=&quot;Cipher&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/3iNENlYjMb-360.png&quot; width=&quot;360&quot; height=&quot;156&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;After clicking the decrypt button&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/gXBQSfOa8n-360.avif 360w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/gXBQSfOa8n-360.webp 360w&quot;&gt;&lt;img alt=&quot;Decrypted&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/gXBQSfOa8n-360.png&quot; width=&quot;360&quot; height=&quot;156&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;usage&quot; tabindex=&quot;-1&quot;&gt;Usage &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/data-encryption-standard-made-with-key-sizes-of-14-bits/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This was just an experiment if I could learn DES and some cryptography, this software should not be used in real life situations. The method I used actually made DES weaker against attacks because I did it with less bits than the usual version. I hope maybe someone may find this information useful and maybe learn some cryptography. In my opinion it’s a really complex world and so much different from traditional software development, because of the mathematics that are included.&lt;/p&gt;
&lt;h3 id=&quot;source-code&quot; tabindex=&quot;-1&quot;&gt;Source Code &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/data-encryption-standard-made-with-key-sizes-of-14-bits/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here is the source code for this software. To run the software, just copy/paste the code into .py file and run it.&lt;/p&gt;
&lt;pre class=&quot;language-python&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# GNU GPL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token comment&quot;&gt;# des.py - Python version used: 3.2&lt;/span&gt;&lt;br&gt; &lt;br&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; tkinter &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# UI tool import&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; tkinter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;messagebox &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; showerror	&lt;span class=&quot;token comment&quot;&gt;# copies showerror&lt;/span&gt;&lt;br&gt;fieldnames &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;key&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;message&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;cipher&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;binary&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt; &lt;br&gt;pc1 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt; &lt;br&gt;leftshifts &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt; &lt;br&gt;pc2 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt; &lt;br&gt;ip &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;   &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;	 &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt; &lt;br&gt;e &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;   &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt;s &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;	 &lt;span class=&quot;token number&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;	  &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;	  &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt; &lt;br&gt;	&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;	  &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;	  &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;	  &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt;p &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;   &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt; &lt;br&gt;ip1 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;	 &lt;span class=&quot;token number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt; &lt;br&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;makeWidgets&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# makeWidgets function&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token keyword&quot;&gt;global&lt;/span&gt; entries&lt;br&gt;	window &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Tk&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;	window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;DES&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;	form &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Frame&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;window&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;	form&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pack&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;	entries &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ix&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; label&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;fieldnames&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# creation of labels and entries into two columns&lt;/span&gt;&lt;br&gt;		lab &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Label&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;form&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; text&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;label&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;		ent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Entry&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;form&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; width&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;		lab&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;grid&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;row&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;ix&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; column&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;		ent&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;grid&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;row&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;ix&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; column&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;		entries&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;label&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ent&lt;br&gt;	Button&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;window&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; text&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Encrypt&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; command&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;en&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pack&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;side&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;TOP&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# encrypt button, click takes to function en()&lt;/span&gt;&lt;br&gt;	Button&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;window&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; text&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Decrypt&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; command&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;de&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pack&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;side&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;TOP&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# decrypt button, click takes to function de()&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; window&lt;br&gt; &lt;br&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;stringToBits&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# string to bits function&lt;/span&gt;&lt;br&gt;	data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;c&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; c &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# creates unicodes to list&lt;/span&gt;&lt;br&gt;	result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; ch &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br&gt;		i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# bit selection&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; ch &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br&gt;				result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br&gt;				result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;			i &lt;span class=&quot;token operator&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; result	&lt;span class=&quot;token comment&quot;&gt;# returns a list of created bits&lt;/span&gt;&lt;br&gt; &lt;br&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;bitsToString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;bits&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# bits to string function&lt;/span&gt;&lt;br&gt;	strinG &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt;	position &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;br&gt;	a &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; position &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;bits&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br&gt;		a &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; bits&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;position&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;position &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;position &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br&gt;			strinG&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;a&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;			a &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;br&gt;		position &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;join&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;a&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; a &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; strinG&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# returns a string of characters made from bytes&lt;/span&gt;&lt;br&gt; &lt;br&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;permutate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;table&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; block&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# permutation function&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;lambda&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; block&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; table&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# returns the permutated list&lt;/span&gt;&lt;br&gt; &lt;br&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;createSubkeys&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pc1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pc2&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; leftshifts&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# subkeys creation&lt;/span&gt;&lt;br&gt;	key &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; permutate&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;pc1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; stringToBits&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# pc1 permutation&lt;/span&gt;&lt;br&gt;	i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;br&gt;	L &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; key&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# slices the permutation into LEFT and RIGHT&lt;/span&gt;&lt;br&gt;	R &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; key&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt;	subkeys &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br&gt;		j &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; j &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; leftshifts&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;# leftshifts the bits from beginning to end&lt;/span&gt;&lt;br&gt;			L&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;L&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token keyword&quot;&gt;del&lt;/span&gt; L&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt;			R&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;R&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token keyword&quot;&gt;del&lt;/span&gt; R&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt;			j &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;br&gt;		subkeys&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;permutate&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;pc2&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; L &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; R&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# pc2 permutation&lt;/span&gt;&lt;br&gt;		i &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; subkeys&lt;br&gt; &lt;br&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;des&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ip&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; s&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; p&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ip1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; subkeys&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; crypt&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# des function&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;not&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br&gt;		showerror&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;title&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Error&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; message&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;The message or encrypted data must be a multiple of 16 bits!&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;br&gt;	a &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;br&gt;	result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; a &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br&gt;		cryptob &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; stringToBits&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;a&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;a&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# gets part of the string and turns it to bits&lt;/span&gt;&lt;br&gt;		ipresult &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; permutate&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ip&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; cryptob&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# ip permutation&lt;/span&gt;&lt;br&gt;		L &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ipresult&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# slices the variable into LEFT and RIGHT&lt;/span&gt;&lt;br&gt;		R &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ipresult&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; crypt &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;en&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# sets the variables for the encryption or decryption&lt;/span&gt;&lt;br&gt;			it &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;br&gt;			itadd &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; crypt &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;de&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br&gt;			it &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;br&gt;			itadd &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;br&gt;		i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# encryption&lt;/span&gt;&lt;br&gt;			R2 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; R&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt;			R &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; permutate&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; R&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# E permutation&lt;/span&gt;&lt;br&gt;			R &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;lambda&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;^&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; R&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; subkeys&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;it&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;# XOR the permutation&lt;/span&gt;&lt;br&gt;			B &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;R&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; R&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# slices the permutation into list B[0] and B[1]&lt;/span&gt;&lt;br&gt;			k &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;br&gt;			bg &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;br&gt;			position &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; k &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br&gt;				f &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;B&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;k&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; B&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;k&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# for clarification &amp;lt;&amp;lt; means left shifting and &gt;&gt; right shifting&lt;/span&gt;&lt;br&gt;				g &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;B&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;k&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;B&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;k&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;B&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;k&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; B&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;k&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt;				h &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; s&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;k&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;f &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; g&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; 				bg&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;position&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;h &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;br&gt;				bg&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;position &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;h &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;br&gt;				bg&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;position &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;h &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;br&gt;				bg&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;position &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; h &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;br&gt;				position &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;br&gt;				k &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;br&gt;			R &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; permutate&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;p&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; bg&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# P permutation&lt;/span&gt;&lt;br&gt;			R &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;lambda&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;^&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; R&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; L&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# XOR the permutation&lt;/span&gt;&lt;br&gt;			L &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; R2&lt;br&gt;			i &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;br&gt;			it &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; itadd&lt;br&gt;		ip1result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; permutate&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ip1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; R &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; L&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# ip-1 permutation&lt;/span&gt;&lt;br&gt;		result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;bitsToString&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ip1result&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# adds the crypted part as string to result&lt;/span&gt;&lt;br&gt;		a &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;join&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# returns result list as one joined string&lt;/span&gt;&lt;br&gt; &lt;br&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;en&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;#encrypt click&lt;/span&gt;&lt;br&gt;	crypt_click&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;en&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt; &lt;br&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;de&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 	&lt;span class=&quot;token comment&quot;&gt;#decrypt click&lt;/span&gt;&lt;br&gt;	crypt_click&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;de&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt; &lt;br&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;crypt_click&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;crypttype&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;#process of encryption or decryption depending of the click&lt;/span&gt;&lt;br&gt;	key &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; entries&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;key&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;get&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# gets the key from the UI&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;not&lt;/span&gt; key&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br&gt;		showerror&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;title&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Error&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; message&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;You have to enter a key!&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br&gt;			showerror&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;title&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Error&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; message&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;The key must be 16 bits!&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br&gt;			subkeys &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; createSubkeys&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pc1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pc2&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; leftshifts&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# creation of subkeys in createSubkeys() functions&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; crypttype &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;en&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# sets the variables to message or to cipher depending on what the user clicked&lt;/span&gt;&lt;br&gt;				textfrom &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;message&#39;&lt;/span&gt;&lt;br&gt;				textto &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;cipher&#39;&lt;/span&gt;&lt;br&gt;				entries&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;cipher&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;delete&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; END&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;			&lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br&gt;				textfrom &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;cipher&#39;&lt;/span&gt;&lt;br&gt;				textto &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;message&#39;&lt;/span&gt;	&lt;br&gt;			messageOrCipher &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; entries&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;textfrom&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;get&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# gets message or cipher&lt;/span&gt;&lt;br&gt;			result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; des&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;messageOrCipher&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ip&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; s&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; p&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ip1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; subkeys&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; crypttype&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# actual result from the des() function&lt;/span&gt;&lt;br&gt;			binary &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;join&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; stringToBits&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# makes the binary of the result&lt;/span&gt;&lt;br&gt;			entries&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;textfrom&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;delete&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; END&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# UI entry delete&lt;/span&gt;&lt;br&gt;			entries&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;textto&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;insert&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# UI entry insert&lt;/span&gt;&lt;br&gt;			entries&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;binary&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;delete&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; END&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;			entries&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;binary&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;insert&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; binary&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br&gt;			&lt;br&gt; &lt;br&gt;window &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; makeWidgets&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# creates the UI&lt;/span&gt;&lt;br&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mainloop&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;token comment&quot;&gt;# mainloop of the UI to get actions&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Automate Your Transmission Torrent Clients with Puppet</title>
		<link href="https://www.lennu.net/2015/automate-your-transmission-torrent-clients-with-puppet%20copy/automate-your-transmission-torrent-clients-with-puppet/"/>
		<updated>2015-01-15T00:00:00Z</updated>
		<id>https://www.lennu.net/2015/automate-your-transmission-torrent-clients-with-puppet%20copy/automate-your-transmission-torrent-clients-with-puppet/</id>
		<content type="html">&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/2Ubq826ViN-300.avif 300w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/2Ubq826ViN-300.webp 300w&quot;&gt;&lt;img alt=&quot;Puppet Logo&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/2Ubq826ViN-300.png&quot; width=&quot;300&quot; height=&quot;269&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Last week I reviewed command-line torrent clients and found that Transmission was the most suitable for my needs.&lt;/p&gt;
&lt;p&gt;This week I have made Puppet module for automating the distribution of &lt;code&gt;.torrent&lt;/code&gt; files with the usage of Transmission-Daemon.&lt;/p&gt;
&lt;p&gt;If you have multiple Torrent Clients running the same Torrents then here is an example how you could control all of them.&lt;/p&gt;
&lt;p&gt;The module installs &lt;code&gt;transmission-daemon&lt;/code&gt; and sets the configuration for it. It also makes a few directories for torrents and at the end sets &lt;code&gt;.torrent&lt;/code&gt; files to a folder which the daemon is looking.&lt;/p&gt;
&lt;p&gt;Here is more explained list in order what the module does on the client.&lt;/p&gt;
&lt;p&gt;1. Installs &lt;code&gt;transmission-daemon&lt;/code&gt; from package manager&lt;br&gt;
2. Creates folder &lt;code&gt;/srv/torrents&lt;/code&gt;&lt;br&gt;
3. Creates folder &lt;code&gt;/srv/torrents/torrent-files&lt;/code&gt;&lt;br&gt;
4. Creates folder &lt;code&gt;/srv/torrents/torrent-data&lt;/code&gt;&lt;br&gt;
5. Stops &lt;code&gt;transmission-daemon&lt;/code&gt; service (because transmission-daemon overwrites its configuration when stopped so we cannot apply changes to the configuration while the service is running)&lt;br&gt;
6. Replaces &lt;code&gt;/etc/transmission-daemon/settings.json&lt;/code&gt; with Modules own &lt;code&gt;settings.json&lt;/code&gt;&lt;br&gt;
7. Starts &lt;code&gt;transmission-daemon&lt;/code&gt; service with exec (this is the only way to change config of service which need to be stopped before changes, since Puppet can set service only to one state)&lt;br&gt;
8. Adds &lt;code&gt;.torrent&lt;/code&gt; files from Modules files to &lt;code&gt;/srv/torrents/torrent-files/&lt;/code&gt; directory&lt;br&gt;
9. &lt;code&gt;transmission-daemon&lt;/code&gt; automaticly adds files from &lt;code&gt;/srv/torrent/torrent-files/&lt;/code&gt; directory and starts downloading them&lt;/p&gt;
&lt;p&gt;Notices made by Puppet&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo puppet apply --modulepath puppet/modules/ -e &amp;quot;include torrent&amp;quot;
notice: /Stage[main]/Torrent/Package[transmission-daemon]/ensure: ensure changed &#39;purged&#39; to &#39;present&#39;
notice: /Stage[main]/Torrent/File[/srv/torrents/]/ensure: created
notice: /Stage[main]/Torrent/File[/srv/torrents/torrent-files/]/ensure: created
notice: /Stage[main]/Torrent/File[/srv/torrents/torrent-data/]/ensure: created
notice: /Stage[main]/Torrent/Exec[transmission-daemon stop]/returns: executed successfully
notice: /Stage[main]/Torrent/File[/etc/transmission-daemon/settings.json]/content: content changed &#39;{md5}41b647ab1260f894894d891c76b575ad&#39; to &#39;{md5}814b971ecedbc6a3b0e5e587f113444c&#39;
notice: /Stage[main]/Torrent/Service[transmission-daemon]/ensure: ensure changed &#39;stopped&#39; to &#39;running&#39;
notice: /Stage[main]/Torrent/Service[transmission-daemon]: Triggered &#39;refresh&#39; from 1 events
notice: /Stage[main]/Torrent/Torrent::Add_torrents[ubuntu-12.04.1-alternate-i386.iso.torrent]/File[ubuntu-12.04.1-alternate-i386.iso.torrent]/ensure: defined content as &#39;{md5}10977e796c856979ef0ff90d6fc2e501&#39;
notice: /Stage[main]/Torrent/Torrent::Add_torrents[ubuntu-12.04.1-server-amd64.iso.torrent]/File[ubuntu-12.04.1-server-amd64.iso.torrent]/ensure: defined content as &#39;{md5}cd246a335cec7bed733ec04cb0beeb66&#39;
notice: /Stage[main]/Torrent/Torrent::Add_torrents[ubuntu-12.04.1-desktop-amd64.iso.torrent]/File[ubuntu-12.04.1-desktop-amd64.iso.torrent]/ensure: defined content as &#39;{md5}9b513db50f26298c9ca68bbcff6c4d64&#39;
notice: /Stage[main]/Torrent/Torrent::Add_torrents[ubuntu-12.04.1-alternate-amd64.iso.torrent]/File[ubuntu-12.04.1-alternate-amd64.iso.torrent]/ensure: defined content as &#39;{md5}2148e763c64bf17bc1ce03445de22368&#39;
notice: /Stage[main]/Torrent/Torrent::Add_torrents[ubuntu-12.04.1-server-i386.iso.torrent]/File[ubuntu-12.04.1-server-i386.iso.torrent]/ensure: defined content as &#39;{md5}b46f04dd899527dab942a811f2b54e34&#39;
notice: /Stage[main]/Torrent/Torrent::Add_torrents[ubuntu-12.04.1-desktop-i386.iso.torrent]/File[ubuntu-12.04.1-desktop-i386.iso.torrent]/ensure: defined content as &#39;{md5}ca496f27c3c273ac87b8f40d3e095b56&#39;
notice: Finished catalog run in 7.39 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And transmission-remote at &lt;code&gt;http://127.0.0.1:9091/transmission/web/&lt;/code&gt; after running the module.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://www.lennu.net/img/25f8WtWOIx-664.avif 664w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://www.lennu.net/img/25f8WtWOIx-664.webp 664w&quot;&gt;&lt;img alt=&quot;Transmission Remote&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://www.lennu.net/img/25f8WtWOIx-664.png&quot; width=&quot;664&quot; height=&quot;636&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h2 id=&quot;source&quot; tabindex=&quot;-1&quot;&gt;Source &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/automate-your-transmission-torrent-clients-with-puppet%20copy/automate-your-transmission-torrent-clients-with-puppet/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Directory tree&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;puppet/modules/torrent/
├── files
│   ├── settings.json
│   ├── ubuntu-12.04.1-alternate-amd64.iso.torrent
│   ├── ubuntu-12.04.1-alternate-i386.iso.torrent
│   ├── ubuntu-12.04.1-desktop-amd64.iso.torrent
│   ├── ubuntu-12.04.1-desktop-i386.iso.torrent
│   ├── ubuntu-12.04.1-server-amd64.iso.torrent
│   └── ubuntu-12.04.1-server-i386.iso.torrent
└── manifests
    └── init.pp
 
2 directories, 8 files
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;settings-json&quot; tabindex=&quot;-1&quot;&gt;settings.json &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/automate-your-transmission-torrent-clients-with-puppet%20copy/automate-your-transmission-torrent-clients-with-puppet/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In the &lt;code&gt;files&lt;/code&gt; directory there is the settings.json which is used to replace &lt;code&gt;/etc/transmission-daemon/settings.json&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here is the source: (From original I have changed the “download-dir”, “rpc-authetication-required”, and added “watch-dir” and “watch-dir-enabled”, everything else have default values)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
    &amp;quot;alt-speed-down&amp;quot;: 50, 
    &amp;quot;alt-speed-enabled&amp;quot;: false, 
    &amp;quot;alt-speed-time-begin&amp;quot;: 540, 
    &amp;quot;alt-speed-time-day&amp;quot;: 127, 
    &amp;quot;alt-speed-time-enabled&amp;quot;: false, 
    &amp;quot;alt-speed-time-end&amp;quot;: 1020, 
    &amp;quot;alt-speed-up&amp;quot;: 50, 
    &amp;quot;bind-address-ipv4&amp;quot;: &amp;quot;0.0.0.0&amp;quot;, 
    &amp;quot;bind-address-ipv6&amp;quot;: &amp;quot;::&amp;quot;, 
    &amp;quot;blocklist-enabled&amp;quot;: false, 
    &amp;quot;blocklist-url&amp;quot;: &amp;quot;http://www.example.com/blocklist&amp;quot;, 
    &amp;quot;cache-size-mb&amp;quot;: 4, 
    &amp;quot;dht-enabled&amp;quot;: true, 
    &amp;quot;download-dir&amp;quot;: &amp;quot;/srv/torrents/torrent-data/&amp;quot;, 
    &amp;quot;download-limit&amp;quot;: 100, 
    &amp;quot;download-limit-enabled&amp;quot;: 0, 
    &amp;quot;download-queue-enabled&amp;quot;: true, 
    &amp;quot;download-queue-size&amp;quot;: 5, 
    &amp;quot;encryption&amp;quot;: 1, 
    &amp;quot;idle-seeding-limit&amp;quot;: 30, 
    &amp;quot;idle-seeding-limit-enabled&amp;quot;: false, 
    &amp;quot;incomplete-dir&amp;quot;: &amp;quot;/home/lennu/Downloads&amp;quot;, 
    &amp;quot;incomplete-dir-enabled&amp;quot;: false, 
    &amp;quot;lpd-enabled&amp;quot;: false, 
    &amp;quot;max-peers-global&amp;quot;: 200, 
    &amp;quot;message-level&amp;quot;: 2, 
    &amp;quot;peer-congestion-algorithm&amp;quot;: &amp;quot;&amp;quot;, 
    &amp;quot;peer-limit-global&amp;quot;: 240, 
    &amp;quot;peer-limit-per-torrent&amp;quot;: 60, 
    &amp;quot;peer-port&amp;quot;: 51413, 
    &amp;quot;peer-port-random-high&amp;quot;: 65535, 
    &amp;quot;peer-port-random-low&amp;quot;: 49152, 
    &amp;quot;peer-port-random-on-start&amp;quot;: false, 
    &amp;quot;peer-socket-tos&amp;quot;: &amp;quot;default&amp;quot;, 
    &amp;quot;pex-enabled&amp;quot;: true, 
    &amp;quot;port-forwarding-enabled&amp;quot;: false, 
    &amp;quot;preallocation&amp;quot;: 1, 
    &amp;quot;prefetch-enabled&amp;quot;: 1, 
    &amp;quot;queue-stalled-enabled&amp;quot;: true, 
    &amp;quot;queue-stalled-minutes&amp;quot;: 30, 
    &amp;quot;ratio-limit&amp;quot;: 2, 
    &amp;quot;ratio-limit-enabled&amp;quot;: false, 
    &amp;quot;rename-partial-files&amp;quot;: true, 
    &amp;quot;rpc-authentication-required&amp;quot;: false, 
    &amp;quot;rpc-bind-address&amp;quot;: &amp;quot;0.0.0.0&amp;quot;, 
    &amp;quot;rpc-enabled&amp;quot;: true, 
    &amp;quot;rpc-password&amp;quot;: &amp;quot;{9bf5446f00cbb1c8e940e7c526d49b0369167f85YOod54R6&amp;quot;, 
    &amp;quot;rpc-port&amp;quot;: 9091, 
    &amp;quot;rpc-url&amp;quot;: &amp;quot;/transmission/&amp;quot;, 
    &amp;quot;rpc-username&amp;quot;: &amp;quot;transmission&amp;quot;, 
    &amp;quot;rpc-whitelist&amp;quot;: &amp;quot;127.0.0.1&amp;quot;, 
    &amp;quot;rpc-whitelist-enabled&amp;quot;: true, 
    &amp;quot;scrape-paused-torrents-enabled&amp;quot;: true, 
    &amp;quot;script-torrent-done-enabled&amp;quot;: false, 
    &amp;quot;script-torrent-done-filename&amp;quot;: &amp;quot;&amp;quot;, 
    &amp;quot;seed-queue-enabled&amp;quot;: false, 
    &amp;quot;seed-queue-size&amp;quot;: 10, 
    &amp;quot;speed-limit-down&amp;quot;: 100, 
    &amp;quot;speed-limit-down-enabled&amp;quot;: false, 
    &amp;quot;speed-limit-up&amp;quot;: 100, 
    &amp;quot;speed-limit-up-enabled&amp;quot;: false, 
    &amp;quot;start-added-torrents&amp;quot;: true, 
    &amp;quot;trash-original-torrent-files&amp;quot;: false, 
    &amp;quot;umask&amp;quot;: 18, 
    &amp;quot;upload-limit&amp;quot;: 100, 
    &amp;quot;upload-limit-enabled&amp;quot;: 0, 
    &amp;quot;upload-slots-per-torrent&amp;quot;: 14, 
    &amp;quot;utp-enabled&amp;quot;: true,
    &amp;quot;watch-dir&amp;quot;: &amp;quot;/srv/torrents/torrent-files/&amp;quot;,
    &amp;quot;watch-dir-enabled&amp;quot;: true
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;torrent-files&quot; tabindex=&quot;-1&quot;&gt;.torrent files &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/automate-your-transmission-torrent-clients-with-puppet%20copy/automate-your-transmission-torrent-clients-with-puppet/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There is also a couple of &lt;code&gt;.torrent&lt;/code&gt; files which is to be sent to &lt;code&gt;/srv/torrents/torrent-files/&lt;/code&gt; from where &lt;code&gt;transmission-daemon&lt;/code&gt; will add them. I don’t include them here since you can use any &lt;code&gt;.torrent&lt;/code&gt; files to test this out.&lt;/p&gt;
&lt;h3 id=&quot;init-pp&quot; tabindex=&quot;-1&quot;&gt;init.pp &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/automate-your-transmission-torrent-clients-with-puppet%20copy/automate-your-transmission-torrent-clients-with-puppet/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In manifests there is the usual &lt;code&gt;init.pp&lt;/code&gt;. The function at the bottom is the place where we tell to Puppet which &lt;code&gt;.torrent&lt;/code&gt; files we want to distribute to the clients.&lt;/p&gt;
&lt;p&gt;Replace these Ubuntu related &lt;code&gt;.torrent&lt;/code&gt; files with your own which you also put into the files directory. So you will need to have the actual &lt;code&gt;.torrent&lt;/code&gt; files in files directory and also their filenames here in the source code.&lt;/p&gt;
&lt;p&gt;Source is pretty basic resource declaration if you have something to ask then drop a question into the comments.&lt;/p&gt;
&lt;p&gt;Here is the source:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class torrent {
	package {&#39;transmission-daemon&#39;:
		provider=&amp;gt;&#39;apt&#39;,
		ensure=&amp;gt;&#39;installed&#39;,
	}
 
	exec {&#39;transmission-daemon stop&#39;:
		path=&amp;gt;&#39;/etc/init.d/&#39;,
		notify=&amp;gt;Service[&#39;transmission-daemon&#39;],
	}
	
	service {&#39;transmission-daemon&#39;:
		ensure=&amp;gt;&#39;running&#39;,
		require=&amp;gt;Package[&#39;transmission-daemon&#39;],
	}
	
	file {&#39;/srv/torrents/&#39;:
		ensure=&amp;gt;&#39;directory&#39;,
		owner=&amp;gt;&#39;debian-transmission&#39;,
		group=&amp;gt;&#39;debian-transmission&#39;,
	}
 
	file {&#39;/srv/torrents/torrent-files/&#39;:
		ensure=&amp;gt;&#39;directory&#39;,
		owner=&amp;gt;&#39;debian-transmission&#39;,
		group=&amp;gt;&#39;debian-transmission&#39;,
		require=&amp;gt;File[&#39;/srv/torrents/&#39;],
	}
 
	file {&#39;/srv/torrents/torrent-data/&#39;:
		ensure=&amp;gt;&#39;directory&#39;,
		owner=&amp;gt;&#39;debian-transmission&#39;,
		group=&amp;gt;&#39;debian-transmission&#39;,
		require=&amp;gt;File[&#39;/srv/torrents/&#39;],
	}
 
	file {&#39;/etc/transmission-daemon/settings.json&#39;:
		source=&amp;gt;&#39;puppet:///modules/torrent/settings.json&#39;,
		owner=&amp;gt;&#39;debian-transmission&#39;,
		group=&amp;gt;&#39;debian-transmission&#39;,
		require=&amp;gt;Exec[&#39;transmission-daemon stop&#39;],
	}
 
	define add_torrents {
 
		file {$name:
			path=&amp;gt;&amp;quot;/srv/torrents/torrent-files/$name&amp;quot;,
			source=&amp;gt;&amp;quot;puppet:///modules/torrent/$name&amp;quot;,
			owner=&amp;gt;&#39;debian-transmission&#39;,
			group=&amp;gt;&#39;debian-transmission&#39;,
		}
	}
 
	$torrents =
		[
		&amp;quot;ubuntu-12.04.1-desktop-i386.iso.torrent&amp;quot;,
		&amp;quot;ubuntu-12.04.1-alternate-amd64.iso.torrent&amp;quot;,
		&amp;quot;ubuntu-12.04.1-server-amd64.iso.torrent&amp;quot;,
		&amp;quot;ubuntu-12.04.1-alternate-i386.iso.torrent&amp;quot;,
		&amp;quot;ubuntu-12.04.1-server-i386.iso.torrent&amp;quot;,
		&amp;quot;ubuntu-12.04.1-desktop-amd64.iso.torrent&amp;quot;
		]
 
	add_torrents { $torrents:
		require=&amp;gt;Service[&#39;transmission-daemon&#39;],
	 }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;close-up&quot; tabindex=&quot;-1&quot;&gt;Close up &lt;a class=&quot;header-anchor&quot; href=&quot;https://www.lennu.net/2015/automate-your-transmission-torrent-clients-with-puppet%20copy/automate-your-transmission-torrent-clients-with-puppet/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The actual torrent data can be found at &lt;code&gt;/srv/torrents/torrent-data/&lt;/code&gt; and if anyone wants to use this module, its all GPLv2 so go ahead.&lt;/p&gt;
&lt;p&gt;This is my last post for now in this series of Puppet. I have found that it is really a great tool to do automating which I had only a little experience before. If I ever have a chance to automate something important, I will surely use Puppet for it.&lt;/p&gt;
&lt;p&gt;Thanks goes to &lt;a href=&quot;http://terokarvinen.com/&quot;&gt;Tero Karvinen&lt;/a&gt; who gave a course about Puppet at HAAGA-HELIA University of Applied Sciences.&lt;/p&gt;
</content>
	</entry>
</feed>
